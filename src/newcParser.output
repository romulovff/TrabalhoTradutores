State 25 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 64 conflicts: 1 shift/reduce
State 110 conflicts: 1 shift/reduce
State 111 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce
State 115 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce
State 119 conflicts: 1 shift/reduce
State 120 conflicts: 1 shift/reduce
State 121 conflicts: 1 shift/reduce
State 122 conflicts: 14 shift/reduce
State 252 conflicts: 1 shift/reduce
State 259 conflicts: 1 shift/reduce
State 266 conflicts: 1 shift/reduce
State 272 conflicts: 1 shift/reduce
State 273 conflicts: 1 shift/reduce
State 274 conflicts: 1 shift/reduce
State 275 conflicts: 1 shift/reduce
State 276 conflicts: 1 shift/reduce
State 277 conflicts: 1 shift/reduce
State 278 conflicts: 1 shift/reduce
State 279 conflicts: 1 shift/reduce
State 280 conflicts: 1 shift/reduce
State 281 conflicts: 1 shift/reduce
State 282 conflicts: 1 shift/reduce
State 283 conflicts: 1 shift/reduce
State 284 conflicts: 14 shift/reduce
State 285 conflicts: 1 shift/reduce
State 286 conflicts: 1 shift/reduce
State 287 conflicts: 1 shift/reduce
State 288 conflicts: 1 shift/reduce
State 289 conflicts: 1 shift/reduce
State 290 conflicts: 1 shift/reduce
State 291 conflicts: 1 shift/reduce
State 292 conflicts: 1 shift/reduce
State 293 conflicts: 1 shift/reduce
State 294 conflicts: 1 shift/reduce
State 295 conflicts: 1 shift/reduce
State 296 conflicts: 1 shift/reduce
State 297 conflicts: 14 shift/reduce
State 298 conflicts: 1 shift/reduce
State 299 conflicts: 1 shift/reduce
State 300 conflicts: 1 shift/reduce
State 301 conflicts: 1 shift/reduce
State 302 conflicts: 1 shift/reduce
State 303 conflicts: 1 shift/reduce
State 304 conflicts: 1 shift/reduce
State 305 conflicts: 1 shift/reduce
State 306 conflicts: 1 shift/reduce
State 307 conflicts: 1 shift/reduce
State 308 conflicts: 1 shift/reduce
State 309 conflicts: 1 shift/reduce
State 310 conflicts: 14 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: declarations_list

    2 declarations_list: declaration declarations_list
    3                  | declaration

    4 declaration: var_dec
    5            | func_dec

    6 func_dec: TYPE ID PARENL params_list PARENR STFUNC statement_list ENDFUNC
    7         | TYPE MAIN PARENL params_list PARENR STFUNC statement_list ENDFUNC

    8 params_list: parameter COMMA params_list
    9            | parameter
   10            | %empty

   11 parameter: TYPE ID

   12 statement_list: statement statement_list
   13               | %empty

   14 statement: ret_st
   15          | var_dec
   16          | io_ops
   17          | basic_ops
   18          | assign_value
   19          | expression

   20 basic_ops: if_ops
   21          | FOR PARENL log_op PARENR STFUNC statement_list ENDFUNC
   22          | FORALL PARENL in_set PARENR set_op SEMIC
   23          | FORALL PARENL in_set PARENR STFUNC statement_list ENDFUNC

   24 if_ops: IF PARENL log_op PARENR STFUNC statement_list ENDFUNC
   25       | IF PARENL log_op PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

   26 ret_st: RETURN expression SEMIC

   27 var_dec: TYPE ID SEMIC

   28 io_ops: READ PARENL PARENR SEMIC
   29       | WRITE PARENL expression PARENR SEMIC
   30       | WRITELN PARENL expression PARENR SEMIC

   31 expression: ID
   32           | INTEGER
   33           | DECIMAL
   34           | CHAR
   35           | STRING
   36           | EMPTY
   37           | math_op
   38           | set_op
   39           | log_op
   40           | func_call
   41           | expression SEMIC
   42           | PARENL expression PARENR

   43 math_op: expression ADD expression
   44        | expression SUB expression
   45        | expression DIV expression
   46        | expression MULT expression

   47 set_op: ADDSET PARENL in_set PARENR
   48       | REMOVE PARENL in_set PARENR
   49       | EXISTS PARENL in_set PARENR

   50 log_op: in_set
   51       | ISTYPE PARENL expression PARENR
   52       | expression SMALLER expression
   53       | expression GREATER expression
   54       | expression SMALLEQ expression
   55       | expression GREATEQ expression
   56       | expression EQUALS expression
   57       | expression DIFFERENT expression
   58       | expression OR expression
   59       | expression AND expression
   60       | NEG expression

   61 func_call: ID PARENL args_list PARENR

   62 in_set: expression IN expression

   63 args_list: %empty
   64          | expression COMMA args_list
   65          | expression

   66 assign_value: ID ASSIGN expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <str> (258) 6 11 27 31 61 66
    TYPE <str> (259) 6 7 11 27
    INTEGER <integer> (260) 32
    DECIMAL <dec> (261) 33
    STRING <str> (262) 35
    CHAR <str> (263) 34
    EMPTY <str> (264) 36
    ADD (265) 43
    SUB (266) 44
    MULT (267) 46
    DIV (268) 45
    SEMIC (269) 22 26 27 28 29 30 41
    OR (270) 58
    AND (271) 59
    SMALLER (272) 52
    GREATER (273) 53
    SMALLEQ (274) 54
    GREATEQ (275) 55
    EQUALS (276) 56
    DIFFERENT (277) 57
    ASSIGN (278) 66
    NEG (279) 60
    IF (280) 24 25
    ELSE (281) 25
    FOR (282) 21
    READ (283) 28
    WRITE (284) 29
    WRITELN (285) 30
    MAIN (286) 7
    RETURN (287) 26
    IN (288) 62
    ISTYPE (289) 51
    ADDSET (290) 47
    REMOVE (291) 48
    EXISTS (292) 49
    FORALL (293) 22 23
    COMMA (294) 8 64
    STFUNC (295) 6 7 21 23 24 25
    ENDFUNC (296) 6 7 21 23 24 25
    PARENL (297) 6 7 21 22 23 24 25 28 29 30 42 47 48 49 51 61
    PARENR (298) 6 7 21 22 23 24 25 28 29 30 42 47 48 49 51 61


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    prog (45)
        on left: 1
        on right: 0
    declarations_list <ast> (46)
        on left: 2 3
        on right: 1 2
    declaration <ast> (47)
        on left: 4 5
        on right: 2 3
    func_dec <ast> (48)
        on left: 6 7
        on right: 5
    params_list <ast> (49)
        on left: 8 9 10
        on right: 6 7 8
    parameter <ast> (50)
        on left: 11
        on right: 8 9
    statement_list <ast> (51)
        on left: 12 13
        on right: 6 7 12 21 23 24 25
    statement <ast> (52)
        on left: 14 15 16 17 18 19
        on right: 12
    basic_ops <ast> (53)
        on left: 20 21 22 23
        on right: 17
    if_ops <ast> (54)
        on left: 24 25
        on right: 20
    ret_st <ast> (55)
        on left: 26
        on right: 14
    var_dec <ast> (56)
        on left: 27
        on right: 4 15
    io_ops <ast> (57)
        on left: 28 29 30
        on right: 16
    expression <ast> (58)
        on left: 31 32 33 34 35 36 37 38 39 40 41 42
        on right: 19 26 29 30 41 42 43 44 45 46 51 52 53 54 55 56 57 58 59 60 62 64 65 66
    math_op <ast> (59)
        on left: 43 44 45 46
        on right: 37
    set_op <ast> (60)
        on left: 47 48 49
        on right: 22 38
    log_op <ast> (61)
        on left: 50 51 52 53 54 55 56 57 58 59 60
        on right: 21 24 25 39
    func_call <ast> (62)
        on left: 61
        on right: 40
    in_set <ast> (63)
        on left: 62
        on right: 22 23 47 48 49 50
    args_list (64)
        on left: 63 64 65
        on right: 61 64
    assign_value <ast> (65)
        on left: 66
        on right: 18


State 0

    0 $accept: • prog $end

    TYPE  shift, and go to state 1

    prog               go to state 2
    declarations_list  go to state 3
    declaration        go to state 4
    func_dec           go to state 5
    var_dec            go to state 6


State 1

    6 func_dec: TYPE • ID PARENL params_list PARENR STFUNC statement_list ENDFUNC
    7         | TYPE • MAIN PARENL params_list PARENR STFUNC statement_list ENDFUNC
   27 var_dec: TYPE • ID SEMIC

    ID    shift, and go to state 7
    MAIN  shift, and go to state 8


State 2

    0 $accept: prog • $end

    $end  shift, and go to state 9


State 3

    1 prog: declarations_list •

    $end  reduce using rule 1 (prog)


State 4

    2 declarations_list: declaration • declarations_list
    3                  | declaration •

    TYPE  shift, and go to state 1

    $end  reduce using rule 3 (declarations_list)

    declarations_list  go to state 10
    declaration        go to state 4
    func_dec           go to state 5
    var_dec            go to state 6


State 5

    5 declaration: func_dec •

    $end  reduce using rule 5 (declaration)
    TYPE  reduce using rule 5 (declaration)


State 6

    4 declaration: var_dec •

    $end  reduce using rule 4 (declaration)
    TYPE  reduce using rule 4 (declaration)


State 7

    6 func_dec: TYPE ID • PARENL params_list PARENR STFUNC statement_list ENDFUNC
   27 var_dec: TYPE ID • SEMIC

    SEMIC   shift, and go to state 11
    PARENL  shift, and go to state 12


State 8

    7 func_dec: TYPE MAIN • PARENL params_list PARENR STFUNC statement_list ENDFUNC

    PARENL  shift, and go to state 13


State 9

    0 $accept: prog $end •

    $default  accept


State 10

    2 declarations_list: declaration declarations_list •

    $end  reduce using rule 2 (declarations_list)


State 11

   27 var_dec: TYPE ID SEMIC •

    $end  reduce using rule 27 (var_dec)
    TYPE  reduce using rule 27 (var_dec)


State 12

    6 func_dec: TYPE ID PARENL • params_list PARENR STFUNC statement_list ENDFUNC

    TYPE  shift, and go to state 14

    PARENR  reduce using rule 10 (params_list)

    params_list  go to state 15
    parameter    go to state 16


State 13

    7 func_dec: TYPE MAIN PARENL • params_list PARENR STFUNC statement_list ENDFUNC

    TYPE  shift, and go to state 14

    PARENR  reduce using rule 10 (params_list)

    params_list  go to state 17
    parameter    go to state 16


State 14

   11 parameter: TYPE • ID

    ID  shift, and go to state 18


State 15

    6 func_dec: TYPE ID PARENL params_list • PARENR STFUNC statement_list ENDFUNC

    PARENR  shift, and go to state 19


State 16

    8 params_list: parameter • COMMA params_list
    9            | parameter •

    COMMA  shift, and go to state 20

    PARENR  reduce using rule 9 (params_list)


State 17

    7 func_dec: TYPE MAIN PARENL params_list • PARENR STFUNC statement_list ENDFUNC

    PARENR  shift, and go to state 21


State 18

   11 parameter: TYPE ID •

    COMMA   reduce using rule 11 (parameter)
    PARENR  reduce using rule 11 (parameter)


State 19

    6 func_dec: TYPE ID PARENL params_list PARENR • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 22


State 20

    8 params_list: parameter COMMA • params_list

    TYPE  shift, and go to state 14

    PARENR  reduce using rule 10 (params_list)

    params_list  go to state 23
    parameter    go to state 16


State 21

    7 func_dec: TYPE MAIN PARENL params_list PARENR • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 24


State 22

    6 func_dec: TYPE ID PARENL params_list PARENR STFUNC • statement_list ENDFUNC

    ID       shift, and go to state 25
    TYPE     shift, and go to state 26
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    IF       shift, and go to state 33
    FOR      shift, and go to state 34
    READ     shift, and go to state 35
    WRITE    shift, and go to state 36
    WRITELN  shift, and go to state 37
    RETURN   shift, and go to state 38
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    FORALL   shift, and go to state 43
    PARENL   shift, and go to state 44

    ENDFUNC  reduce using rule 13 (statement_list)

    statement_list  go to state 45
    statement       go to state 46
    basic_ops       go to state 47
    if_ops          go to state 48
    ret_st          go to state 49
    var_dec         go to state 50
    io_ops          go to state 51
    expression      go to state 52
    math_op         go to state 53
    set_op          go to state 54
    log_op          go to state 55
    func_call       go to state 56
    in_set          go to state 57
    assign_value    go to state 58


State 23

    8 params_list: parameter COMMA params_list •

    PARENR  reduce using rule 8 (params_list)


State 24

    7 func_dec: TYPE MAIN PARENL params_list PARENR STFUNC • statement_list ENDFUNC

    ID       shift, and go to state 25
    TYPE     shift, and go to state 26
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    IF       shift, and go to state 33
    FOR      shift, and go to state 34
    READ     shift, and go to state 35
    WRITE    shift, and go to state 36
    WRITELN  shift, and go to state 37
    RETURN   shift, and go to state 38
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    FORALL   shift, and go to state 43
    PARENL   shift, and go to state 44

    ENDFUNC  reduce using rule 13 (statement_list)

    statement_list  go to state 59
    statement       go to state 46
    basic_ops       go to state 47
    if_ops          go to state 48
    ret_st          go to state 49
    var_dec         go to state 50
    io_ops          go to state 51
    expression      go to state 52
    math_op         go to state 53
    set_op          go to state 54
    log_op          go to state 55
    func_call       go to state 56
    in_set          go to state 57
    assign_value    go to state 58


State 25

   31 expression: ID •
   61 func_call: ID • PARENL args_list PARENR
   66 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 60
    PARENL  shift, and go to state 61

    ID         reduce using rule 31 (expression)
    TYPE       reduce using rule 31 (expression)
    INTEGER    reduce using rule 31 (expression)
    DECIMAL    reduce using rule 31 (expression)
    STRING     reduce using rule 31 (expression)
    CHAR       reduce using rule 31 (expression)
    EMPTY      reduce using rule 31 (expression)
    ADD        reduce using rule 31 (expression)
    SUB        reduce using rule 31 (expression)
    MULT       reduce using rule 31 (expression)
    DIV        reduce using rule 31 (expression)
    SEMIC      reduce using rule 31 (expression)
    OR         reduce using rule 31 (expression)
    AND        reduce using rule 31 (expression)
    SMALLER    reduce using rule 31 (expression)
    GREATER    reduce using rule 31 (expression)
    SMALLEQ    reduce using rule 31 (expression)
    GREATEQ    reduce using rule 31 (expression)
    EQUALS     reduce using rule 31 (expression)
    DIFFERENT  reduce using rule 31 (expression)
    NEG        reduce using rule 31 (expression)
    IF         reduce using rule 31 (expression)
    FOR        reduce using rule 31 (expression)
    READ       reduce using rule 31 (expression)
    WRITE      reduce using rule 31 (expression)
    WRITELN    reduce using rule 31 (expression)
    RETURN     reduce using rule 31 (expression)
    IN         reduce using rule 31 (expression)
    ISTYPE     reduce using rule 31 (expression)
    ADDSET     reduce using rule 31 (expression)
    REMOVE     reduce using rule 31 (expression)
    EXISTS     reduce using rule 31 (expression)
    FORALL     reduce using rule 31 (expression)
    ENDFUNC    reduce using rule 31 (expression)
    PARENL     [reduce using rule 31 (expression)]

    shift/reduce conflict on token PARENL:
       31 expression: ID •
       61 func_call: ID • PARENL args_list PARENR
      First example: statement_list
      Shift derivation
        statement_list
        ↳ statement_list
      Second example: PARENR statement_list
      Reduce derivation
        statement_list
        ↳ PARENR statement_list
                 ↳ statement statement_list
                   ↳ ε



State 26

   27 var_dec: TYPE • ID SEMIC

    ID  shift, and go to state 62


State 27

   32 expression: INTEGER •

    ID         reduce using rule 32 (expression)
    TYPE       reduce using rule 32 (expression)
    INTEGER    reduce using rule 32 (expression)
    DECIMAL    reduce using rule 32 (expression)
    STRING     reduce using rule 32 (expression)
    CHAR       reduce using rule 32 (expression)
    EMPTY      reduce using rule 32 (expression)
    ADD        reduce using rule 32 (expression)
    SUB        reduce using rule 32 (expression)
    MULT       reduce using rule 32 (expression)
    DIV        reduce using rule 32 (expression)
    SEMIC      reduce using rule 32 (expression)
    OR         reduce using rule 32 (expression)
    AND        reduce using rule 32 (expression)
    SMALLER    reduce using rule 32 (expression)
    GREATER    reduce using rule 32 (expression)
    SMALLEQ    reduce using rule 32 (expression)
    GREATEQ    reduce using rule 32 (expression)
    EQUALS     reduce using rule 32 (expression)
    DIFFERENT  reduce using rule 32 (expression)
    NEG        reduce using rule 32 (expression)
    IF         reduce using rule 32 (expression)
    FOR        reduce using rule 32 (expression)
    READ       reduce using rule 32 (expression)
    WRITE      reduce using rule 32 (expression)
    WRITELN    reduce using rule 32 (expression)
    RETURN     reduce using rule 32 (expression)
    IN         reduce using rule 32 (expression)
    ISTYPE     reduce using rule 32 (expression)
    ADDSET     reduce using rule 32 (expression)
    REMOVE     reduce using rule 32 (expression)
    EXISTS     reduce using rule 32 (expression)
    FORALL     reduce using rule 32 (expression)
    ENDFUNC    reduce using rule 32 (expression)
    PARENL     reduce using rule 32 (expression)


State 28

   33 expression: DECIMAL •

    ID         reduce using rule 33 (expression)
    TYPE       reduce using rule 33 (expression)
    INTEGER    reduce using rule 33 (expression)
    DECIMAL    reduce using rule 33 (expression)
    STRING     reduce using rule 33 (expression)
    CHAR       reduce using rule 33 (expression)
    EMPTY      reduce using rule 33 (expression)
    ADD        reduce using rule 33 (expression)
    SUB        reduce using rule 33 (expression)
    MULT       reduce using rule 33 (expression)
    DIV        reduce using rule 33 (expression)
    SEMIC      reduce using rule 33 (expression)
    OR         reduce using rule 33 (expression)
    AND        reduce using rule 33 (expression)
    SMALLER    reduce using rule 33 (expression)
    GREATER    reduce using rule 33 (expression)
    SMALLEQ    reduce using rule 33 (expression)
    GREATEQ    reduce using rule 33 (expression)
    EQUALS     reduce using rule 33 (expression)
    DIFFERENT  reduce using rule 33 (expression)
    NEG        reduce using rule 33 (expression)
    IF         reduce using rule 33 (expression)
    FOR        reduce using rule 33 (expression)
    READ       reduce using rule 33 (expression)
    WRITE      reduce using rule 33 (expression)
    WRITELN    reduce using rule 33 (expression)
    RETURN     reduce using rule 33 (expression)
    IN         reduce using rule 33 (expression)
    ISTYPE     reduce using rule 33 (expression)
    ADDSET     reduce using rule 33 (expression)
    REMOVE     reduce using rule 33 (expression)
    EXISTS     reduce using rule 33 (expression)
    FORALL     reduce using rule 33 (expression)
    ENDFUNC    reduce using rule 33 (expression)
    PARENL     reduce using rule 33 (expression)


State 29

   35 expression: STRING •

    ID         reduce using rule 35 (expression)
    TYPE       reduce using rule 35 (expression)
    INTEGER    reduce using rule 35 (expression)
    DECIMAL    reduce using rule 35 (expression)
    STRING     reduce using rule 35 (expression)
    CHAR       reduce using rule 35 (expression)
    EMPTY      reduce using rule 35 (expression)
    ADD        reduce using rule 35 (expression)
    SUB        reduce using rule 35 (expression)
    MULT       reduce using rule 35 (expression)
    DIV        reduce using rule 35 (expression)
    SEMIC      reduce using rule 35 (expression)
    OR         reduce using rule 35 (expression)
    AND        reduce using rule 35 (expression)
    SMALLER    reduce using rule 35 (expression)
    GREATER    reduce using rule 35 (expression)
    SMALLEQ    reduce using rule 35 (expression)
    GREATEQ    reduce using rule 35 (expression)
    EQUALS     reduce using rule 35 (expression)
    DIFFERENT  reduce using rule 35 (expression)
    NEG        reduce using rule 35 (expression)
    IF         reduce using rule 35 (expression)
    FOR        reduce using rule 35 (expression)
    READ       reduce using rule 35 (expression)
    WRITE      reduce using rule 35 (expression)
    WRITELN    reduce using rule 35 (expression)
    RETURN     reduce using rule 35 (expression)
    IN         reduce using rule 35 (expression)
    ISTYPE     reduce using rule 35 (expression)
    ADDSET     reduce using rule 35 (expression)
    REMOVE     reduce using rule 35 (expression)
    EXISTS     reduce using rule 35 (expression)
    FORALL     reduce using rule 35 (expression)
    ENDFUNC    reduce using rule 35 (expression)
    PARENL     reduce using rule 35 (expression)


State 30

   34 expression: CHAR •

    ID         reduce using rule 34 (expression)
    TYPE       reduce using rule 34 (expression)
    INTEGER    reduce using rule 34 (expression)
    DECIMAL    reduce using rule 34 (expression)
    STRING     reduce using rule 34 (expression)
    CHAR       reduce using rule 34 (expression)
    EMPTY      reduce using rule 34 (expression)
    ADD        reduce using rule 34 (expression)
    SUB        reduce using rule 34 (expression)
    MULT       reduce using rule 34 (expression)
    DIV        reduce using rule 34 (expression)
    SEMIC      reduce using rule 34 (expression)
    OR         reduce using rule 34 (expression)
    AND        reduce using rule 34 (expression)
    SMALLER    reduce using rule 34 (expression)
    GREATER    reduce using rule 34 (expression)
    SMALLEQ    reduce using rule 34 (expression)
    GREATEQ    reduce using rule 34 (expression)
    EQUALS     reduce using rule 34 (expression)
    DIFFERENT  reduce using rule 34 (expression)
    NEG        reduce using rule 34 (expression)
    IF         reduce using rule 34 (expression)
    FOR        reduce using rule 34 (expression)
    READ       reduce using rule 34 (expression)
    WRITE      reduce using rule 34 (expression)
    WRITELN    reduce using rule 34 (expression)
    RETURN     reduce using rule 34 (expression)
    IN         reduce using rule 34 (expression)
    ISTYPE     reduce using rule 34 (expression)
    ADDSET     reduce using rule 34 (expression)
    REMOVE     reduce using rule 34 (expression)
    EXISTS     reduce using rule 34 (expression)
    FORALL     reduce using rule 34 (expression)
    ENDFUNC    reduce using rule 34 (expression)
    PARENL     reduce using rule 34 (expression)


State 31

   36 expression: EMPTY •

    ID         reduce using rule 36 (expression)
    TYPE       reduce using rule 36 (expression)
    INTEGER    reduce using rule 36 (expression)
    DECIMAL    reduce using rule 36 (expression)
    STRING     reduce using rule 36 (expression)
    CHAR       reduce using rule 36 (expression)
    EMPTY      reduce using rule 36 (expression)
    ADD        reduce using rule 36 (expression)
    SUB        reduce using rule 36 (expression)
    MULT       reduce using rule 36 (expression)
    DIV        reduce using rule 36 (expression)
    SEMIC      reduce using rule 36 (expression)
    OR         reduce using rule 36 (expression)
    AND        reduce using rule 36 (expression)
    SMALLER    reduce using rule 36 (expression)
    GREATER    reduce using rule 36 (expression)
    SMALLEQ    reduce using rule 36 (expression)
    GREATEQ    reduce using rule 36 (expression)
    EQUALS     reduce using rule 36 (expression)
    DIFFERENT  reduce using rule 36 (expression)
    NEG        reduce using rule 36 (expression)
    IF         reduce using rule 36 (expression)
    FOR        reduce using rule 36 (expression)
    READ       reduce using rule 36 (expression)
    WRITE      reduce using rule 36 (expression)
    WRITELN    reduce using rule 36 (expression)
    RETURN     reduce using rule 36 (expression)
    IN         reduce using rule 36 (expression)
    ISTYPE     reduce using rule 36 (expression)
    ADDSET     reduce using rule 36 (expression)
    REMOVE     reduce using rule 36 (expression)
    EXISTS     reduce using rule 36 (expression)
    FORALL     reduce using rule 36 (expression)
    ENDFUNC    reduce using rule 36 (expression)
    PARENL     reduce using rule 36 (expression)


State 32

   60 log_op: NEG • expression

    ID       shift, and go to state 63
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    PARENL   shift, and go to state 44

    expression  go to state 64
    math_op     go to state 53
    set_op      go to state 54
    log_op      go to state 55
    func_call   go to state 56
    in_set      go to state 57


State 33

   24 if_ops: IF • PARENL log_op PARENR STFUNC statement_list ENDFUNC
   25       | IF • PARENL log_op PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    PARENL  shift, and go to state 65


State 34

   21 basic_ops: FOR • PARENL log_op PARENR STFUNC statement_list ENDFUNC

    PARENL  shift, and go to state 66


State 35

   28 io_ops: READ • PARENL PARENR SEMIC

    PARENL  shift, and go to state 67


State 36

   29 io_ops: WRITE • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 68


State 37

   30 io_ops: WRITELN • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 69


State 38

   26 ret_st: RETURN • expression SEMIC

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 70
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 169


State 39

   51 log_op: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 71


State 40

   47 set_op: ADDSET • PARENL in_set PARENR

    PARENL  shift, and go to state 72


State 41

   48 set_op: REMOVE • PARENL in_set PARENR

    PARENL  shift, and go to state 73


State 42

   49 set_op: EXISTS • PARENL in_set PARENR

    PARENL  shift, and go to state 74


State 43

   22 basic_ops: FORALL • PARENL in_set PARENR set_op SEMIC
   23          | FORALL • PARENL in_set PARENR STFUNC statement_list ENDFUNC

    PARENL  shift, and go to state 75


State 44

   42 expression: PARENL • expression PARENR

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 76
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 45

    6 func_dec: TYPE ID PARENL params_list PARENR STFUNC statement_list • ENDFUNC

    ENDFUNC  shift, and go to state 77


State 46

   12 statement_list: statement • statement_list

    ID       shift, and go to state 25
    TYPE     shift, and go to state 26
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    IF       shift, and go to state 33
    FOR      shift, and go to state 34
    READ     shift, and go to state 35
    WRITE    shift, and go to state 36
    WRITELN  shift, and go to state 37
    RETURN   shift, and go to state 38
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    FORALL   shift, and go to state 43
    PARENL   shift, and go to state 44

    ENDFUNC  reduce using rule 13 (statement_list)

    statement_list  go to state 78
    statement       go to state 46
    basic_ops       go to state 47
    if_ops          go to state 48
    ret_st          go to state 49
    var_dec         go to state 50
    io_ops          go to state 51
    expression      go to state 52
    math_op         go to state 53
    set_op          go to state 54
    log_op          go to state 55
    func_call       go to state 56
    in_set          go to state 57
    assign_value    go to state 58


State 47

   17 statement: basic_ops •

    ID       reduce using rule 17 (statement)
    TYPE     reduce using rule 17 (statement)
    INTEGER  reduce using rule 17 (statement)
    DECIMAL  reduce using rule 17 (statement)
    STRING   reduce using rule 17 (statement)
    CHAR     reduce using rule 17 (statement)
    EMPTY    reduce using rule 17 (statement)
    NEG      reduce using rule 17 (statement)
    IF       reduce using rule 17 (statement)
    FOR      reduce using rule 17 (statement)
    READ     reduce using rule 17 (statement)
    WRITE    reduce using rule 17 (statement)
    WRITELN  reduce using rule 17 (statement)
    RETURN   reduce using rule 17 (statement)
    ISTYPE   reduce using rule 17 (statement)
    ADDSET   reduce using rule 17 (statement)
    REMOVE   reduce using rule 17 (statement)
    EXISTS   reduce using rule 17 (statement)
    FORALL   reduce using rule 17 (statement)
    ENDFUNC  reduce using rule 17 (statement)
    PARENL   reduce using rule 17 (statement)


State 48

   20 basic_ops: if_ops •

    ID       reduce using rule 20 (basic_ops)
    TYPE     reduce using rule 20 (basic_ops)
    INTEGER  reduce using rule 20 (basic_ops)
    DECIMAL  reduce using rule 20 (basic_ops)
    STRING   reduce using rule 20 (basic_ops)
    CHAR     reduce using rule 20 (basic_ops)
    EMPTY    reduce using rule 20 (basic_ops)
    NEG      reduce using rule 20 (basic_ops)
    IF       reduce using rule 20 (basic_ops)
    FOR      reduce using rule 20 (basic_ops)
    READ     reduce using rule 20 (basic_ops)
    WRITE    reduce using rule 20 (basic_ops)
    WRITELN  reduce using rule 20 (basic_ops)
    RETURN   reduce using rule 20 (basic_ops)
    ISTYPE   reduce using rule 20 (basic_ops)
    ADDSET   reduce using rule 20 (basic_ops)
    REMOVE   reduce using rule 20 (basic_ops)
    EXISTS   reduce using rule 20 (basic_ops)
    FORALL   reduce using rule 20 (basic_ops)
    ENDFUNC  reduce using rule 20 (basic_ops)
    PARENL   reduce using rule 20 (basic_ops)


State 49

   14 statement: ret_st •

    ID       reduce using rule 14 (statement)
    TYPE     reduce using rule 14 (statement)
    INTEGER  reduce using rule 14 (statement)
    DECIMAL  reduce using rule 14 (statement)
    STRING   reduce using rule 14 (statement)
    CHAR     reduce using rule 14 (statement)
    EMPTY    reduce using rule 14 (statement)
    NEG      reduce using rule 14 (statement)
    IF       reduce using rule 14 (statement)
    FOR      reduce using rule 14 (statement)
    READ     reduce using rule 14 (statement)
    WRITE    reduce using rule 14 (statement)
    WRITELN  reduce using rule 14 (statement)
    RETURN   reduce using rule 14 (statement)
    ISTYPE   reduce using rule 14 (statement)
    ADDSET   reduce using rule 14 (statement)
    REMOVE   reduce using rule 14 (statement)
    EXISTS   reduce using rule 14 (statement)
    FORALL   reduce using rule 14 (statement)
    ENDFUNC  reduce using rule 14 (statement)
    PARENL   reduce using rule 14 (statement)


State 50

   15 statement: var_dec •

    ID       reduce using rule 15 (statement)
    TYPE     reduce using rule 15 (statement)
    INTEGER  reduce using rule 15 (statement)
    DECIMAL  reduce using rule 15 (statement)
    STRING   reduce using rule 15 (statement)
    CHAR     reduce using rule 15 (statement)
    EMPTY    reduce using rule 15 (statement)
    NEG      reduce using rule 15 (statement)
    IF       reduce using rule 15 (statement)
    FOR      reduce using rule 15 (statement)
    READ     reduce using rule 15 (statement)
    WRITE    reduce using rule 15 (statement)
    WRITELN  reduce using rule 15 (statement)
    RETURN   reduce using rule 15 (statement)
    ISTYPE   reduce using rule 15 (statement)
    ADDSET   reduce using rule 15 (statement)
    REMOVE   reduce using rule 15 (statement)
    EXISTS   reduce using rule 15 (statement)
    FORALL   reduce using rule 15 (statement)
    ENDFUNC  reduce using rule 15 (statement)
    PARENL   reduce using rule 15 (statement)


State 51

   16 statement: io_ops •

    ID       reduce using rule 16 (statement)
    TYPE     reduce using rule 16 (statement)
    INTEGER  reduce using rule 16 (statement)
    DECIMAL  reduce using rule 16 (statement)
    STRING   reduce using rule 16 (statement)
    CHAR     reduce using rule 16 (statement)
    EMPTY    reduce using rule 16 (statement)
    NEG      reduce using rule 16 (statement)
    IF       reduce using rule 16 (statement)
    FOR      reduce using rule 16 (statement)
    READ     reduce using rule 16 (statement)
    WRITE    reduce using rule 16 (statement)
    WRITELN  reduce using rule 16 (statement)
    RETURN   reduce using rule 16 (statement)
    ISTYPE   reduce using rule 16 (statement)
    ADDSET   reduce using rule 16 (statement)
    REMOVE   reduce using rule 16 (statement)
    EXISTS   reduce using rule 16 (statement)
    FORALL   reduce using rule 16 (statement)
    ENDFUNC  reduce using rule 16 (statement)
    PARENL   reduce using rule 16 (statement)


State 52

   19 statement: expression •
   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    ADD        shift, and go to state 79
    SUB        shift, and go to state 80
    MULT       shift, and go to state 81
    DIV        shift, and go to state 82
    SEMIC      shift, and go to state 83
    OR         shift, and go to state 84
    AND        shift, and go to state 85
    SMALLER    shift, and go to state 86
    GREATER    shift, and go to state 87
    SMALLEQ    shift, and go to state 88
    GREATEQ    shift, and go to state 89
    EQUALS     shift, and go to state 90
    DIFFERENT  shift, and go to state 91
    IN         shift, and go to state 92

    ID       reduce using rule 19 (statement)
    TYPE     reduce using rule 19 (statement)
    INTEGER  reduce using rule 19 (statement)
    DECIMAL  reduce using rule 19 (statement)
    STRING   reduce using rule 19 (statement)
    CHAR     reduce using rule 19 (statement)
    EMPTY    reduce using rule 19 (statement)
    NEG      reduce using rule 19 (statement)
    IF       reduce using rule 19 (statement)
    FOR      reduce using rule 19 (statement)
    READ     reduce using rule 19 (statement)
    WRITE    reduce using rule 19 (statement)
    WRITELN  reduce using rule 19 (statement)
    RETURN   reduce using rule 19 (statement)
    ISTYPE   reduce using rule 19 (statement)
    ADDSET   reduce using rule 19 (statement)
    REMOVE   reduce using rule 19 (statement)
    EXISTS   reduce using rule 19 (statement)
    FORALL   reduce using rule 19 (statement)
    ENDFUNC  reduce using rule 19 (statement)
    PARENL   reduce using rule 19 (statement)


State 53

   37 expression: math_op •

    ID         reduce using rule 37 (expression)
    TYPE       reduce using rule 37 (expression)
    INTEGER    reduce using rule 37 (expression)
    DECIMAL    reduce using rule 37 (expression)
    STRING     reduce using rule 37 (expression)
    CHAR       reduce using rule 37 (expression)
    EMPTY      reduce using rule 37 (expression)
    ADD        reduce using rule 37 (expression)
    SUB        reduce using rule 37 (expression)
    MULT       reduce using rule 37 (expression)
    DIV        reduce using rule 37 (expression)
    SEMIC      reduce using rule 37 (expression)
    OR         reduce using rule 37 (expression)
    AND        reduce using rule 37 (expression)
    SMALLER    reduce using rule 37 (expression)
    GREATER    reduce using rule 37 (expression)
    SMALLEQ    reduce using rule 37 (expression)
    GREATEQ    reduce using rule 37 (expression)
    EQUALS     reduce using rule 37 (expression)
    DIFFERENT  reduce using rule 37 (expression)
    NEG        reduce using rule 37 (expression)
    IF         reduce using rule 37 (expression)
    FOR        reduce using rule 37 (expression)
    READ       reduce using rule 37 (expression)
    WRITE      reduce using rule 37 (expression)
    WRITELN    reduce using rule 37 (expression)
    RETURN     reduce using rule 37 (expression)
    IN         reduce using rule 37 (expression)
    ISTYPE     reduce using rule 37 (expression)
    ADDSET     reduce using rule 37 (expression)
    REMOVE     reduce using rule 37 (expression)
    EXISTS     reduce using rule 37 (expression)
    FORALL     reduce using rule 37 (expression)
    ENDFUNC    reduce using rule 37 (expression)
    PARENL     reduce using rule 37 (expression)


State 54

   38 expression: set_op •

    ID         reduce using rule 38 (expression)
    TYPE       reduce using rule 38 (expression)
    INTEGER    reduce using rule 38 (expression)
    DECIMAL    reduce using rule 38 (expression)
    STRING     reduce using rule 38 (expression)
    CHAR       reduce using rule 38 (expression)
    EMPTY      reduce using rule 38 (expression)
    ADD        reduce using rule 38 (expression)
    SUB        reduce using rule 38 (expression)
    MULT       reduce using rule 38 (expression)
    DIV        reduce using rule 38 (expression)
    SEMIC      reduce using rule 38 (expression)
    OR         reduce using rule 38 (expression)
    AND        reduce using rule 38 (expression)
    SMALLER    reduce using rule 38 (expression)
    GREATER    reduce using rule 38 (expression)
    SMALLEQ    reduce using rule 38 (expression)
    GREATEQ    reduce using rule 38 (expression)
    EQUALS     reduce using rule 38 (expression)
    DIFFERENT  reduce using rule 38 (expression)
    NEG        reduce using rule 38 (expression)
    IF         reduce using rule 38 (expression)
    FOR        reduce using rule 38 (expression)
    READ       reduce using rule 38 (expression)
    WRITE      reduce using rule 38 (expression)
    WRITELN    reduce using rule 38 (expression)
    RETURN     reduce using rule 38 (expression)
    IN         reduce using rule 38 (expression)
    ISTYPE     reduce using rule 38 (expression)
    ADDSET     reduce using rule 38 (expression)
    REMOVE     reduce using rule 38 (expression)
    EXISTS     reduce using rule 38 (expression)
    FORALL     reduce using rule 38 (expression)
    ENDFUNC    reduce using rule 38 (expression)
    PARENL     reduce using rule 38 (expression)


State 55

   39 expression: log_op •

    ID         reduce using rule 39 (expression)
    TYPE       reduce using rule 39 (expression)
    INTEGER    reduce using rule 39 (expression)
    DECIMAL    reduce using rule 39 (expression)
    STRING     reduce using rule 39 (expression)
    CHAR       reduce using rule 39 (expression)
    EMPTY      reduce using rule 39 (expression)
    ADD        reduce using rule 39 (expression)
    SUB        reduce using rule 39 (expression)
    MULT       reduce using rule 39 (expression)
    DIV        reduce using rule 39 (expression)
    SEMIC      reduce using rule 39 (expression)
    OR         reduce using rule 39 (expression)
    AND        reduce using rule 39 (expression)
    SMALLER    reduce using rule 39 (expression)
    GREATER    reduce using rule 39 (expression)
    SMALLEQ    reduce using rule 39 (expression)
    GREATEQ    reduce using rule 39 (expression)
    EQUALS     reduce using rule 39 (expression)
    DIFFERENT  reduce using rule 39 (expression)
    NEG        reduce using rule 39 (expression)
    IF         reduce using rule 39 (expression)
    FOR        reduce using rule 39 (expression)
    READ       reduce using rule 39 (expression)
    WRITE      reduce using rule 39 (expression)
    WRITELN    reduce using rule 39 (expression)
    RETURN     reduce using rule 39 (expression)
    IN         reduce using rule 39 (expression)
    ISTYPE     reduce using rule 39 (expression)
    ADDSET     reduce using rule 39 (expression)
    REMOVE     reduce using rule 39 (expression)
    EXISTS     reduce using rule 39 (expression)
    FORALL     reduce using rule 39 (expression)
    ENDFUNC    reduce using rule 39 (expression)
    PARENL     reduce using rule 39 (expression)


State 56

   40 expression: func_call •

    ID         reduce using rule 40 (expression)
    TYPE       reduce using rule 40 (expression)
    INTEGER    reduce using rule 40 (expression)
    DECIMAL    reduce using rule 40 (expression)
    STRING     reduce using rule 40 (expression)
    CHAR       reduce using rule 40 (expression)
    EMPTY      reduce using rule 40 (expression)
    ADD        reduce using rule 40 (expression)
    SUB        reduce using rule 40 (expression)
    MULT       reduce using rule 40 (expression)
    DIV        reduce using rule 40 (expression)
    SEMIC      reduce using rule 40 (expression)
    OR         reduce using rule 40 (expression)
    AND        reduce using rule 40 (expression)
    SMALLER    reduce using rule 40 (expression)
    GREATER    reduce using rule 40 (expression)
    SMALLEQ    reduce using rule 40 (expression)
    GREATEQ    reduce using rule 40 (expression)
    EQUALS     reduce using rule 40 (expression)
    DIFFERENT  reduce using rule 40 (expression)
    NEG        reduce using rule 40 (expression)
    IF         reduce using rule 40 (expression)
    FOR        reduce using rule 40 (expression)
    READ       reduce using rule 40 (expression)
    WRITE      reduce using rule 40 (expression)
    WRITELN    reduce using rule 40 (expression)
    RETURN     reduce using rule 40 (expression)
    IN         reduce using rule 40 (expression)
    ISTYPE     reduce using rule 40 (expression)
    ADDSET     reduce using rule 40 (expression)
    REMOVE     reduce using rule 40 (expression)
    EXISTS     reduce using rule 40 (expression)
    FORALL     reduce using rule 40 (expression)
    ENDFUNC    reduce using rule 40 (expression)
    PARENL     reduce using rule 40 (expression)


State 57

   50 log_op: in_set •

    ID         reduce using rule 50 (log_op)
    TYPE       reduce using rule 50 (log_op)
    INTEGER    reduce using rule 50 (log_op)
    DECIMAL    reduce using rule 50 (log_op)
    STRING     reduce using rule 50 (log_op)
    CHAR       reduce using rule 50 (log_op)
    EMPTY      reduce using rule 50 (log_op)
    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    NEG        reduce using rule 50 (log_op)
    IF         reduce using rule 50 (log_op)
    FOR        reduce using rule 50 (log_op)
    READ       reduce using rule 50 (log_op)
    WRITE      reduce using rule 50 (log_op)
    WRITELN    reduce using rule 50 (log_op)
    RETURN     reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)
    ISTYPE     reduce using rule 50 (log_op)
    ADDSET     reduce using rule 50 (log_op)
    REMOVE     reduce using rule 50 (log_op)
    EXISTS     reduce using rule 50 (log_op)
    FORALL     reduce using rule 50 (log_op)
    ENDFUNC    reduce using rule 50 (log_op)
    PARENL     reduce using rule 50 (log_op)


State 58

   18 statement: assign_value •

    ID       reduce using rule 18 (statement)
    TYPE     reduce using rule 18 (statement)
    INTEGER  reduce using rule 18 (statement)
    DECIMAL  reduce using rule 18 (statement)
    STRING   reduce using rule 18 (statement)
    CHAR     reduce using rule 18 (statement)
    EMPTY    reduce using rule 18 (statement)
    NEG      reduce using rule 18 (statement)
    IF       reduce using rule 18 (statement)
    FOR      reduce using rule 18 (statement)
    READ     reduce using rule 18 (statement)
    WRITE    reduce using rule 18 (statement)
    WRITELN  reduce using rule 18 (statement)
    RETURN   reduce using rule 18 (statement)
    ISTYPE   reduce using rule 18 (statement)
    ADDSET   reduce using rule 18 (statement)
    REMOVE   reduce using rule 18 (statement)
    EXISTS   reduce using rule 18 (statement)
    FORALL   reduce using rule 18 (statement)
    ENDFUNC  reduce using rule 18 (statement)
    PARENL   reduce using rule 18 (statement)


State 59

    7 func_dec: TYPE MAIN PARENL params_list PARENR STFUNC statement_list • ENDFUNC

    ENDFUNC  shift, and go to state 93


State 60

   66 assign_value: ID ASSIGN • expression

    ID       shift, and go to state 63
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    PARENL   shift, and go to state 44

    expression  go to state 94
    math_op     go to state 53
    set_op      go to state 54
    log_op      go to state 55
    func_call   go to state 56
    in_set      go to state 57


State 61

   61 func_call: ID PARENL • args_list PARENR

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    PARENR  reduce using rule 63 (args_list)

    expression  go to state 95
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203
    args_list   go to state 96


State 62

   27 var_dec: TYPE ID • SEMIC

    SEMIC  shift, and go to state 204


State 63

   31 expression: ID •
   61 func_call: ID • PARENL args_list PARENR

    PARENL  shift, and go to state 61

    ID         reduce using rule 31 (expression)
    TYPE       reduce using rule 31 (expression)
    INTEGER    reduce using rule 31 (expression)
    DECIMAL    reduce using rule 31 (expression)
    STRING     reduce using rule 31 (expression)
    CHAR       reduce using rule 31 (expression)
    EMPTY      reduce using rule 31 (expression)
    ADD        reduce using rule 31 (expression)
    SUB        reduce using rule 31 (expression)
    MULT       reduce using rule 31 (expression)
    DIV        reduce using rule 31 (expression)
    SEMIC      reduce using rule 31 (expression)
    OR         reduce using rule 31 (expression)
    AND        reduce using rule 31 (expression)
    SMALLER    reduce using rule 31 (expression)
    GREATER    reduce using rule 31 (expression)
    SMALLEQ    reduce using rule 31 (expression)
    GREATEQ    reduce using rule 31 (expression)
    EQUALS     reduce using rule 31 (expression)
    DIFFERENT  reduce using rule 31 (expression)
    NEG        reduce using rule 31 (expression)
    IF         reduce using rule 31 (expression)
    FOR        reduce using rule 31 (expression)
    READ       reduce using rule 31 (expression)
    WRITE      reduce using rule 31 (expression)
    WRITELN    reduce using rule 31 (expression)
    RETURN     reduce using rule 31 (expression)
    IN         reduce using rule 31 (expression)
    ISTYPE     reduce using rule 31 (expression)
    ADDSET     reduce using rule 31 (expression)
    REMOVE     reduce using rule 31 (expression)
    EXISTS     reduce using rule 31 (expression)
    FORALL     reduce using rule 31 (expression)
    ENDFUNC    reduce using rule 31 (expression)
    PARENL     [reduce using rule 31 (expression)]

    shift/reduce conflict on token PARENL:
       31 expression: ID •
       61 func_call: ID • PARENL args_list PARENR
      First example: statement_list
      Shift derivation
        statement_list
        ↳ statement_list
      Second example: PARENR statement_list
      Reduce derivation
        statement_list
        ↳ PARENR statement_list
                 ↳ statement statement_list
                   ↳ ε



State 64

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   60       | NEG expression •
   62 in_set: expression • IN expression

    IN  shift, and go to state 92

    ID         reduce using rule 60 (log_op)
    TYPE       reduce using rule 60 (log_op)
    INTEGER    reduce using rule 60 (log_op)
    DECIMAL    reduce using rule 60 (log_op)
    STRING     reduce using rule 60 (log_op)
    CHAR       reduce using rule 60 (log_op)
    EMPTY      reduce using rule 60 (log_op)
    ADD        reduce using rule 60 (log_op)
    SUB        reduce using rule 60 (log_op)
    MULT       reduce using rule 60 (log_op)
    DIV        reduce using rule 60 (log_op)
    SEMIC      reduce using rule 60 (log_op)
    OR         reduce using rule 60 (log_op)
    AND        reduce using rule 60 (log_op)
    SMALLER    reduce using rule 60 (log_op)
    GREATER    reduce using rule 60 (log_op)
    SMALLEQ    reduce using rule 60 (log_op)
    GREATEQ    reduce using rule 60 (log_op)
    EQUALS     reduce using rule 60 (log_op)
    DIFFERENT  reduce using rule 60 (log_op)
    NEG        reduce using rule 60 (log_op)
    IF         reduce using rule 60 (log_op)
    FOR        reduce using rule 60 (log_op)
    READ       reduce using rule 60 (log_op)
    WRITE      reduce using rule 60 (log_op)
    WRITELN    reduce using rule 60 (log_op)
    RETURN     reduce using rule 60 (log_op)
    IN         [reduce using rule 60 (log_op)]
    ISTYPE     reduce using rule 60 (log_op)
    ADDSET     reduce using rule 60 (log_op)
    REMOVE     reduce using rule 60 (log_op)
    EXISTS     reduce using rule 60 (log_op)
    FORALL     reduce using rule 60 (log_op)
    ENDFUNC    reduce using rule 60 (log_op)
    PARENL     reduce using rule 60 (log_op)

    shift/reduce conflict on token IN:
       60 log_op: NEG expression •
       62 in_set: expression • IN expression
      First example: IN expression
      Shift derivation
        in_set
        ↳ IN expression
      Second example: IN expression
      Reduce derivation
        in_set
        ↳ IN expression



State 65

   24 if_ops: IF PARENL • log_op PARENR STFUNC statement_list ENDFUNC
   25       | IF PARENL • log_op PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 97
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 98
    func_call   go to state 168
    in_set      go to state 186


State 66

   21 basic_ops: FOR PARENL • log_op PARENR STFUNC statement_list ENDFUNC

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 97
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 99
    func_call   go to state 168
    in_set      go to state 186


State 67

   28 io_ops: READ PARENL • PARENR SEMIC

    PARENR  shift, and go to state 100


State 68

   29 io_ops: WRITE PARENL • expression PARENR SEMIC

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 101
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 69

   30 io_ops: WRITELN PARENL • expression PARENR SEMIC

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 102
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 70

   26 ret_st: RETURN expression • SEMIC
   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    ADD        shift, and go to state 205
    SUB        shift, and go to state 206
    MULT       shift, and go to state 207
    DIV        shift, and go to state 208
    SEMIC      shift, and go to state 103
    OR         shift, and go to state 209
    AND        shift, and go to state 210
    SMALLER    shift, and go to state 211
    GREATER    shift, and go to state 212
    SMALLEQ    shift, and go to state 213
    GREATEQ    shift, and go to state 214
    EQUALS     shift, and go to state 215
    DIFFERENT  shift, and go to state 216
    IN         shift, and go to state 217


State 71

   51 log_op: ISTYPE PARENL • expression PARENR

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 104
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 72

   47 set_op: ADDSET PARENL • in_set PARENR

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 105


State 73

   48 set_op: REMOVE PARENL • in_set PARENR

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 106


State 74

   49 set_op: EXISTS PARENL • in_set PARENR

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 107


State 75

   22 basic_ops: FORALL PARENL • in_set PARENR set_op SEMIC
   23          | FORALL PARENL • in_set PARENR STFUNC statement_list ENDFUNC

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 108


State 76

   41 expression: expression • SEMIC
   42           | PARENL expression • PARENR
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    ADD        shift, and go to state 219
    SUB        shift, and go to state 220
    MULT       shift, and go to state 221
    DIV        shift, and go to state 222
    SEMIC      shift, and go to state 223
    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232
    PARENR     shift, and go to state 109


State 77

    6 func_dec: TYPE ID PARENL params_list PARENR STFUNC statement_list ENDFUNC •

    $end  reduce using rule 6 (func_dec)
    TYPE  reduce using rule 6 (func_dec)


State 78

   12 statement_list: statement statement_list •

    ENDFUNC  reduce using rule 12 (statement_list)


State 79

   43 math_op: expression ADD • expression

    ID       shift, and go to state 63
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    PARENL   shift, and go to state 44

    expression  go to state 110
    math_op     go to state 53
    set_op      go to state 54
    log_op      go to state 55
    func_call   go to state 56
    in_set      go to state 57


State 80

   44 math_op: expression SUB • expression

    ID       shift, and go to state 63
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    PARENL   shift, and go to state 44

    expression  go to state 111
    math_op     go to state 53
    set_op      go to state 54
    log_op      go to state 55
    func_call   go to state 56
    in_set      go to state 57


State 81

   46 math_op: expression MULT • expression

    ID       shift, and go to state 63
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    PARENL   shift, and go to state 44

    expression  go to state 112
    math_op     go to state 53
    set_op      go to state 54
    log_op      go to state 55
    func_call   go to state 56
    in_set      go to state 57


State 82

   45 math_op: expression DIV • expression

    ID       shift, and go to state 63
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    PARENL   shift, and go to state 44

    expression  go to state 113
    math_op     go to state 53
    set_op      go to state 54
    log_op      go to state 55
    func_call   go to state 56
    in_set      go to state 57


State 83

   41 expression: expression SEMIC •

    ID         reduce using rule 41 (expression)
    TYPE       reduce using rule 41 (expression)
    INTEGER    reduce using rule 41 (expression)
    DECIMAL    reduce using rule 41 (expression)
    STRING     reduce using rule 41 (expression)
    CHAR       reduce using rule 41 (expression)
    EMPTY      reduce using rule 41 (expression)
    ADD        reduce using rule 41 (expression)
    SUB        reduce using rule 41 (expression)
    MULT       reduce using rule 41 (expression)
    DIV        reduce using rule 41 (expression)
    SEMIC      reduce using rule 41 (expression)
    OR         reduce using rule 41 (expression)
    AND        reduce using rule 41 (expression)
    SMALLER    reduce using rule 41 (expression)
    GREATER    reduce using rule 41 (expression)
    SMALLEQ    reduce using rule 41 (expression)
    GREATEQ    reduce using rule 41 (expression)
    EQUALS     reduce using rule 41 (expression)
    DIFFERENT  reduce using rule 41 (expression)
    NEG        reduce using rule 41 (expression)
    IF         reduce using rule 41 (expression)
    FOR        reduce using rule 41 (expression)
    READ       reduce using rule 41 (expression)
    WRITE      reduce using rule 41 (expression)
    WRITELN    reduce using rule 41 (expression)
    RETURN     reduce using rule 41 (expression)
    IN         reduce using rule 41 (expression)
    ISTYPE     reduce using rule 41 (expression)
    ADDSET     reduce using rule 41 (expression)
    REMOVE     reduce using rule 41 (expression)
    EXISTS     reduce using rule 41 (expression)
    FORALL     reduce using rule 41 (expression)
    ENDFUNC    reduce using rule 41 (expression)
    PARENL     reduce using rule 41 (expression)


State 84

   58 log_op: expression OR • expression

    ID       shift, and go to state 63
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    PARENL   shift, and go to state 44

    expression  go to state 114
    math_op     go to state 53
    set_op      go to state 54
    log_op      go to state 55
    func_call   go to state 56
    in_set      go to state 57


State 85

   59 log_op: expression AND • expression

    ID       shift, and go to state 63
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    PARENL   shift, and go to state 44

    expression  go to state 115
    math_op     go to state 53
    set_op      go to state 54
    log_op      go to state 55
    func_call   go to state 56
    in_set      go to state 57


State 86

   52 log_op: expression SMALLER • expression

    ID       shift, and go to state 63
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    PARENL   shift, and go to state 44

    expression  go to state 116
    math_op     go to state 53
    set_op      go to state 54
    log_op      go to state 55
    func_call   go to state 56
    in_set      go to state 57


State 87

   53 log_op: expression GREATER • expression

    ID       shift, and go to state 63
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    PARENL   shift, and go to state 44

    expression  go to state 117
    math_op     go to state 53
    set_op      go to state 54
    log_op      go to state 55
    func_call   go to state 56
    in_set      go to state 57


State 88

   54 log_op: expression SMALLEQ • expression

    ID       shift, and go to state 63
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    PARENL   shift, and go to state 44

    expression  go to state 118
    math_op     go to state 53
    set_op      go to state 54
    log_op      go to state 55
    func_call   go to state 56
    in_set      go to state 57


State 89

   55 log_op: expression GREATEQ • expression

    ID       shift, and go to state 63
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    PARENL   shift, and go to state 44

    expression  go to state 119
    math_op     go to state 53
    set_op      go to state 54
    log_op      go to state 55
    func_call   go to state 56
    in_set      go to state 57


State 90

   56 log_op: expression EQUALS • expression

    ID       shift, and go to state 63
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    PARENL   shift, and go to state 44

    expression  go to state 120
    math_op     go to state 53
    set_op      go to state 54
    log_op      go to state 55
    func_call   go to state 56
    in_set      go to state 57


State 91

   57 log_op: expression DIFFERENT • expression

    ID       shift, and go to state 63
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    PARENL   shift, and go to state 44

    expression  go to state 121
    math_op     go to state 53
    set_op      go to state 54
    log_op      go to state 55
    func_call   go to state 56
    in_set      go to state 57


State 92

   62 in_set: expression IN • expression

    ID       shift, and go to state 63
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    PARENL   shift, and go to state 44

    expression  go to state 122
    math_op     go to state 53
    set_op      go to state 54
    log_op      go to state 55
    func_call   go to state 56
    in_set      go to state 57


State 93

    7 func_dec: TYPE MAIN PARENL params_list PARENR STFUNC statement_list ENDFUNC •

    $end  reduce using rule 7 (func_dec)
    TYPE  reduce using rule 7 (func_dec)


State 94

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression
   66 assign_value: ID ASSIGN expression •

    ADD        shift, and go to state 79
    SUB        shift, and go to state 80
    MULT       shift, and go to state 81
    DIV        shift, and go to state 82
    SEMIC      shift, and go to state 83
    OR         shift, and go to state 84
    AND        shift, and go to state 85
    SMALLER    shift, and go to state 86
    GREATER    shift, and go to state 87
    SMALLEQ    shift, and go to state 88
    GREATEQ    shift, and go to state 89
    EQUALS     shift, and go to state 90
    DIFFERENT  shift, and go to state 91
    IN         shift, and go to state 92

    ID       reduce using rule 66 (assign_value)
    TYPE     reduce using rule 66 (assign_value)
    INTEGER  reduce using rule 66 (assign_value)
    DECIMAL  reduce using rule 66 (assign_value)
    STRING   reduce using rule 66 (assign_value)
    CHAR     reduce using rule 66 (assign_value)
    EMPTY    reduce using rule 66 (assign_value)
    NEG      reduce using rule 66 (assign_value)
    IF       reduce using rule 66 (assign_value)
    FOR      reduce using rule 66 (assign_value)
    READ     reduce using rule 66 (assign_value)
    WRITE    reduce using rule 66 (assign_value)
    WRITELN  reduce using rule 66 (assign_value)
    RETURN   reduce using rule 66 (assign_value)
    ISTYPE   reduce using rule 66 (assign_value)
    ADDSET   reduce using rule 66 (assign_value)
    REMOVE   reduce using rule 66 (assign_value)
    EXISTS   reduce using rule 66 (assign_value)
    FORALL   reduce using rule 66 (assign_value)
    ENDFUNC  reduce using rule 66 (assign_value)
    PARENL   reduce using rule 66 (assign_value)


State 95

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression
   64 args_list: expression • COMMA args_list
   65          | expression •

    ADD        shift, and go to state 233
    SUB        shift, and go to state 234
    MULT       shift, and go to state 235
    DIV        shift, and go to state 236
    SEMIC      shift, and go to state 237
    OR         shift, and go to state 238
    AND        shift, and go to state 239
    SMALLER    shift, and go to state 240
    GREATER    shift, and go to state 241
    SMALLEQ    shift, and go to state 242
    GREATEQ    shift, and go to state 243
    EQUALS     shift, and go to state 244
    DIFFERENT  shift, and go to state 245
    IN         shift, and go to state 246
    COMMA      shift, and go to state 123

    PARENR  reduce using rule 65 (args_list)


State 96

   61 func_call: ID PARENL args_list • PARENR

    PARENR  shift, and go to state 124


State 97

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    ADD        shift, and go to state 205
    SUB        shift, and go to state 206
    MULT       shift, and go to state 207
    DIV        shift, and go to state 208
    SEMIC      shift, and go to state 247
    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232


State 98

   24 if_ops: IF PARENL log_op • PARENR STFUNC statement_list ENDFUNC
   25       | IF PARENL log_op • PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC
   39 expression: log_op •

    PARENR  shift, and go to state 125

    ADD        reduce using rule 39 (expression)
    SUB        reduce using rule 39 (expression)
    MULT       reduce using rule 39 (expression)
    DIV        reduce using rule 39 (expression)
    SEMIC      reduce using rule 39 (expression)
    OR         reduce using rule 39 (expression)
    AND        reduce using rule 39 (expression)
    SMALLER    reduce using rule 39 (expression)
    GREATER    reduce using rule 39 (expression)
    SMALLEQ    reduce using rule 39 (expression)
    GREATEQ    reduce using rule 39 (expression)
    EQUALS     reduce using rule 39 (expression)
    DIFFERENT  reduce using rule 39 (expression)
    IN         reduce using rule 39 (expression)


State 99

   21 basic_ops: FOR PARENL log_op • PARENR STFUNC statement_list ENDFUNC
   39 expression: log_op •

    PARENR  shift, and go to state 126

    ADD        reduce using rule 39 (expression)
    SUB        reduce using rule 39 (expression)
    MULT       reduce using rule 39 (expression)
    DIV        reduce using rule 39 (expression)
    SEMIC      reduce using rule 39 (expression)
    OR         reduce using rule 39 (expression)
    AND        reduce using rule 39 (expression)
    SMALLER    reduce using rule 39 (expression)
    GREATER    reduce using rule 39 (expression)
    SMALLEQ    reduce using rule 39 (expression)
    GREATEQ    reduce using rule 39 (expression)
    EQUALS     reduce using rule 39 (expression)
    DIFFERENT  reduce using rule 39 (expression)
    IN         reduce using rule 39 (expression)


State 100

   28 io_ops: READ PARENL PARENR • SEMIC

    SEMIC  shift, and go to state 127


State 101

   29 io_ops: WRITE PARENL expression • PARENR SEMIC
   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    ADD        shift, and go to state 219
    SUB        shift, and go to state 220
    MULT       shift, and go to state 221
    DIV        shift, and go to state 222
    SEMIC      shift, and go to state 223
    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232
    PARENR     shift, and go to state 128


State 102

   30 io_ops: WRITELN PARENL expression • PARENR SEMIC
   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    ADD        shift, and go to state 219
    SUB        shift, and go to state 220
    MULT       shift, and go to state 221
    DIV        shift, and go to state 222
    SEMIC      shift, and go to state 223
    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232
    PARENR     shift, and go to state 129


State 103

   26 ret_st: RETURN expression SEMIC •
   41 expression: expression SEMIC •

    ID         reduce using rule 26 (ret_st)
    TYPE       reduce using rule 26 (ret_st)
    INTEGER    reduce using rule 26 (ret_st)
    DECIMAL    reduce using rule 26 (ret_st)
    STRING     reduce using rule 26 (ret_st)
    CHAR       reduce using rule 26 (ret_st)
    EMPTY      reduce using rule 26 (ret_st)
    ADD        reduce using rule 41 (expression)
    SUB        reduce using rule 41 (expression)
    MULT       reduce using rule 41 (expression)
    DIV        reduce using rule 41 (expression)
    SEMIC      reduce using rule 41 (expression)
    OR         reduce using rule 41 (expression)
    AND        reduce using rule 41 (expression)
    SMALLER    reduce using rule 41 (expression)
    GREATER    reduce using rule 41 (expression)
    SMALLEQ    reduce using rule 41 (expression)
    GREATEQ    reduce using rule 41 (expression)
    EQUALS     reduce using rule 41 (expression)
    DIFFERENT  reduce using rule 41 (expression)
    NEG        reduce using rule 26 (ret_st)
    IF         reduce using rule 26 (ret_st)
    FOR        reduce using rule 26 (ret_st)
    READ       reduce using rule 26 (ret_st)
    WRITE      reduce using rule 26 (ret_st)
    WRITELN    reduce using rule 26 (ret_st)
    RETURN     reduce using rule 26 (ret_st)
    IN         reduce using rule 41 (expression)
    ISTYPE     reduce using rule 26 (ret_st)
    ADDSET     reduce using rule 26 (ret_st)
    REMOVE     reduce using rule 26 (ret_st)
    EXISTS     reduce using rule 26 (ret_st)
    FORALL     reduce using rule 26 (ret_st)
    ENDFUNC    reduce using rule 26 (ret_st)
    PARENL     reduce using rule 26 (ret_st)


State 104

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   51 log_op: ISTYPE PARENL expression • PARENR
   52       | expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    ADD        shift, and go to state 219
    SUB        shift, and go to state 220
    MULT       shift, and go to state 221
    DIV        shift, and go to state 222
    SEMIC      shift, and go to state 223
    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232
    PARENR     shift, and go to state 130


State 105

   47 set_op: ADDSET PARENL in_set • PARENR
   50 log_op: in_set •

    PARENR  shift, and go to state 131

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 106

   48 set_op: REMOVE PARENL in_set • PARENR
   50 log_op: in_set •

    PARENR  shift, and go to state 132

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 107

   49 set_op: EXISTS PARENL in_set • PARENR
   50 log_op: in_set •

    PARENR  shift, and go to state 133

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 108

   22 basic_ops: FORALL PARENL in_set • PARENR set_op SEMIC
   23          | FORALL PARENL in_set • PARENR STFUNC statement_list ENDFUNC
   50 log_op: in_set •

    PARENR  shift, and go to state 134

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 109

   42 expression: PARENL expression PARENR •

    ID         reduce using rule 42 (expression)
    TYPE       reduce using rule 42 (expression)
    INTEGER    reduce using rule 42 (expression)
    DECIMAL    reduce using rule 42 (expression)
    STRING     reduce using rule 42 (expression)
    CHAR       reduce using rule 42 (expression)
    EMPTY      reduce using rule 42 (expression)
    ADD        reduce using rule 42 (expression)
    SUB        reduce using rule 42 (expression)
    MULT       reduce using rule 42 (expression)
    DIV        reduce using rule 42 (expression)
    SEMIC      reduce using rule 42 (expression)
    OR         reduce using rule 42 (expression)
    AND        reduce using rule 42 (expression)
    SMALLER    reduce using rule 42 (expression)
    GREATER    reduce using rule 42 (expression)
    SMALLEQ    reduce using rule 42 (expression)
    GREATEQ    reduce using rule 42 (expression)
    EQUALS     reduce using rule 42 (expression)
    DIFFERENT  reduce using rule 42 (expression)
    NEG        reduce using rule 42 (expression)
    IF         reduce using rule 42 (expression)
    FOR        reduce using rule 42 (expression)
    READ       reduce using rule 42 (expression)
    WRITE      reduce using rule 42 (expression)
    WRITELN    reduce using rule 42 (expression)
    RETURN     reduce using rule 42 (expression)
    IN         reduce using rule 42 (expression)
    ISTYPE     reduce using rule 42 (expression)
    ADDSET     reduce using rule 42 (expression)
    REMOVE     reduce using rule 42 (expression)
    EXISTS     reduce using rule 42 (expression)
    FORALL     reduce using rule 42 (expression)
    ENDFUNC    reduce using rule 42 (expression)
    PARENL     reduce using rule 42 (expression)


State 110

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   43        | expression ADD expression •
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 84
    AND        shift, and go to state 85
    SMALLER    shift, and go to state 86
    GREATER    shift, and go to state 87
    SMALLEQ    shift, and go to state 88
    GREATEQ    shift, and go to state 89
    EQUALS     shift, and go to state 90
    DIFFERENT  shift, and go to state 91
    IN         shift, and go to state 92

    ID       reduce using rule 43 (math_op)
    TYPE     reduce using rule 43 (math_op)
    INTEGER  reduce using rule 43 (math_op)
    DECIMAL  reduce using rule 43 (math_op)
    STRING   reduce using rule 43 (math_op)
    CHAR     reduce using rule 43 (math_op)
    EMPTY    reduce using rule 43 (math_op)
    ADD      reduce using rule 43 (math_op)
    SUB      reduce using rule 43 (math_op)
    MULT     reduce using rule 43 (math_op)
    DIV      reduce using rule 43 (math_op)
    SEMIC    reduce using rule 43 (math_op)
    NEG      reduce using rule 43 (math_op)
    IF       reduce using rule 43 (math_op)
    FOR      reduce using rule 43 (math_op)
    READ     reduce using rule 43 (math_op)
    WRITE    reduce using rule 43 (math_op)
    WRITELN  reduce using rule 43 (math_op)
    RETURN   reduce using rule 43 (math_op)
    IN       [reduce using rule 43 (math_op)]
    ISTYPE   reduce using rule 43 (math_op)
    ADDSET   reduce using rule 43 (math_op)
    REMOVE   reduce using rule 43 (math_op)
    EXISTS   reduce using rule 43 (math_op)
    FORALL   reduce using rule 43 (math_op)
    ENDFUNC  reduce using rule 43 (math_op)
    PARENL   reduce using rule 43 (math_op)

    shift/reduce conflict on token IN:
       43 math_op: expression ADD expression •
       62 in_set: expression • IN expression
      First example: ADD expression • IN expression
      Shift derivation
        math_op
        ↳ ADD in_set
              ↳ expression • IN expression
      Second example: ADD expression
      Reduce derivation
        math_op
        ↳ ADD expression



State 111

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   44        | expression SUB expression •
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 84
    AND        shift, and go to state 85
    SMALLER    shift, and go to state 86
    GREATER    shift, and go to state 87
    SMALLEQ    shift, and go to state 88
    GREATEQ    shift, and go to state 89
    EQUALS     shift, and go to state 90
    DIFFERENT  shift, and go to state 91
    IN         shift, and go to state 92

    ID       reduce using rule 44 (math_op)
    TYPE     reduce using rule 44 (math_op)
    INTEGER  reduce using rule 44 (math_op)
    DECIMAL  reduce using rule 44 (math_op)
    STRING   reduce using rule 44 (math_op)
    CHAR     reduce using rule 44 (math_op)
    EMPTY    reduce using rule 44 (math_op)
    ADD      reduce using rule 44 (math_op)
    SUB      reduce using rule 44 (math_op)
    MULT     reduce using rule 44 (math_op)
    DIV      reduce using rule 44 (math_op)
    SEMIC    reduce using rule 44 (math_op)
    NEG      reduce using rule 44 (math_op)
    IF       reduce using rule 44 (math_op)
    FOR      reduce using rule 44 (math_op)
    READ     reduce using rule 44 (math_op)
    WRITE    reduce using rule 44 (math_op)
    WRITELN  reduce using rule 44 (math_op)
    RETURN   reduce using rule 44 (math_op)
    IN       [reduce using rule 44 (math_op)]
    ISTYPE   reduce using rule 44 (math_op)
    ADDSET   reduce using rule 44 (math_op)
    REMOVE   reduce using rule 44 (math_op)
    EXISTS   reduce using rule 44 (math_op)
    FORALL   reduce using rule 44 (math_op)
    ENDFUNC  reduce using rule 44 (math_op)
    PARENL   reduce using rule 44 (math_op)

    shift/reduce conflict on token IN:
       44 math_op: expression SUB expression •
       62 in_set: expression • IN expression
      First example: SUB expression • IN expression
      Shift derivation
        math_op
        ↳ SUB in_set
              ↳ expression • IN expression
      Second example: SUB expression
      Reduce derivation
        math_op
        ↳ SUB expression



State 112

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   46        | expression MULT expression •
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 84
    AND        shift, and go to state 85
    SMALLER    shift, and go to state 86
    GREATER    shift, and go to state 87
    SMALLEQ    shift, and go to state 88
    GREATEQ    shift, and go to state 89
    EQUALS     shift, and go to state 90
    DIFFERENT  shift, and go to state 91
    IN         shift, and go to state 92

    ID       reduce using rule 46 (math_op)
    TYPE     reduce using rule 46 (math_op)
    INTEGER  reduce using rule 46 (math_op)
    DECIMAL  reduce using rule 46 (math_op)
    STRING   reduce using rule 46 (math_op)
    CHAR     reduce using rule 46 (math_op)
    EMPTY    reduce using rule 46 (math_op)
    ADD      reduce using rule 46 (math_op)
    SUB      reduce using rule 46 (math_op)
    MULT     reduce using rule 46 (math_op)
    DIV      reduce using rule 46 (math_op)
    SEMIC    reduce using rule 46 (math_op)
    NEG      reduce using rule 46 (math_op)
    IF       reduce using rule 46 (math_op)
    FOR      reduce using rule 46 (math_op)
    READ     reduce using rule 46 (math_op)
    WRITE    reduce using rule 46 (math_op)
    WRITELN  reduce using rule 46 (math_op)
    RETURN   reduce using rule 46 (math_op)
    IN       [reduce using rule 46 (math_op)]
    ISTYPE   reduce using rule 46 (math_op)
    ADDSET   reduce using rule 46 (math_op)
    REMOVE   reduce using rule 46 (math_op)
    EXISTS   reduce using rule 46 (math_op)
    FORALL   reduce using rule 46 (math_op)
    ENDFUNC  reduce using rule 46 (math_op)
    PARENL   reduce using rule 46 (math_op)

    shift/reduce conflict on token IN:
       46 math_op: expression MULT expression •
       62 in_set: expression • IN expression
      First example: MULT expression • IN expression
      Shift derivation
        math_op
        ↳ MULT in_set
               ↳ expression • IN expression
      Second example: MULT expression
      Reduce derivation
        math_op
        ↳ MULT expression



State 113

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   45        | expression DIV expression •
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 84
    AND        shift, and go to state 85
    SMALLER    shift, and go to state 86
    GREATER    shift, and go to state 87
    SMALLEQ    shift, and go to state 88
    GREATEQ    shift, and go to state 89
    EQUALS     shift, and go to state 90
    DIFFERENT  shift, and go to state 91
    IN         shift, and go to state 92

    ID       reduce using rule 45 (math_op)
    TYPE     reduce using rule 45 (math_op)
    INTEGER  reduce using rule 45 (math_op)
    DECIMAL  reduce using rule 45 (math_op)
    STRING   reduce using rule 45 (math_op)
    CHAR     reduce using rule 45 (math_op)
    EMPTY    reduce using rule 45 (math_op)
    ADD      reduce using rule 45 (math_op)
    SUB      reduce using rule 45 (math_op)
    MULT     reduce using rule 45 (math_op)
    DIV      reduce using rule 45 (math_op)
    SEMIC    reduce using rule 45 (math_op)
    NEG      reduce using rule 45 (math_op)
    IF       reduce using rule 45 (math_op)
    FOR      reduce using rule 45 (math_op)
    READ     reduce using rule 45 (math_op)
    WRITE    reduce using rule 45 (math_op)
    WRITELN  reduce using rule 45 (math_op)
    RETURN   reduce using rule 45 (math_op)
    IN       [reduce using rule 45 (math_op)]
    ISTYPE   reduce using rule 45 (math_op)
    ADDSET   reduce using rule 45 (math_op)
    REMOVE   reduce using rule 45 (math_op)
    EXISTS   reduce using rule 45 (math_op)
    FORALL   reduce using rule 45 (math_op)
    ENDFUNC  reduce using rule 45 (math_op)
    PARENL   reduce using rule 45 (math_op)

    shift/reduce conflict on token IN:
       45 math_op: expression DIV expression •
       62 in_set: expression • IN expression
      First example: DIV expression • IN expression
      Shift derivation
        math_op
        ↳ DIV in_set
              ↳ expression • IN expression
      Second example: DIV expression
      Reduce derivation
        math_op
        ↳ DIV expression



State 114

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   58       | expression OR expression •
   59       | expression • AND expression
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 88
    GREATEQ    shift, and go to state 89
    EQUALS     shift, and go to state 90
    DIFFERENT  shift, and go to state 91
    IN         shift, and go to state 92

    ID       reduce using rule 58 (log_op)
    TYPE     reduce using rule 58 (log_op)
    INTEGER  reduce using rule 58 (log_op)
    DECIMAL  reduce using rule 58 (log_op)
    STRING   reduce using rule 58 (log_op)
    CHAR     reduce using rule 58 (log_op)
    EMPTY    reduce using rule 58 (log_op)
    ADD      reduce using rule 58 (log_op)
    SUB      reduce using rule 58 (log_op)
    MULT     reduce using rule 58 (log_op)
    DIV      reduce using rule 58 (log_op)
    SEMIC    reduce using rule 58 (log_op)
    OR       reduce using rule 58 (log_op)
    AND      reduce using rule 58 (log_op)
    SMALLER  reduce using rule 58 (log_op)
    GREATER  reduce using rule 58 (log_op)
    NEG      reduce using rule 58 (log_op)
    IF       reduce using rule 58 (log_op)
    FOR      reduce using rule 58 (log_op)
    READ     reduce using rule 58 (log_op)
    WRITE    reduce using rule 58 (log_op)
    WRITELN  reduce using rule 58 (log_op)
    RETURN   reduce using rule 58 (log_op)
    IN       [reduce using rule 58 (log_op)]
    ISTYPE   reduce using rule 58 (log_op)
    ADDSET   reduce using rule 58 (log_op)
    REMOVE   reduce using rule 58 (log_op)
    EXISTS   reduce using rule 58 (log_op)
    FORALL   reduce using rule 58 (log_op)
    ENDFUNC  reduce using rule 58 (log_op)
    PARENL   reduce using rule 58 (log_op)

    shift/reduce conflict on token IN:
       58 log_op: expression OR expression •
       62 in_set: expression • IN expression
      Example: expression OR expression • IN expression
      Shift derivation
        log_op
        ↳ expression OR expression
                        ↳ log_op
                          ↳ in_set
                            ↳ expression • IN expression
      Reduce derivation
        log_op
        ↳ in_set
          ↳ expression                     IN expression
            ↳ log_op
              ↳ expression OR expression •



State 115

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   59       | expression AND expression •
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 88
    GREATEQ    shift, and go to state 89
    EQUALS     shift, and go to state 90
    DIFFERENT  shift, and go to state 91
    IN         shift, and go to state 92

    ID       reduce using rule 59 (log_op)
    TYPE     reduce using rule 59 (log_op)
    INTEGER  reduce using rule 59 (log_op)
    DECIMAL  reduce using rule 59 (log_op)
    STRING   reduce using rule 59 (log_op)
    CHAR     reduce using rule 59 (log_op)
    EMPTY    reduce using rule 59 (log_op)
    ADD      reduce using rule 59 (log_op)
    SUB      reduce using rule 59 (log_op)
    MULT     reduce using rule 59 (log_op)
    DIV      reduce using rule 59 (log_op)
    SEMIC    reduce using rule 59 (log_op)
    OR       reduce using rule 59 (log_op)
    AND      reduce using rule 59 (log_op)
    SMALLER  reduce using rule 59 (log_op)
    GREATER  reduce using rule 59 (log_op)
    NEG      reduce using rule 59 (log_op)
    IF       reduce using rule 59 (log_op)
    FOR      reduce using rule 59 (log_op)
    READ     reduce using rule 59 (log_op)
    WRITE    reduce using rule 59 (log_op)
    WRITELN  reduce using rule 59 (log_op)
    RETURN   reduce using rule 59 (log_op)
    IN       [reduce using rule 59 (log_op)]
    ISTYPE   reduce using rule 59 (log_op)
    ADDSET   reduce using rule 59 (log_op)
    REMOVE   reduce using rule 59 (log_op)
    EXISTS   reduce using rule 59 (log_op)
    FORALL   reduce using rule 59 (log_op)
    ENDFUNC  reduce using rule 59 (log_op)
    PARENL   reduce using rule 59 (log_op)

    shift/reduce conflict on token IN:
       59 log_op: expression AND expression •
       62 in_set: expression • IN expression
      Example: expression AND expression • IN expression
      Shift derivation
        log_op
        ↳ expression AND expression
                         ↳ log_op
                           ↳ in_set
                             ↳ expression • IN expression
      Reduce derivation
        log_op
        ↳ in_set
          ↳ expression                      IN expression
            ↳ log_op
              ↳ expression AND expression •



State 116

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   52       | expression SMALLER expression •
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 88
    GREATEQ    shift, and go to state 89
    EQUALS     shift, and go to state 90
    DIFFERENT  shift, and go to state 91
    IN         shift, and go to state 92

    ID       reduce using rule 52 (log_op)
    TYPE     reduce using rule 52 (log_op)
    INTEGER  reduce using rule 52 (log_op)
    DECIMAL  reduce using rule 52 (log_op)
    STRING   reduce using rule 52 (log_op)
    CHAR     reduce using rule 52 (log_op)
    EMPTY    reduce using rule 52 (log_op)
    ADD      reduce using rule 52 (log_op)
    SUB      reduce using rule 52 (log_op)
    MULT     reduce using rule 52 (log_op)
    DIV      reduce using rule 52 (log_op)
    SEMIC    reduce using rule 52 (log_op)
    OR       reduce using rule 52 (log_op)
    AND      reduce using rule 52 (log_op)
    SMALLER  reduce using rule 52 (log_op)
    GREATER  reduce using rule 52 (log_op)
    NEG      reduce using rule 52 (log_op)
    IF       reduce using rule 52 (log_op)
    FOR      reduce using rule 52 (log_op)
    READ     reduce using rule 52 (log_op)
    WRITE    reduce using rule 52 (log_op)
    WRITELN  reduce using rule 52 (log_op)
    RETURN   reduce using rule 52 (log_op)
    IN       [reduce using rule 52 (log_op)]
    ISTYPE   reduce using rule 52 (log_op)
    ADDSET   reduce using rule 52 (log_op)
    REMOVE   reduce using rule 52 (log_op)
    EXISTS   reduce using rule 52 (log_op)
    FORALL   reduce using rule 52 (log_op)
    ENDFUNC  reduce using rule 52 (log_op)
    PARENL   reduce using rule 52 (log_op)

    shift/reduce conflict on token IN:
       52 log_op: expression SMALLER expression •
       62 in_set: expression • IN expression
      Example: expression SMALLER expression • IN expression
      Shift derivation
        log_op
        ↳ expression SMALLER expression
                             ↳ log_op
                               ↳ in_set
                                 ↳ expression • IN expression
      Reduce derivation
        log_op
        ↳ in_set
          ↳ expression                          IN expression
            ↳ log_op
              ↳ expression SMALLER expression •



State 117

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   53       | expression GREATER expression •
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 88
    GREATEQ    shift, and go to state 89
    EQUALS     shift, and go to state 90
    DIFFERENT  shift, and go to state 91
    IN         shift, and go to state 92

    ID       reduce using rule 53 (log_op)
    TYPE     reduce using rule 53 (log_op)
    INTEGER  reduce using rule 53 (log_op)
    DECIMAL  reduce using rule 53 (log_op)
    STRING   reduce using rule 53 (log_op)
    CHAR     reduce using rule 53 (log_op)
    EMPTY    reduce using rule 53 (log_op)
    ADD      reduce using rule 53 (log_op)
    SUB      reduce using rule 53 (log_op)
    MULT     reduce using rule 53 (log_op)
    DIV      reduce using rule 53 (log_op)
    SEMIC    reduce using rule 53 (log_op)
    OR       reduce using rule 53 (log_op)
    AND      reduce using rule 53 (log_op)
    SMALLER  reduce using rule 53 (log_op)
    GREATER  reduce using rule 53 (log_op)
    NEG      reduce using rule 53 (log_op)
    IF       reduce using rule 53 (log_op)
    FOR      reduce using rule 53 (log_op)
    READ     reduce using rule 53 (log_op)
    WRITE    reduce using rule 53 (log_op)
    WRITELN  reduce using rule 53 (log_op)
    RETURN   reduce using rule 53 (log_op)
    IN       [reduce using rule 53 (log_op)]
    ISTYPE   reduce using rule 53 (log_op)
    ADDSET   reduce using rule 53 (log_op)
    REMOVE   reduce using rule 53 (log_op)
    EXISTS   reduce using rule 53 (log_op)
    FORALL   reduce using rule 53 (log_op)
    ENDFUNC  reduce using rule 53 (log_op)
    PARENL   reduce using rule 53 (log_op)

    shift/reduce conflict on token IN:
       53 log_op: expression GREATER expression •
       62 in_set: expression • IN expression
      Example: expression GREATER expression • IN expression
      Shift derivation
        log_op
        ↳ expression GREATER expression
                             ↳ log_op
                               ↳ in_set
                                 ↳ expression • IN expression
      Reduce derivation
        log_op
        ↳ in_set
          ↳ expression                          IN expression
            ↳ log_op
              ↳ expression GREATER expression •



State 118

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   54       | expression SMALLEQ expression •
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 92

    ID         reduce using rule 54 (log_op)
    TYPE       reduce using rule 54 (log_op)
    INTEGER    reduce using rule 54 (log_op)
    DECIMAL    reduce using rule 54 (log_op)
    STRING     reduce using rule 54 (log_op)
    CHAR       reduce using rule 54 (log_op)
    EMPTY      reduce using rule 54 (log_op)
    ADD        reduce using rule 54 (log_op)
    SUB        reduce using rule 54 (log_op)
    MULT       reduce using rule 54 (log_op)
    DIV        reduce using rule 54 (log_op)
    SEMIC      reduce using rule 54 (log_op)
    OR         reduce using rule 54 (log_op)
    AND        reduce using rule 54 (log_op)
    SMALLER    reduce using rule 54 (log_op)
    GREATER    reduce using rule 54 (log_op)
    SMALLEQ    reduce using rule 54 (log_op)
    GREATEQ    reduce using rule 54 (log_op)
    EQUALS     reduce using rule 54 (log_op)
    DIFFERENT  reduce using rule 54 (log_op)
    NEG        reduce using rule 54 (log_op)
    IF         reduce using rule 54 (log_op)
    FOR        reduce using rule 54 (log_op)
    READ       reduce using rule 54 (log_op)
    WRITE      reduce using rule 54 (log_op)
    WRITELN    reduce using rule 54 (log_op)
    RETURN     reduce using rule 54 (log_op)
    IN         [reduce using rule 54 (log_op)]
    ISTYPE     reduce using rule 54 (log_op)
    ADDSET     reduce using rule 54 (log_op)
    REMOVE     reduce using rule 54 (log_op)
    EXISTS     reduce using rule 54 (log_op)
    FORALL     reduce using rule 54 (log_op)
    ENDFUNC    reduce using rule 54 (log_op)
    PARENL     reduce using rule 54 (log_op)

    shift/reduce conflict on token IN:
       54 log_op: expression SMALLEQ expression •
       62 in_set: expression • IN expression
      Example: expression SMALLEQ expression • IN expression
      Shift derivation
        log_op
        ↳ expression SMALLEQ expression
                             ↳ log_op
                               ↳ in_set
                                 ↳ expression • IN expression
      Reduce derivation
        log_op
        ↳ in_set
          ↳ expression                          IN expression
            ↳ log_op
              ↳ expression SMALLEQ expression •



State 119

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   55       | expression GREATEQ expression •
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 92

    ID         reduce using rule 55 (log_op)
    TYPE       reduce using rule 55 (log_op)
    INTEGER    reduce using rule 55 (log_op)
    DECIMAL    reduce using rule 55 (log_op)
    STRING     reduce using rule 55 (log_op)
    CHAR       reduce using rule 55 (log_op)
    EMPTY      reduce using rule 55 (log_op)
    ADD        reduce using rule 55 (log_op)
    SUB        reduce using rule 55 (log_op)
    MULT       reduce using rule 55 (log_op)
    DIV        reduce using rule 55 (log_op)
    SEMIC      reduce using rule 55 (log_op)
    OR         reduce using rule 55 (log_op)
    AND        reduce using rule 55 (log_op)
    SMALLER    reduce using rule 55 (log_op)
    GREATER    reduce using rule 55 (log_op)
    SMALLEQ    reduce using rule 55 (log_op)
    GREATEQ    reduce using rule 55 (log_op)
    EQUALS     reduce using rule 55 (log_op)
    DIFFERENT  reduce using rule 55 (log_op)
    NEG        reduce using rule 55 (log_op)
    IF         reduce using rule 55 (log_op)
    FOR        reduce using rule 55 (log_op)
    READ       reduce using rule 55 (log_op)
    WRITE      reduce using rule 55 (log_op)
    WRITELN    reduce using rule 55 (log_op)
    RETURN     reduce using rule 55 (log_op)
    IN         [reduce using rule 55 (log_op)]
    ISTYPE     reduce using rule 55 (log_op)
    ADDSET     reduce using rule 55 (log_op)
    REMOVE     reduce using rule 55 (log_op)
    EXISTS     reduce using rule 55 (log_op)
    FORALL     reduce using rule 55 (log_op)
    ENDFUNC    reduce using rule 55 (log_op)
    PARENL     reduce using rule 55 (log_op)

    shift/reduce conflict on token IN:
       55 log_op: expression GREATEQ expression •
       62 in_set: expression • IN expression
      Example: expression GREATEQ expression • IN expression
      Shift derivation
        log_op
        ↳ expression GREATEQ expression
                             ↳ log_op
                               ↳ in_set
                                 ↳ expression • IN expression
      Reduce derivation
        log_op
        ↳ in_set
          ↳ expression                          IN expression
            ↳ log_op
              ↳ expression GREATEQ expression •



State 120

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   56       | expression EQUALS expression •
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 92

    ID         reduce using rule 56 (log_op)
    TYPE       reduce using rule 56 (log_op)
    INTEGER    reduce using rule 56 (log_op)
    DECIMAL    reduce using rule 56 (log_op)
    STRING     reduce using rule 56 (log_op)
    CHAR       reduce using rule 56 (log_op)
    EMPTY      reduce using rule 56 (log_op)
    ADD        reduce using rule 56 (log_op)
    SUB        reduce using rule 56 (log_op)
    MULT       reduce using rule 56 (log_op)
    DIV        reduce using rule 56 (log_op)
    SEMIC      reduce using rule 56 (log_op)
    OR         reduce using rule 56 (log_op)
    AND        reduce using rule 56 (log_op)
    SMALLER    reduce using rule 56 (log_op)
    GREATER    reduce using rule 56 (log_op)
    SMALLEQ    reduce using rule 56 (log_op)
    GREATEQ    reduce using rule 56 (log_op)
    EQUALS     reduce using rule 56 (log_op)
    DIFFERENT  reduce using rule 56 (log_op)
    NEG        reduce using rule 56 (log_op)
    IF         reduce using rule 56 (log_op)
    FOR        reduce using rule 56 (log_op)
    READ       reduce using rule 56 (log_op)
    WRITE      reduce using rule 56 (log_op)
    WRITELN    reduce using rule 56 (log_op)
    RETURN     reduce using rule 56 (log_op)
    IN         [reduce using rule 56 (log_op)]
    ISTYPE     reduce using rule 56 (log_op)
    ADDSET     reduce using rule 56 (log_op)
    REMOVE     reduce using rule 56 (log_op)
    EXISTS     reduce using rule 56 (log_op)
    FORALL     reduce using rule 56 (log_op)
    ENDFUNC    reduce using rule 56 (log_op)
    PARENL     reduce using rule 56 (log_op)

    shift/reduce conflict on token IN:
       56 log_op: expression EQUALS expression •
       62 in_set: expression • IN expression
      Example: expression EQUALS expression • IN expression
      Shift derivation
        log_op
        ↳ expression EQUALS expression
                            ↳ log_op
                              ↳ in_set
                                ↳ expression • IN expression
      Reduce derivation
        log_op
        ↳ in_set
          ↳ expression                         IN expression
            ↳ log_op
              ↳ expression EQUALS expression •



State 121

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   57       | expression DIFFERENT expression •
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 92

    ID         reduce using rule 57 (log_op)
    TYPE       reduce using rule 57 (log_op)
    INTEGER    reduce using rule 57 (log_op)
    DECIMAL    reduce using rule 57 (log_op)
    STRING     reduce using rule 57 (log_op)
    CHAR       reduce using rule 57 (log_op)
    EMPTY      reduce using rule 57 (log_op)
    ADD        reduce using rule 57 (log_op)
    SUB        reduce using rule 57 (log_op)
    MULT       reduce using rule 57 (log_op)
    DIV        reduce using rule 57 (log_op)
    SEMIC      reduce using rule 57 (log_op)
    OR         reduce using rule 57 (log_op)
    AND        reduce using rule 57 (log_op)
    SMALLER    reduce using rule 57 (log_op)
    GREATER    reduce using rule 57 (log_op)
    SMALLEQ    reduce using rule 57 (log_op)
    GREATEQ    reduce using rule 57 (log_op)
    EQUALS     reduce using rule 57 (log_op)
    DIFFERENT  reduce using rule 57 (log_op)
    NEG        reduce using rule 57 (log_op)
    IF         reduce using rule 57 (log_op)
    FOR        reduce using rule 57 (log_op)
    READ       reduce using rule 57 (log_op)
    WRITE      reduce using rule 57 (log_op)
    WRITELN    reduce using rule 57 (log_op)
    RETURN     reduce using rule 57 (log_op)
    IN         [reduce using rule 57 (log_op)]
    ISTYPE     reduce using rule 57 (log_op)
    ADDSET     reduce using rule 57 (log_op)
    REMOVE     reduce using rule 57 (log_op)
    EXISTS     reduce using rule 57 (log_op)
    FORALL     reduce using rule 57 (log_op)
    ENDFUNC    reduce using rule 57 (log_op)
    PARENL     reduce using rule 57 (log_op)

    shift/reduce conflict on token IN:
       57 log_op: expression DIFFERENT expression •
       62 in_set: expression • IN expression
      Example: expression DIFFERENT expression • IN expression
      Shift derivation
        log_op
        ↳ expression DIFFERENT expression
                               ↳ log_op
                                 ↳ in_set
                                   ↳ expression • IN expression
      Reduce derivation
        log_op
        ↳ in_set
          ↳ expression                            IN expression
            ↳ log_op
              ↳ expression DIFFERENT expression •



State 122

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression
   62       | expression IN expression •

    ADD        shift, and go to state 79
    SUB        shift, and go to state 80
    MULT       shift, and go to state 81
    DIV        shift, and go to state 82
    SEMIC      shift, and go to state 83
    OR         shift, and go to state 84
    AND        shift, and go to state 85
    SMALLER    shift, and go to state 86
    GREATER    shift, and go to state 87
    SMALLEQ    shift, and go to state 88
    GREATEQ    shift, and go to state 89
    EQUALS     shift, and go to state 90
    DIFFERENT  shift, and go to state 91
    IN         shift, and go to state 92

    ID         reduce using rule 62 (in_set)
    TYPE       reduce using rule 62 (in_set)
    INTEGER    reduce using rule 62 (in_set)
    DECIMAL    reduce using rule 62 (in_set)
    STRING     reduce using rule 62 (in_set)
    CHAR       reduce using rule 62 (in_set)
    EMPTY      reduce using rule 62 (in_set)
    ADD        [reduce using rule 62 (in_set)]
    SUB        [reduce using rule 62 (in_set)]
    MULT       [reduce using rule 62 (in_set)]
    DIV        [reduce using rule 62 (in_set)]
    SEMIC      [reduce using rule 62 (in_set)]
    OR         [reduce using rule 62 (in_set)]
    AND        [reduce using rule 62 (in_set)]
    SMALLER    [reduce using rule 62 (in_set)]
    GREATER    [reduce using rule 62 (in_set)]
    SMALLEQ    [reduce using rule 62 (in_set)]
    GREATEQ    [reduce using rule 62 (in_set)]
    EQUALS     [reduce using rule 62 (in_set)]
    DIFFERENT  [reduce using rule 62 (in_set)]
    NEG        reduce using rule 62 (in_set)
    IF         reduce using rule 62 (in_set)
    FOR        reduce using rule 62 (in_set)
    READ       reduce using rule 62 (in_set)
    WRITE      reduce using rule 62 (in_set)
    WRITELN    reduce using rule 62 (in_set)
    RETURN     reduce using rule 62 (in_set)
    IN         [reduce using rule 62 (in_set)]
    ISTYPE     reduce using rule 62 (in_set)
    ADDSET     reduce using rule 62 (in_set)
    REMOVE     reduce using rule 62 (in_set)
    EXISTS     reduce using rule 62 (in_set)
    FORALL     reduce using rule 62 (in_set)
    ENDFUNC    reduce using rule 62 (in_set)
    PARENL     reduce using rule 62 (in_set)

    shift/reduce conflict on token SEMIC:
       62 in_set: expression IN expression •
       41 expression: expression • SEMIC
      Example: expression IN expression • SEMIC
      Shift derivation
        expression
        ↳ log_op
          ↳ in_set
            ↳ expression IN expression
                            ↳ expression • SEMIC
      Reduce derivation
        expression
        ↳ expression                       SEMIC
          ↳ log_op
            ↳ in_set
              ↳ expression IN expression •

    shift/reduce conflict on token ADD:
       62 in_set: expression IN expression •
       43 math_op: expression • ADD expression
      Example: expression IN expression • ADD expression
      Shift derivation
        expression
        ↳ log_op
          ↳ in_set
            ↳ expression IN expression
                            ↳ math_op
                              ↳ expression • ADD expression
      Reduce derivation
        expression
        ↳ math_op
          ↳ expression                       ADD expression
            ↳ log_op
              ↳ in_set
                ↳ expression IN expression •

    shift/reduce conflict on token SUB:
       62 in_set: expression IN expression •
       44 math_op: expression • SUB expression
      Example: expression IN expression • SUB expression
      Shift derivation
        expression
        ↳ log_op
          ↳ in_set
            ↳ expression IN expression
                            ↳ math_op
                              ↳ expression • SUB expression
      Reduce derivation
        expression
        ↳ math_op
          ↳ expression                       SUB expression
            ↳ log_op
              ↳ in_set
                ↳ expression IN expression •

    shift/reduce conflict on token DIV:
       62 in_set: expression IN expression •
       45 math_op: expression • DIV expression
      Example: expression IN expression • DIV expression
      Shift derivation
        expression
        ↳ log_op
          ↳ in_set
            ↳ expression IN expression
                            ↳ math_op
                              ↳ expression • DIV expression
      Reduce derivation
        expression
        ↳ math_op
          ↳ expression                       DIV expression
            ↳ log_op
              ↳ in_set
                ↳ expression IN expression •

    shift/reduce conflict on token MULT:
       62 in_set: expression IN expression •
       46 math_op: expression • MULT expression
      Example: expression IN expression • MULT expression
      Shift derivation
        expression
        ↳ log_op
          ↳ in_set
            ↳ expression IN expression
                            ↳ math_op
                              ↳ expression • MULT expression
      Reduce derivation
        expression
        ↳ math_op
          ↳ expression                       MULT expression
            ↳ log_op
              ↳ in_set
                ↳ expression IN expression •

    shift/reduce conflict on token SMALLER:
       62 in_set: expression IN expression •
       52 log_op: expression • SMALLER expression
      Example: expression IN expression • SMALLER expression
      Shift derivation
        log_op
        ↳ in_set
          ↳ expression IN expression
                          ↳ log_op
                            ↳ expression • SMALLER expression
      Reduce derivation
        log_op
        ↳ expression                       SMALLER expression
          ↳ log_op
            ↳ in_set
              ↳ expression IN expression •

    shift/reduce conflict on token GREATER:
       62 in_set: expression IN expression •
       53 log_op: expression • GREATER expression
      Example: expression IN expression • GREATER expression
      Shift derivation
        log_op
        ↳ in_set
          ↳ expression IN expression
                          ↳ log_op
                            ↳ expression • GREATER expression
      Reduce derivation
        log_op
        ↳ expression                       GREATER expression
          ↳ log_op
            ↳ in_set
              ↳ expression IN expression •

    shift/reduce conflict on token SMALLEQ:
       62 in_set: expression IN expression •
       54 log_op: expression • SMALLEQ expression
      Example: expression IN expression • SMALLEQ expression
      Shift derivation
        log_op
        ↳ in_set
          ↳ expression IN expression
                          ↳ log_op
                            ↳ expression • SMALLEQ expression
      Reduce derivation
        log_op
        ↳ expression                       SMALLEQ expression
          ↳ log_op
            ↳ in_set
              ↳ expression IN expression •

    shift/reduce conflict on token GREATEQ:
       62 in_set: expression IN expression •
       55 log_op: expression • GREATEQ expression
      Example: expression IN expression • GREATEQ expression
      Shift derivation
        log_op
        ↳ in_set
          ↳ expression IN expression
                          ↳ log_op
                            ↳ expression • GREATEQ expression
      Reduce derivation
        log_op
        ↳ expression                       GREATEQ expression
          ↳ log_op
            ↳ in_set
              ↳ expression IN expression •

    shift/reduce conflict on token EQUALS:
       62 in_set: expression IN expression •
       56 log_op: expression • EQUALS expression
      Example: expression IN expression • EQUALS expression
      Shift derivation
        log_op
        ↳ in_set
          ↳ expression IN expression
                          ↳ log_op
                            ↳ expression • EQUALS expression
      Reduce derivation
        log_op
        ↳ expression                       EQUALS expression
          ↳ log_op
            ↳ in_set
              ↳ expression IN expression •

    shift/reduce conflict on token DIFFERENT:
       62 in_set: expression IN expression •
       57 log_op: expression • DIFFERENT expression
      Example: expression IN expression • DIFFERENT expression
      Shift derivation
        log_op
        ↳ in_set
          ↳ expression IN expression
                          ↳ log_op
                            ↳ expression • DIFFERENT expression
      Reduce derivation
        log_op
        ↳ expression                       DIFFERENT expression
          ↳ log_op
            ↳ in_set
              ↳ expression IN expression •

    shift/reduce conflict on token OR:
       62 in_set: expression IN expression •
       58 log_op: expression • OR expression
      Example: expression IN expression • OR expression
      Shift derivation
        log_op
        ↳ in_set
          ↳ expression IN expression
                          ↳ log_op
                            ↳ expression • OR expression
      Reduce derivation
        log_op
        ↳ expression                       OR expression
          ↳ log_op
            ↳ in_set
              ↳ expression IN expression •

    shift/reduce conflict on token AND:
       62 in_set: expression IN expression •
       59 log_op: expression • AND expression
      Example: expression IN expression • AND expression
      Shift derivation
        log_op
        ↳ in_set
          ↳ expression IN expression
                          ↳ log_op
                            ↳ expression • AND expression
      Reduce derivation
        log_op
        ↳ expression                       AND expression
          ↳ log_op
            ↳ in_set
              ↳ expression IN expression •

    shift/reduce conflict on token IN:
       62 in_set: expression IN expression •
       62 in_set: expression • IN expression
      Example: expression IN expression • IN expression
      Shift derivation
        in_set
        ↳ expression IN expression
                        ↳ log_op
                          ↳ in_set
                            ↳ expression • IN expression
      Reduce derivation
        in_set
        ↳ expression                       IN expression
          ↳ log_op
            ↳ in_set
              ↳ expression IN expression •



State 123

   64 args_list: expression COMMA • args_list

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    PARENR  reduce using rule 63 (args_list)

    expression  go to state 95
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203
    args_list   go to state 135


State 124

   61 func_call: ID PARENL args_list PARENR •

    ID         reduce using rule 61 (func_call)
    TYPE       reduce using rule 61 (func_call)
    INTEGER    reduce using rule 61 (func_call)
    DECIMAL    reduce using rule 61 (func_call)
    STRING     reduce using rule 61 (func_call)
    CHAR       reduce using rule 61 (func_call)
    EMPTY      reduce using rule 61 (func_call)
    ADD        reduce using rule 61 (func_call)
    SUB        reduce using rule 61 (func_call)
    MULT       reduce using rule 61 (func_call)
    DIV        reduce using rule 61 (func_call)
    SEMIC      reduce using rule 61 (func_call)
    OR         reduce using rule 61 (func_call)
    AND        reduce using rule 61 (func_call)
    SMALLER    reduce using rule 61 (func_call)
    GREATER    reduce using rule 61 (func_call)
    SMALLEQ    reduce using rule 61 (func_call)
    GREATEQ    reduce using rule 61 (func_call)
    EQUALS     reduce using rule 61 (func_call)
    DIFFERENT  reduce using rule 61 (func_call)
    NEG        reduce using rule 61 (func_call)
    IF         reduce using rule 61 (func_call)
    FOR        reduce using rule 61 (func_call)
    READ       reduce using rule 61 (func_call)
    WRITE      reduce using rule 61 (func_call)
    WRITELN    reduce using rule 61 (func_call)
    RETURN     reduce using rule 61 (func_call)
    IN         reduce using rule 61 (func_call)
    ISTYPE     reduce using rule 61 (func_call)
    ADDSET     reduce using rule 61 (func_call)
    REMOVE     reduce using rule 61 (func_call)
    EXISTS     reduce using rule 61 (func_call)
    FORALL     reduce using rule 61 (func_call)
    ENDFUNC    reduce using rule 61 (func_call)
    PARENL     reduce using rule 61 (func_call)


State 125

   24 if_ops: IF PARENL log_op PARENR • STFUNC statement_list ENDFUNC
   25       | IF PARENL log_op PARENR • STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 136


State 126

   21 basic_ops: FOR PARENL log_op PARENR • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 137


State 127

   28 io_ops: READ PARENL PARENR SEMIC •

    ID       reduce using rule 28 (io_ops)
    TYPE     reduce using rule 28 (io_ops)
    INTEGER  reduce using rule 28 (io_ops)
    DECIMAL  reduce using rule 28 (io_ops)
    STRING   reduce using rule 28 (io_ops)
    CHAR     reduce using rule 28 (io_ops)
    EMPTY    reduce using rule 28 (io_ops)
    NEG      reduce using rule 28 (io_ops)
    IF       reduce using rule 28 (io_ops)
    FOR      reduce using rule 28 (io_ops)
    READ     reduce using rule 28 (io_ops)
    WRITE    reduce using rule 28 (io_ops)
    WRITELN  reduce using rule 28 (io_ops)
    RETURN   reduce using rule 28 (io_ops)
    ISTYPE   reduce using rule 28 (io_ops)
    ADDSET   reduce using rule 28 (io_ops)
    REMOVE   reduce using rule 28 (io_ops)
    EXISTS   reduce using rule 28 (io_ops)
    FORALL   reduce using rule 28 (io_ops)
    ENDFUNC  reduce using rule 28 (io_ops)
    PARENL   reduce using rule 28 (io_ops)


State 128

   29 io_ops: WRITE PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 138


State 129

   30 io_ops: WRITELN PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 139


State 130

   51 log_op: ISTYPE PARENL expression PARENR •

    ID         reduce using rule 51 (log_op)
    TYPE       reduce using rule 51 (log_op)
    INTEGER    reduce using rule 51 (log_op)
    DECIMAL    reduce using rule 51 (log_op)
    STRING     reduce using rule 51 (log_op)
    CHAR       reduce using rule 51 (log_op)
    EMPTY      reduce using rule 51 (log_op)
    ADD        reduce using rule 51 (log_op)
    SUB        reduce using rule 51 (log_op)
    MULT       reduce using rule 51 (log_op)
    DIV        reduce using rule 51 (log_op)
    SEMIC      reduce using rule 51 (log_op)
    OR         reduce using rule 51 (log_op)
    AND        reduce using rule 51 (log_op)
    SMALLER    reduce using rule 51 (log_op)
    GREATER    reduce using rule 51 (log_op)
    SMALLEQ    reduce using rule 51 (log_op)
    GREATEQ    reduce using rule 51 (log_op)
    EQUALS     reduce using rule 51 (log_op)
    DIFFERENT  reduce using rule 51 (log_op)
    NEG        reduce using rule 51 (log_op)
    IF         reduce using rule 51 (log_op)
    FOR        reduce using rule 51 (log_op)
    READ       reduce using rule 51 (log_op)
    WRITE      reduce using rule 51 (log_op)
    WRITELN    reduce using rule 51 (log_op)
    RETURN     reduce using rule 51 (log_op)
    IN         reduce using rule 51 (log_op)
    ISTYPE     reduce using rule 51 (log_op)
    ADDSET     reduce using rule 51 (log_op)
    REMOVE     reduce using rule 51 (log_op)
    EXISTS     reduce using rule 51 (log_op)
    FORALL     reduce using rule 51 (log_op)
    ENDFUNC    reduce using rule 51 (log_op)
    PARENL     reduce using rule 51 (log_op)


State 131

   47 set_op: ADDSET PARENL in_set PARENR •

    ID         reduce using rule 47 (set_op)
    TYPE       reduce using rule 47 (set_op)
    INTEGER    reduce using rule 47 (set_op)
    DECIMAL    reduce using rule 47 (set_op)
    STRING     reduce using rule 47 (set_op)
    CHAR       reduce using rule 47 (set_op)
    EMPTY      reduce using rule 47 (set_op)
    ADD        reduce using rule 47 (set_op)
    SUB        reduce using rule 47 (set_op)
    MULT       reduce using rule 47 (set_op)
    DIV        reduce using rule 47 (set_op)
    SEMIC      reduce using rule 47 (set_op)
    OR         reduce using rule 47 (set_op)
    AND        reduce using rule 47 (set_op)
    SMALLER    reduce using rule 47 (set_op)
    GREATER    reduce using rule 47 (set_op)
    SMALLEQ    reduce using rule 47 (set_op)
    GREATEQ    reduce using rule 47 (set_op)
    EQUALS     reduce using rule 47 (set_op)
    DIFFERENT  reduce using rule 47 (set_op)
    NEG        reduce using rule 47 (set_op)
    IF         reduce using rule 47 (set_op)
    FOR        reduce using rule 47 (set_op)
    READ       reduce using rule 47 (set_op)
    WRITE      reduce using rule 47 (set_op)
    WRITELN    reduce using rule 47 (set_op)
    RETURN     reduce using rule 47 (set_op)
    IN         reduce using rule 47 (set_op)
    ISTYPE     reduce using rule 47 (set_op)
    ADDSET     reduce using rule 47 (set_op)
    REMOVE     reduce using rule 47 (set_op)
    EXISTS     reduce using rule 47 (set_op)
    FORALL     reduce using rule 47 (set_op)
    ENDFUNC    reduce using rule 47 (set_op)
    PARENL     reduce using rule 47 (set_op)


State 132

   48 set_op: REMOVE PARENL in_set PARENR •

    ID         reduce using rule 48 (set_op)
    TYPE       reduce using rule 48 (set_op)
    INTEGER    reduce using rule 48 (set_op)
    DECIMAL    reduce using rule 48 (set_op)
    STRING     reduce using rule 48 (set_op)
    CHAR       reduce using rule 48 (set_op)
    EMPTY      reduce using rule 48 (set_op)
    ADD        reduce using rule 48 (set_op)
    SUB        reduce using rule 48 (set_op)
    MULT       reduce using rule 48 (set_op)
    DIV        reduce using rule 48 (set_op)
    SEMIC      reduce using rule 48 (set_op)
    OR         reduce using rule 48 (set_op)
    AND        reduce using rule 48 (set_op)
    SMALLER    reduce using rule 48 (set_op)
    GREATER    reduce using rule 48 (set_op)
    SMALLEQ    reduce using rule 48 (set_op)
    GREATEQ    reduce using rule 48 (set_op)
    EQUALS     reduce using rule 48 (set_op)
    DIFFERENT  reduce using rule 48 (set_op)
    NEG        reduce using rule 48 (set_op)
    IF         reduce using rule 48 (set_op)
    FOR        reduce using rule 48 (set_op)
    READ       reduce using rule 48 (set_op)
    WRITE      reduce using rule 48 (set_op)
    WRITELN    reduce using rule 48 (set_op)
    RETURN     reduce using rule 48 (set_op)
    IN         reduce using rule 48 (set_op)
    ISTYPE     reduce using rule 48 (set_op)
    ADDSET     reduce using rule 48 (set_op)
    REMOVE     reduce using rule 48 (set_op)
    EXISTS     reduce using rule 48 (set_op)
    FORALL     reduce using rule 48 (set_op)
    ENDFUNC    reduce using rule 48 (set_op)
    PARENL     reduce using rule 48 (set_op)


State 133

   49 set_op: EXISTS PARENL in_set PARENR •

    ID         reduce using rule 49 (set_op)
    TYPE       reduce using rule 49 (set_op)
    INTEGER    reduce using rule 49 (set_op)
    DECIMAL    reduce using rule 49 (set_op)
    STRING     reduce using rule 49 (set_op)
    CHAR       reduce using rule 49 (set_op)
    EMPTY      reduce using rule 49 (set_op)
    ADD        reduce using rule 49 (set_op)
    SUB        reduce using rule 49 (set_op)
    MULT       reduce using rule 49 (set_op)
    DIV        reduce using rule 49 (set_op)
    SEMIC      reduce using rule 49 (set_op)
    OR         reduce using rule 49 (set_op)
    AND        reduce using rule 49 (set_op)
    SMALLER    reduce using rule 49 (set_op)
    GREATER    reduce using rule 49 (set_op)
    SMALLEQ    reduce using rule 49 (set_op)
    GREATEQ    reduce using rule 49 (set_op)
    EQUALS     reduce using rule 49 (set_op)
    DIFFERENT  reduce using rule 49 (set_op)
    NEG        reduce using rule 49 (set_op)
    IF         reduce using rule 49 (set_op)
    FOR        reduce using rule 49 (set_op)
    READ       reduce using rule 49 (set_op)
    WRITE      reduce using rule 49 (set_op)
    WRITELN    reduce using rule 49 (set_op)
    RETURN     reduce using rule 49 (set_op)
    IN         reduce using rule 49 (set_op)
    ISTYPE     reduce using rule 49 (set_op)
    ADDSET     reduce using rule 49 (set_op)
    REMOVE     reduce using rule 49 (set_op)
    EXISTS     reduce using rule 49 (set_op)
    FORALL     reduce using rule 49 (set_op)
    ENDFUNC    reduce using rule 49 (set_op)
    PARENL     reduce using rule 49 (set_op)


State 134

   22 basic_ops: FORALL PARENL in_set PARENR • set_op SEMIC
   23          | FORALL PARENL in_set PARENR • STFUNC statement_list ENDFUNC

    ADDSET  shift, and go to state 248
    REMOVE  shift, and go to state 249
    EXISTS  shift, and go to state 250
    STFUNC  shift, and go to state 140

    set_op  go to state 141


State 135

   64 args_list: expression COMMA args_list •

    PARENR  reduce using rule 64 (args_list)


State 136

   24 if_ops: IF PARENL log_op PARENR STFUNC • statement_list ENDFUNC
   25       | IF PARENL log_op PARENR STFUNC • statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    ID       shift, and go to state 25
    TYPE     shift, and go to state 26
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    IF       shift, and go to state 33
    FOR      shift, and go to state 34
    READ     shift, and go to state 35
    WRITE    shift, and go to state 36
    WRITELN  shift, and go to state 37
    RETURN   shift, and go to state 38
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    FORALL   shift, and go to state 43
    PARENL   shift, and go to state 44

    ENDFUNC  reduce using rule 13 (statement_list)

    statement_list  go to state 142
    statement       go to state 46
    basic_ops       go to state 47
    if_ops          go to state 48
    ret_st          go to state 49
    var_dec         go to state 50
    io_ops          go to state 51
    expression      go to state 52
    math_op         go to state 53
    set_op          go to state 54
    log_op          go to state 55
    func_call       go to state 56
    in_set          go to state 57
    assign_value    go to state 58


State 137

   21 basic_ops: FOR PARENL log_op PARENR STFUNC • statement_list ENDFUNC

    ID       shift, and go to state 25
    TYPE     shift, and go to state 26
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    IF       shift, and go to state 33
    FOR      shift, and go to state 34
    READ     shift, and go to state 35
    WRITE    shift, and go to state 36
    WRITELN  shift, and go to state 37
    RETURN   shift, and go to state 38
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    FORALL   shift, and go to state 43
    PARENL   shift, and go to state 44

    ENDFUNC  reduce using rule 13 (statement_list)

    statement_list  go to state 143
    statement       go to state 46
    basic_ops       go to state 47
    if_ops          go to state 48
    ret_st          go to state 49
    var_dec         go to state 50
    io_ops          go to state 51
    expression      go to state 52
    math_op         go to state 53
    set_op          go to state 54
    log_op          go to state 55
    func_call       go to state 56
    in_set          go to state 57
    assign_value    go to state 58


State 138

   29 io_ops: WRITE PARENL expression PARENR SEMIC •

    ID       reduce using rule 29 (io_ops)
    TYPE     reduce using rule 29 (io_ops)
    INTEGER  reduce using rule 29 (io_ops)
    DECIMAL  reduce using rule 29 (io_ops)
    STRING   reduce using rule 29 (io_ops)
    CHAR     reduce using rule 29 (io_ops)
    EMPTY    reduce using rule 29 (io_ops)
    NEG      reduce using rule 29 (io_ops)
    IF       reduce using rule 29 (io_ops)
    FOR      reduce using rule 29 (io_ops)
    READ     reduce using rule 29 (io_ops)
    WRITE    reduce using rule 29 (io_ops)
    WRITELN  reduce using rule 29 (io_ops)
    RETURN   reduce using rule 29 (io_ops)
    ISTYPE   reduce using rule 29 (io_ops)
    ADDSET   reduce using rule 29 (io_ops)
    REMOVE   reduce using rule 29 (io_ops)
    EXISTS   reduce using rule 29 (io_ops)
    FORALL   reduce using rule 29 (io_ops)
    ENDFUNC  reduce using rule 29 (io_ops)
    PARENL   reduce using rule 29 (io_ops)


State 139

   30 io_ops: WRITELN PARENL expression PARENR SEMIC •

    ID       reduce using rule 30 (io_ops)
    TYPE     reduce using rule 30 (io_ops)
    INTEGER  reduce using rule 30 (io_ops)
    DECIMAL  reduce using rule 30 (io_ops)
    STRING   reduce using rule 30 (io_ops)
    CHAR     reduce using rule 30 (io_ops)
    EMPTY    reduce using rule 30 (io_ops)
    NEG      reduce using rule 30 (io_ops)
    IF       reduce using rule 30 (io_ops)
    FOR      reduce using rule 30 (io_ops)
    READ     reduce using rule 30 (io_ops)
    WRITE    reduce using rule 30 (io_ops)
    WRITELN  reduce using rule 30 (io_ops)
    RETURN   reduce using rule 30 (io_ops)
    ISTYPE   reduce using rule 30 (io_ops)
    ADDSET   reduce using rule 30 (io_ops)
    REMOVE   reduce using rule 30 (io_ops)
    EXISTS   reduce using rule 30 (io_ops)
    FORALL   reduce using rule 30 (io_ops)
    ENDFUNC  reduce using rule 30 (io_ops)
    PARENL   reduce using rule 30 (io_ops)


State 140

   23 basic_ops: FORALL PARENL in_set PARENR STFUNC • statement_list ENDFUNC

    ID       shift, and go to state 25
    TYPE     shift, and go to state 26
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    IF       shift, and go to state 33
    FOR      shift, and go to state 34
    READ     shift, and go to state 35
    WRITE    shift, and go to state 36
    WRITELN  shift, and go to state 37
    RETURN   shift, and go to state 38
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    FORALL   shift, and go to state 43
    PARENL   shift, and go to state 44

    ENDFUNC  reduce using rule 13 (statement_list)

    statement_list  go to state 144
    statement       go to state 46
    basic_ops       go to state 47
    if_ops          go to state 48
    ret_st          go to state 49
    var_dec         go to state 50
    io_ops          go to state 51
    expression      go to state 52
    math_op         go to state 53
    set_op          go to state 54
    log_op          go to state 55
    func_call       go to state 56
    in_set          go to state 57
    assign_value    go to state 58


State 141

   22 basic_ops: FORALL PARENL in_set PARENR set_op • SEMIC

    SEMIC  shift, and go to state 145


State 142

   24 if_ops: IF PARENL log_op PARENR STFUNC statement_list • ENDFUNC
   25       | IF PARENL log_op PARENR STFUNC statement_list • ENDFUNC ELSE STFUNC statement_list ENDFUNC

    ENDFUNC  shift, and go to state 146


State 143

   21 basic_ops: FOR PARENL log_op PARENR STFUNC statement_list • ENDFUNC

    ENDFUNC  shift, and go to state 147


State 144

   23 basic_ops: FORALL PARENL in_set PARENR STFUNC statement_list • ENDFUNC

    ENDFUNC  shift, and go to state 148


State 145

   22 basic_ops: FORALL PARENL in_set PARENR set_op SEMIC •

    ID       reduce using rule 22 (basic_ops)
    TYPE     reduce using rule 22 (basic_ops)
    INTEGER  reduce using rule 22 (basic_ops)
    DECIMAL  reduce using rule 22 (basic_ops)
    STRING   reduce using rule 22 (basic_ops)
    CHAR     reduce using rule 22 (basic_ops)
    EMPTY    reduce using rule 22 (basic_ops)
    NEG      reduce using rule 22 (basic_ops)
    IF       reduce using rule 22 (basic_ops)
    FOR      reduce using rule 22 (basic_ops)
    READ     reduce using rule 22 (basic_ops)
    WRITE    reduce using rule 22 (basic_ops)
    WRITELN  reduce using rule 22 (basic_ops)
    RETURN   reduce using rule 22 (basic_ops)
    ISTYPE   reduce using rule 22 (basic_ops)
    ADDSET   reduce using rule 22 (basic_ops)
    REMOVE   reduce using rule 22 (basic_ops)
    EXISTS   reduce using rule 22 (basic_ops)
    FORALL   reduce using rule 22 (basic_ops)
    ENDFUNC  reduce using rule 22 (basic_ops)
    PARENL   reduce using rule 22 (basic_ops)


State 146

   24 if_ops: IF PARENL log_op PARENR STFUNC statement_list ENDFUNC •
   25       | IF PARENL log_op PARENR STFUNC statement_list ENDFUNC • ELSE STFUNC statement_list ENDFUNC

    ELSE  shift, and go to state 149

    ID       reduce using rule 24 (if_ops)
    TYPE     reduce using rule 24 (if_ops)
    INTEGER  reduce using rule 24 (if_ops)
    DECIMAL  reduce using rule 24 (if_ops)
    STRING   reduce using rule 24 (if_ops)
    CHAR     reduce using rule 24 (if_ops)
    EMPTY    reduce using rule 24 (if_ops)
    NEG      reduce using rule 24 (if_ops)
    IF       reduce using rule 24 (if_ops)
    FOR      reduce using rule 24 (if_ops)
    READ     reduce using rule 24 (if_ops)
    WRITE    reduce using rule 24 (if_ops)
    WRITELN  reduce using rule 24 (if_ops)
    RETURN   reduce using rule 24 (if_ops)
    ISTYPE   reduce using rule 24 (if_ops)
    ADDSET   reduce using rule 24 (if_ops)
    REMOVE   reduce using rule 24 (if_ops)
    EXISTS   reduce using rule 24 (if_ops)
    FORALL   reduce using rule 24 (if_ops)
    ENDFUNC  reduce using rule 24 (if_ops)
    PARENL   reduce using rule 24 (if_ops)


State 147

   21 basic_ops: FOR PARENL log_op PARENR STFUNC statement_list ENDFUNC •

    ID       reduce using rule 21 (basic_ops)
    TYPE     reduce using rule 21 (basic_ops)
    INTEGER  reduce using rule 21 (basic_ops)
    DECIMAL  reduce using rule 21 (basic_ops)
    STRING   reduce using rule 21 (basic_ops)
    CHAR     reduce using rule 21 (basic_ops)
    EMPTY    reduce using rule 21 (basic_ops)
    NEG      reduce using rule 21 (basic_ops)
    IF       reduce using rule 21 (basic_ops)
    FOR      reduce using rule 21 (basic_ops)
    READ     reduce using rule 21 (basic_ops)
    WRITE    reduce using rule 21 (basic_ops)
    WRITELN  reduce using rule 21 (basic_ops)
    RETURN   reduce using rule 21 (basic_ops)
    ISTYPE   reduce using rule 21 (basic_ops)
    ADDSET   reduce using rule 21 (basic_ops)
    REMOVE   reduce using rule 21 (basic_ops)
    EXISTS   reduce using rule 21 (basic_ops)
    FORALL   reduce using rule 21 (basic_ops)
    ENDFUNC  reduce using rule 21 (basic_ops)
    PARENL   reduce using rule 21 (basic_ops)


State 148

   23 basic_ops: FORALL PARENL in_set PARENR STFUNC statement_list ENDFUNC •

    ID       reduce using rule 23 (basic_ops)
    TYPE     reduce using rule 23 (basic_ops)
    INTEGER  reduce using rule 23 (basic_ops)
    DECIMAL  reduce using rule 23 (basic_ops)
    STRING   reduce using rule 23 (basic_ops)
    CHAR     reduce using rule 23 (basic_ops)
    EMPTY    reduce using rule 23 (basic_ops)
    NEG      reduce using rule 23 (basic_ops)
    IF       reduce using rule 23 (basic_ops)
    FOR      reduce using rule 23 (basic_ops)
    READ     reduce using rule 23 (basic_ops)
    WRITE    reduce using rule 23 (basic_ops)
    WRITELN  reduce using rule 23 (basic_ops)
    RETURN   reduce using rule 23 (basic_ops)
    ISTYPE   reduce using rule 23 (basic_ops)
    ADDSET   reduce using rule 23 (basic_ops)
    REMOVE   reduce using rule 23 (basic_ops)
    EXISTS   reduce using rule 23 (basic_ops)
    FORALL   reduce using rule 23 (basic_ops)
    ENDFUNC  reduce using rule 23 (basic_ops)
    PARENL   reduce using rule 23 (basic_ops)


State 149

   25 if_ops: IF PARENL log_op PARENR STFUNC statement_list ENDFUNC ELSE • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 150


State 150

   25 if_ops: IF PARENL log_op PARENR STFUNC statement_list ENDFUNC ELSE STFUNC • statement_list ENDFUNC

    ID       shift, and go to state 25
    TYPE     shift, and go to state 26
    INTEGER  shift, and go to state 27
    DECIMAL  shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    NEG      shift, and go to state 32
    IF       shift, and go to state 33
    FOR      shift, and go to state 34
    READ     shift, and go to state 35
    WRITE    shift, and go to state 36
    WRITELN  shift, and go to state 37
    RETURN   shift, and go to state 38
    ISTYPE   shift, and go to state 39
    ADDSET   shift, and go to state 40
    REMOVE   shift, and go to state 41
    EXISTS   shift, and go to state 42
    FORALL   shift, and go to state 43
    PARENL   shift, and go to state 44

    ENDFUNC  reduce using rule 13 (statement_list)

    statement_list  go to state 151
    statement       go to state 46
    basic_ops       go to state 47
    if_ops          go to state 48
    ret_st          go to state 49
    var_dec         go to state 50
    io_ops          go to state 51
    expression      go to state 52
    math_op         go to state 53
    set_op          go to state 54
    log_op          go to state 55
    func_call       go to state 56
    in_set          go to state 57
    assign_value    go to state 58


State 151

   25 if_ops: IF PARENL log_op PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list • ENDFUNC

    ENDFUNC  shift, and go to state 152


State 152

   25 if_ops: IF PARENL log_op PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC •

    ID       reduce using rule 25 (if_ops)
    TYPE     reduce using rule 25 (if_ops)
    INTEGER  reduce using rule 25 (if_ops)
    DECIMAL  reduce using rule 25 (if_ops)
    STRING   reduce using rule 25 (if_ops)
    CHAR     reduce using rule 25 (if_ops)
    EMPTY    reduce using rule 25 (if_ops)
    NEG      reduce using rule 25 (if_ops)
    IF       reduce using rule 25 (if_ops)
    FOR      reduce using rule 25 (if_ops)
    READ     reduce using rule 25 (if_ops)
    WRITE    reduce using rule 25 (if_ops)
    WRITELN  reduce using rule 25 (if_ops)
    RETURN   reduce using rule 25 (if_ops)
    ISTYPE   reduce using rule 25 (if_ops)
    ADDSET   reduce using rule 25 (if_ops)
    REMOVE   reduce using rule 25 (if_ops)
    EXISTS   reduce using rule 25 (if_ops)
    FORALL   reduce using rule 25 (if_ops)
    ENDFUNC  reduce using rule 25 (if_ops)
    PARENL   reduce using rule 25 (if_ops)


State 153

   31 expression: ID •
   61 func_call: ID • PARENL args_list PARENR

    PARENL  shift, and go to state 251

    ADD        reduce using rule 31 (expression)
    SUB        reduce using rule 31 (expression)
    MULT       reduce using rule 31 (expression)
    DIV        reduce using rule 31 (expression)
    SEMIC      reduce using rule 31 (expression)
    OR         reduce using rule 31 (expression)
    AND        reduce using rule 31 (expression)
    SMALLER    reduce using rule 31 (expression)
    GREATER    reduce using rule 31 (expression)
    SMALLEQ    reduce using rule 31 (expression)
    GREATEQ    reduce using rule 31 (expression)
    EQUALS     reduce using rule 31 (expression)
    DIFFERENT  reduce using rule 31 (expression)
    IN         reduce using rule 31 (expression)


State 154

   32 expression: INTEGER •

    ADD        reduce using rule 32 (expression)
    SUB        reduce using rule 32 (expression)
    MULT       reduce using rule 32 (expression)
    DIV        reduce using rule 32 (expression)
    SEMIC      reduce using rule 32 (expression)
    OR         reduce using rule 32 (expression)
    AND        reduce using rule 32 (expression)
    SMALLER    reduce using rule 32 (expression)
    GREATER    reduce using rule 32 (expression)
    SMALLEQ    reduce using rule 32 (expression)
    GREATEQ    reduce using rule 32 (expression)
    EQUALS     reduce using rule 32 (expression)
    DIFFERENT  reduce using rule 32 (expression)
    IN         reduce using rule 32 (expression)


State 155

   33 expression: DECIMAL •

    ADD        reduce using rule 33 (expression)
    SUB        reduce using rule 33 (expression)
    MULT       reduce using rule 33 (expression)
    DIV        reduce using rule 33 (expression)
    SEMIC      reduce using rule 33 (expression)
    OR         reduce using rule 33 (expression)
    AND        reduce using rule 33 (expression)
    SMALLER    reduce using rule 33 (expression)
    GREATER    reduce using rule 33 (expression)
    SMALLEQ    reduce using rule 33 (expression)
    GREATEQ    reduce using rule 33 (expression)
    EQUALS     reduce using rule 33 (expression)
    DIFFERENT  reduce using rule 33 (expression)
    IN         reduce using rule 33 (expression)


State 156

   35 expression: STRING •

    ADD        reduce using rule 35 (expression)
    SUB        reduce using rule 35 (expression)
    MULT       reduce using rule 35 (expression)
    DIV        reduce using rule 35 (expression)
    SEMIC      reduce using rule 35 (expression)
    OR         reduce using rule 35 (expression)
    AND        reduce using rule 35 (expression)
    SMALLER    reduce using rule 35 (expression)
    GREATER    reduce using rule 35 (expression)
    SMALLEQ    reduce using rule 35 (expression)
    GREATEQ    reduce using rule 35 (expression)
    EQUALS     reduce using rule 35 (expression)
    DIFFERENT  reduce using rule 35 (expression)
    IN         reduce using rule 35 (expression)


State 157

   34 expression: CHAR •

    ADD        reduce using rule 34 (expression)
    SUB        reduce using rule 34 (expression)
    MULT       reduce using rule 34 (expression)
    DIV        reduce using rule 34 (expression)
    SEMIC      reduce using rule 34 (expression)
    OR         reduce using rule 34 (expression)
    AND        reduce using rule 34 (expression)
    SMALLER    reduce using rule 34 (expression)
    GREATER    reduce using rule 34 (expression)
    SMALLEQ    reduce using rule 34 (expression)
    GREATEQ    reduce using rule 34 (expression)
    EQUALS     reduce using rule 34 (expression)
    DIFFERENT  reduce using rule 34 (expression)
    IN         reduce using rule 34 (expression)


State 158

   36 expression: EMPTY •

    ADD        reduce using rule 36 (expression)
    SUB        reduce using rule 36 (expression)
    MULT       reduce using rule 36 (expression)
    DIV        reduce using rule 36 (expression)
    SEMIC      reduce using rule 36 (expression)
    OR         reduce using rule 36 (expression)
    AND        reduce using rule 36 (expression)
    SMALLER    reduce using rule 36 (expression)
    GREATER    reduce using rule 36 (expression)
    SMALLEQ    reduce using rule 36 (expression)
    GREATEQ    reduce using rule 36 (expression)
    EQUALS     reduce using rule 36 (expression)
    DIFFERENT  reduce using rule 36 (expression)
    IN         reduce using rule 36 (expression)


State 159

   60 log_op: NEG • expression

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 252
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 169


State 160

   51 log_op: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 253


State 161

   47 set_op: ADDSET • PARENL in_set PARENR

    PARENL  shift, and go to state 254


State 162

   48 set_op: REMOVE • PARENL in_set PARENR

    PARENL  shift, and go to state 255


State 163

   49 set_op: EXISTS • PARENL in_set PARENR

    PARENL  shift, and go to state 256


State 164

   42 expression: PARENL • expression PARENR

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 257
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 165

   37 expression: math_op •

    ADD        reduce using rule 37 (expression)
    SUB        reduce using rule 37 (expression)
    MULT       reduce using rule 37 (expression)
    DIV        reduce using rule 37 (expression)
    SEMIC      reduce using rule 37 (expression)
    OR         reduce using rule 37 (expression)
    AND        reduce using rule 37 (expression)
    SMALLER    reduce using rule 37 (expression)
    GREATER    reduce using rule 37 (expression)
    SMALLEQ    reduce using rule 37 (expression)
    GREATEQ    reduce using rule 37 (expression)
    EQUALS     reduce using rule 37 (expression)
    DIFFERENT  reduce using rule 37 (expression)
    IN         reduce using rule 37 (expression)


State 166

   38 expression: set_op •

    ADD        reduce using rule 38 (expression)
    SUB        reduce using rule 38 (expression)
    MULT       reduce using rule 38 (expression)
    DIV        reduce using rule 38 (expression)
    SEMIC      reduce using rule 38 (expression)
    OR         reduce using rule 38 (expression)
    AND        reduce using rule 38 (expression)
    SMALLER    reduce using rule 38 (expression)
    GREATER    reduce using rule 38 (expression)
    SMALLEQ    reduce using rule 38 (expression)
    GREATEQ    reduce using rule 38 (expression)
    EQUALS     reduce using rule 38 (expression)
    DIFFERENT  reduce using rule 38 (expression)
    IN         reduce using rule 38 (expression)


State 167

   39 expression: log_op •

    ADD        reduce using rule 39 (expression)
    SUB        reduce using rule 39 (expression)
    MULT       reduce using rule 39 (expression)
    DIV        reduce using rule 39 (expression)
    SEMIC      reduce using rule 39 (expression)
    OR         reduce using rule 39 (expression)
    AND        reduce using rule 39 (expression)
    SMALLER    reduce using rule 39 (expression)
    GREATER    reduce using rule 39 (expression)
    SMALLEQ    reduce using rule 39 (expression)
    GREATEQ    reduce using rule 39 (expression)
    EQUALS     reduce using rule 39 (expression)
    DIFFERENT  reduce using rule 39 (expression)
    IN         reduce using rule 39 (expression)


State 168

   40 expression: func_call •

    ADD        reduce using rule 40 (expression)
    SUB        reduce using rule 40 (expression)
    MULT       reduce using rule 40 (expression)
    DIV        reduce using rule 40 (expression)
    SEMIC      reduce using rule 40 (expression)
    OR         reduce using rule 40 (expression)
    AND        reduce using rule 40 (expression)
    SMALLER    reduce using rule 40 (expression)
    GREATER    reduce using rule 40 (expression)
    SMALLEQ    reduce using rule 40 (expression)
    GREATEQ    reduce using rule 40 (expression)
    EQUALS     reduce using rule 40 (expression)
    DIFFERENT  reduce using rule 40 (expression)
    IN         reduce using rule 40 (expression)


State 169

   50 log_op: in_set •

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 170

   31 expression: ID •
   61 func_call: ID • PARENL args_list PARENR

    PARENL  shift, and go to state 258

    ADD        reduce using rule 31 (expression)
    SUB        reduce using rule 31 (expression)
    MULT       reduce using rule 31 (expression)
    DIV        reduce using rule 31 (expression)
    SEMIC      reduce using rule 31 (expression)
    OR         reduce using rule 31 (expression)
    AND        reduce using rule 31 (expression)
    SMALLER    reduce using rule 31 (expression)
    GREATER    reduce using rule 31 (expression)
    SMALLEQ    reduce using rule 31 (expression)
    GREATEQ    reduce using rule 31 (expression)
    EQUALS     reduce using rule 31 (expression)
    DIFFERENT  reduce using rule 31 (expression)
    IN         reduce using rule 31 (expression)
    PARENR     reduce using rule 31 (expression)


State 171

   32 expression: INTEGER •

    ADD        reduce using rule 32 (expression)
    SUB        reduce using rule 32 (expression)
    MULT       reduce using rule 32 (expression)
    DIV        reduce using rule 32 (expression)
    SEMIC      reduce using rule 32 (expression)
    OR         reduce using rule 32 (expression)
    AND        reduce using rule 32 (expression)
    SMALLER    reduce using rule 32 (expression)
    GREATER    reduce using rule 32 (expression)
    SMALLEQ    reduce using rule 32 (expression)
    GREATEQ    reduce using rule 32 (expression)
    EQUALS     reduce using rule 32 (expression)
    DIFFERENT  reduce using rule 32 (expression)
    IN         reduce using rule 32 (expression)
    PARENR     reduce using rule 32 (expression)


State 172

   33 expression: DECIMAL •

    ADD        reduce using rule 33 (expression)
    SUB        reduce using rule 33 (expression)
    MULT       reduce using rule 33 (expression)
    DIV        reduce using rule 33 (expression)
    SEMIC      reduce using rule 33 (expression)
    OR         reduce using rule 33 (expression)
    AND        reduce using rule 33 (expression)
    SMALLER    reduce using rule 33 (expression)
    GREATER    reduce using rule 33 (expression)
    SMALLEQ    reduce using rule 33 (expression)
    GREATEQ    reduce using rule 33 (expression)
    EQUALS     reduce using rule 33 (expression)
    DIFFERENT  reduce using rule 33 (expression)
    IN         reduce using rule 33 (expression)
    PARENR     reduce using rule 33 (expression)


State 173

   35 expression: STRING •

    ADD        reduce using rule 35 (expression)
    SUB        reduce using rule 35 (expression)
    MULT       reduce using rule 35 (expression)
    DIV        reduce using rule 35 (expression)
    SEMIC      reduce using rule 35 (expression)
    OR         reduce using rule 35 (expression)
    AND        reduce using rule 35 (expression)
    SMALLER    reduce using rule 35 (expression)
    GREATER    reduce using rule 35 (expression)
    SMALLEQ    reduce using rule 35 (expression)
    GREATEQ    reduce using rule 35 (expression)
    EQUALS     reduce using rule 35 (expression)
    DIFFERENT  reduce using rule 35 (expression)
    IN         reduce using rule 35 (expression)
    PARENR     reduce using rule 35 (expression)


State 174

   34 expression: CHAR •

    ADD        reduce using rule 34 (expression)
    SUB        reduce using rule 34 (expression)
    MULT       reduce using rule 34 (expression)
    DIV        reduce using rule 34 (expression)
    SEMIC      reduce using rule 34 (expression)
    OR         reduce using rule 34 (expression)
    AND        reduce using rule 34 (expression)
    SMALLER    reduce using rule 34 (expression)
    GREATER    reduce using rule 34 (expression)
    SMALLEQ    reduce using rule 34 (expression)
    GREATEQ    reduce using rule 34 (expression)
    EQUALS     reduce using rule 34 (expression)
    DIFFERENT  reduce using rule 34 (expression)
    IN         reduce using rule 34 (expression)
    PARENR     reduce using rule 34 (expression)


State 175

   36 expression: EMPTY •

    ADD        reduce using rule 36 (expression)
    SUB        reduce using rule 36 (expression)
    MULT       reduce using rule 36 (expression)
    DIV        reduce using rule 36 (expression)
    SEMIC      reduce using rule 36 (expression)
    OR         reduce using rule 36 (expression)
    AND        reduce using rule 36 (expression)
    SMALLER    reduce using rule 36 (expression)
    GREATER    reduce using rule 36 (expression)
    SMALLEQ    reduce using rule 36 (expression)
    GREATEQ    reduce using rule 36 (expression)
    EQUALS     reduce using rule 36 (expression)
    DIFFERENT  reduce using rule 36 (expression)
    IN         reduce using rule 36 (expression)
    PARENR     reduce using rule 36 (expression)


State 176

   60 log_op: NEG • expression

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 259
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 177

   51 log_op: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 260


State 178

   47 set_op: ADDSET • PARENL in_set PARENR

    PARENL  shift, and go to state 261


State 179

   48 set_op: REMOVE • PARENL in_set PARENR

    PARENL  shift, and go to state 262


State 180

   49 set_op: EXISTS • PARENL in_set PARENR

    PARENL  shift, and go to state 263


State 181

   42 expression: PARENL • expression PARENR

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 264
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 182

   37 expression: math_op •

    ADD        reduce using rule 37 (expression)
    SUB        reduce using rule 37 (expression)
    MULT       reduce using rule 37 (expression)
    DIV        reduce using rule 37 (expression)
    SEMIC      reduce using rule 37 (expression)
    OR         reduce using rule 37 (expression)
    AND        reduce using rule 37 (expression)
    SMALLER    reduce using rule 37 (expression)
    GREATER    reduce using rule 37 (expression)
    SMALLEQ    reduce using rule 37 (expression)
    GREATEQ    reduce using rule 37 (expression)
    EQUALS     reduce using rule 37 (expression)
    DIFFERENT  reduce using rule 37 (expression)
    IN         reduce using rule 37 (expression)
    PARENR     reduce using rule 37 (expression)


State 183

   38 expression: set_op •

    ADD        reduce using rule 38 (expression)
    SUB        reduce using rule 38 (expression)
    MULT       reduce using rule 38 (expression)
    DIV        reduce using rule 38 (expression)
    SEMIC      reduce using rule 38 (expression)
    OR         reduce using rule 38 (expression)
    AND        reduce using rule 38 (expression)
    SMALLER    reduce using rule 38 (expression)
    GREATER    reduce using rule 38 (expression)
    SMALLEQ    reduce using rule 38 (expression)
    GREATEQ    reduce using rule 38 (expression)
    EQUALS     reduce using rule 38 (expression)
    DIFFERENT  reduce using rule 38 (expression)
    IN         reduce using rule 38 (expression)
    PARENR     reduce using rule 38 (expression)


State 184

   39 expression: log_op •

    ADD        reduce using rule 39 (expression)
    SUB        reduce using rule 39 (expression)
    MULT       reduce using rule 39 (expression)
    DIV        reduce using rule 39 (expression)
    SEMIC      reduce using rule 39 (expression)
    OR         reduce using rule 39 (expression)
    AND        reduce using rule 39 (expression)
    SMALLER    reduce using rule 39 (expression)
    GREATER    reduce using rule 39 (expression)
    SMALLEQ    reduce using rule 39 (expression)
    GREATEQ    reduce using rule 39 (expression)
    EQUALS     reduce using rule 39 (expression)
    DIFFERENT  reduce using rule 39 (expression)
    IN         reduce using rule 39 (expression)
    PARENR     reduce using rule 39 (expression)


State 185

   40 expression: func_call •

    ADD        reduce using rule 40 (expression)
    SUB        reduce using rule 40 (expression)
    MULT       reduce using rule 40 (expression)
    DIV        reduce using rule 40 (expression)
    SEMIC      reduce using rule 40 (expression)
    OR         reduce using rule 40 (expression)
    AND        reduce using rule 40 (expression)
    SMALLER    reduce using rule 40 (expression)
    GREATER    reduce using rule 40 (expression)
    SMALLEQ    reduce using rule 40 (expression)
    GREATEQ    reduce using rule 40 (expression)
    EQUALS     reduce using rule 40 (expression)
    DIFFERENT  reduce using rule 40 (expression)
    IN         reduce using rule 40 (expression)
    PARENR     reduce using rule 40 (expression)


State 186

   50 log_op: in_set •

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)
    PARENR     reduce using rule 50 (log_op)


State 187

   31 expression: ID •
   61 func_call: ID • PARENL args_list PARENR

    PARENL  shift, and go to state 265

    ADD        reduce using rule 31 (expression)
    SUB        reduce using rule 31 (expression)
    MULT       reduce using rule 31 (expression)
    DIV        reduce using rule 31 (expression)
    SEMIC      reduce using rule 31 (expression)
    OR         reduce using rule 31 (expression)
    AND        reduce using rule 31 (expression)
    SMALLER    reduce using rule 31 (expression)
    GREATER    reduce using rule 31 (expression)
    SMALLEQ    reduce using rule 31 (expression)
    GREATEQ    reduce using rule 31 (expression)
    EQUALS     reduce using rule 31 (expression)
    DIFFERENT  reduce using rule 31 (expression)
    IN         reduce using rule 31 (expression)
    COMMA      reduce using rule 31 (expression)
    PARENR     reduce using rule 31 (expression)


State 188

   32 expression: INTEGER •

    ADD        reduce using rule 32 (expression)
    SUB        reduce using rule 32 (expression)
    MULT       reduce using rule 32 (expression)
    DIV        reduce using rule 32 (expression)
    SEMIC      reduce using rule 32 (expression)
    OR         reduce using rule 32 (expression)
    AND        reduce using rule 32 (expression)
    SMALLER    reduce using rule 32 (expression)
    GREATER    reduce using rule 32 (expression)
    SMALLEQ    reduce using rule 32 (expression)
    GREATEQ    reduce using rule 32 (expression)
    EQUALS     reduce using rule 32 (expression)
    DIFFERENT  reduce using rule 32 (expression)
    IN         reduce using rule 32 (expression)
    COMMA      reduce using rule 32 (expression)
    PARENR     reduce using rule 32 (expression)


State 189

   33 expression: DECIMAL •

    ADD        reduce using rule 33 (expression)
    SUB        reduce using rule 33 (expression)
    MULT       reduce using rule 33 (expression)
    DIV        reduce using rule 33 (expression)
    SEMIC      reduce using rule 33 (expression)
    OR         reduce using rule 33 (expression)
    AND        reduce using rule 33 (expression)
    SMALLER    reduce using rule 33 (expression)
    GREATER    reduce using rule 33 (expression)
    SMALLEQ    reduce using rule 33 (expression)
    GREATEQ    reduce using rule 33 (expression)
    EQUALS     reduce using rule 33 (expression)
    DIFFERENT  reduce using rule 33 (expression)
    IN         reduce using rule 33 (expression)
    COMMA      reduce using rule 33 (expression)
    PARENR     reduce using rule 33 (expression)


State 190

   35 expression: STRING •

    ADD        reduce using rule 35 (expression)
    SUB        reduce using rule 35 (expression)
    MULT       reduce using rule 35 (expression)
    DIV        reduce using rule 35 (expression)
    SEMIC      reduce using rule 35 (expression)
    OR         reduce using rule 35 (expression)
    AND        reduce using rule 35 (expression)
    SMALLER    reduce using rule 35 (expression)
    GREATER    reduce using rule 35 (expression)
    SMALLEQ    reduce using rule 35 (expression)
    GREATEQ    reduce using rule 35 (expression)
    EQUALS     reduce using rule 35 (expression)
    DIFFERENT  reduce using rule 35 (expression)
    IN         reduce using rule 35 (expression)
    COMMA      reduce using rule 35 (expression)
    PARENR     reduce using rule 35 (expression)


State 191

   34 expression: CHAR •

    ADD        reduce using rule 34 (expression)
    SUB        reduce using rule 34 (expression)
    MULT       reduce using rule 34 (expression)
    DIV        reduce using rule 34 (expression)
    SEMIC      reduce using rule 34 (expression)
    OR         reduce using rule 34 (expression)
    AND        reduce using rule 34 (expression)
    SMALLER    reduce using rule 34 (expression)
    GREATER    reduce using rule 34 (expression)
    SMALLEQ    reduce using rule 34 (expression)
    GREATEQ    reduce using rule 34 (expression)
    EQUALS     reduce using rule 34 (expression)
    DIFFERENT  reduce using rule 34 (expression)
    IN         reduce using rule 34 (expression)
    COMMA      reduce using rule 34 (expression)
    PARENR     reduce using rule 34 (expression)


State 192

   36 expression: EMPTY •

    ADD        reduce using rule 36 (expression)
    SUB        reduce using rule 36 (expression)
    MULT       reduce using rule 36 (expression)
    DIV        reduce using rule 36 (expression)
    SEMIC      reduce using rule 36 (expression)
    OR         reduce using rule 36 (expression)
    AND        reduce using rule 36 (expression)
    SMALLER    reduce using rule 36 (expression)
    GREATER    reduce using rule 36 (expression)
    SMALLEQ    reduce using rule 36 (expression)
    GREATEQ    reduce using rule 36 (expression)
    EQUALS     reduce using rule 36 (expression)
    DIFFERENT  reduce using rule 36 (expression)
    IN         reduce using rule 36 (expression)
    COMMA      reduce using rule 36 (expression)
    PARENR     reduce using rule 36 (expression)


State 193

   60 log_op: NEG • expression

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    expression  go to state 266
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203


State 194

   51 log_op: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 267


State 195

   47 set_op: ADDSET • PARENL in_set PARENR

    PARENL  shift, and go to state 268


State 196

   48 set_op: REMOVE • PARENL in_set PARENR

    PARENL  shift, and go to state 269


State 197

   49 set_op: EXISTS • PARENL in_set PARENR

    PARENL  shift, and go to state 270


State 198

   42 expression: PARENL • expression PARENR

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 271
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 199

   37 expression: math_op •

    ADD        reduce using rule 37 (expression)
    SUB        reduce using rule 37 (expression)
    MULT       reduce using rule 37 (expression)
    DIV        reduce using rule 37 (expression)
    SEMIC      reduce using rule 37 (expression)
    OR         reduce using rule 37 (expression)
    AND        reduce using rule 37 (expression)
    SMALLER    reduce using rule 37 (expression)
    GREATER    reduce using rule 37 (expression)
    SMALLEQ    reduce using rule 37 (expression)
    GREATEQ    reduce using rule 37 (expression)
    EQUALS     reduce using rule 37 (expression)
    DIFFERENT  reduce using rule 37 (expression)
    IN         reduce using rule 37 (expression)
    COMMA      reduce using rule 37 (expression)
    PARENR     reduce using rule 37 (expression)


State 200

   38 expression: set_op •

    ADD        reduce using rule 38 (expression)
    SUB        reduce using rule 38 (expression)
    MULT       reduce using rule 38 (expression)
    DIV        reduce using rule 38 (expression)
    SEMIC      reduce using rule 38 (expression)
    OR         reduce using rule 38 (expression)
    AND        reduce using rule 38 (expression)
    SMALLER    reduce using rule 38 (expression)
    GREATER    reduce using rule 38 (expression)
    SMALLEQ    reduce using rule 38 (expression)
    GREATEQ    reduce using rule 38 (expression)
    EQUALS     reduce using rule 38 (expression)
    DIFFERENT  reduce using rule 38 (expression)
    IN         reduce using rule 38 (expression)
    COMMA      reduce using rule 38 (expression)
    PARENR     reduce using rule 38 (expression)


State 201

   39 expression: log_op •

    ADD        reduce using rule 39 (expression)
    SUB        reduce using rule 39 (expression)
    MULT       reduce using rule 39 (expression)
    DIV        reduce using rule 39 (expression)
    SEMIC      reduce using rule 39 (expression)
    OR         reduce using rule 39 (expression)
    AND        reduce using rule 39 (expression)
    SMALLER    reduce using rule 39 (expression)
    GREATER    reduce using rule 39 (expression)
    SMALLEQ    reduce using rule 39 (expression)
    GREATEQ    reduce using rule 39 (expression)
    EQUALS     reduce using rule 39 (expression)
    DIFFERENT  reduce using rule 39 (expression)
    IN         reduce using rule 39 (expression)
    COMMA      reduce using rule 39 (expression)
    PARENR     reduce using rule 39 (expression)


State 202

   40 expression: func_call •

    ADD        reduce using rule 40 (expression)
    SUB        reduce using rule 40 (expression)
    MULT       reduce using rule 40 (expression)
    DIV        reduce using rule 40 (expression)
    SEMIC      reduce using rule 40 (expression)
    OR         reduce using rule 40 (expression)
    AND        reduce using rule 40 (expression)
    SMALLER    reduce using rule 40 (expression)
    GREATER    reduce using rule 40 (expression)
    SMALLEQ    reduce using rule 40 (expression)
    GREATEQ    reduce using rule 40 (expression)
    EQUALS     reduce using rule 40 (expression)
    DIFFERENT  reduce using rule 40 (expression)
    IN         reduce using rule 40 (expression)
    COMMA      reduce using rule 40 (expression)
    PARENR     reduce using rule 40 (expression)


State 203

   50 log_op: in_set •

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)
    COMMA      reduce using rule 50 (log_op)
    PARENR     reduce using rule 50 (log_op)


State 204

   27 var_dec: TYPE ID SEMIC •

    ID       reduce using rule 27 (var_dec)
    TYPE     reduce using rule 27 (var_dec)
    INTEGER  reduce using rule 27 (var_dec)
    DECIMAL  reduce using rule 27 (var_dec)
    STRING   reduce using rule 27 (var_dec)
    CHAR     reduce using rule 27 (var_dec)
    EMPTY    reduce using rule 27 (var_dec)
    NEG      reduce using rule 27 (var_dec)
    IF       reduce using rule 27 (var_dec)
    FOR      reduce using rule 27 (var_dec)
    READ     reduce using rule 27 (var_dec)
    WRITE    reduce using rule 27 (var_dec)
    WRITELN  reduce using rule 27 (var_dec)
    RETURN   reduce using rule 27 (var_dec)
    ISTYPE   reduce using rule 27 (var_dec)
    ADDSET   reduce using rule 27 (var_dec)
    REMOVE   reduce using rule 27 (var_dec)
    EXISTS   reduce using rule 27 (var_dec)
    FORALL   reduce using rule 27 (var_dec)
    ENDFUNC  reduce using rule 27 (var_dec)
    PARENL   reduce using rule 27 (var_dec)


State 205

   43 math_op: expression ADD • expression

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 272
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 169


State 206

   44 math_op: expression SUB • expression

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 273
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 169


State 207

   46 math_op: expression MULT • expression

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 274
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 169


State 208

   45 math_op: expression DIV • expression

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 275
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 169


State 209

   58 log_op: expression OR • expression

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 276
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 169


State 210

   59 log_op: expression AND • expression

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 277
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 169


State 211

   52 log_op: expression SMALLER • expression

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 278
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 169


State 212

   53 log_op: expression GREATER • expression

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 279
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 169


State 213

   54 log_op: expression SMALLEQ • expression

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 280
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 169


State 214

   55 log_op: expression GREATEQ • expression

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 281
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 169


State 215

   56 log_op: expression EQUALS • expression

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 282
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 169


State 216

   57 log_op: expression DIFFERENT • expression

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 283
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 169


State 217

   62 in_set: expression IN • expression

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 284
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 169


State 218

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    ADD        shift, and go to state 205
    SUB        shift, and go to state 206
    MULT       shift, and go to state 207
    DIV        shift, and go to state 208
    SEMIC      shift, and go to state 247
    OR         shift, and go to state 209
    AND        shift, and go to state 210
    SMALLER    shift, and go to state 211
    GREATER    shift, and go to state 212
    SMALLEQ    shift, and go to state 213
    GREATEQ    shift, and go to state 214
    EQUALS     shift, and go to state 215
    DIFFERENT  shift, and go to state 216
    IN         shift, and go to state 232


State 219

   43 math_op: expression ADD • expression

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 285
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 220

   44 math_op: expression SUB • expression

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 286
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 221

   46 math_op: expression MULT • expression

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 287
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 222

   45 math_op: expression DIV • expression

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 288
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 223

   41 expression: expression SEMIC •

    ADD        reduce using rule 41 (expression)
    SUB        reduce using rule 41 (expression)
    MULT       reduce using rule 41 (expression)
    DIV        reduce using rule 41 (expression)
    SEMIC      reduce using rule 41 (expression)
    OR         reduce using rule 41 (expression)
    AND        reduce using rule 41 (expression)
    SMALLER    reduce using rule 41 (expression)
    GREATER    reduce using rule 41 (expression)
    SMALLEQ    reduce using rule 41 (expression)
    GREATEQ    reduce using rule 41 (expression)
    EQUALS     reduce using rule 41 (expression)
    DIFFERENT  reduce using rule 41 (expression)
    IN         reduce using rule 41 (expression)
    PARENR     reduce using rule 41 (expression)


State 224

   58 log_op: expression OR • expression

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 289
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 225

   59 log_op: expression AND • expression

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 290
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 226

   52 log_op: expression SMALLER • expression

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 291
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 227

   53 log_op: expression GREATER • expression

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 292
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 228

   54 log_op: expression SMALLEQ • expression

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 293
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 229

   55 log_op: expression GREATEQ • expression

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 294
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 230

   56 log_op: expression EQUALS • expression

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 295
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 231

   57 log_op: expression DIFFERENT • expression

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 296
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 232

   62 in_set: expression IN • expression

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 297
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 233

   43 math_op: expression ADD • expression

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    expression  go to state 298
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203


State 234

   44 math_op: expression SUB • expression

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    expression  go to state 299
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203


State 235

   46 math_op: expression MULT • expression

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    expression  go to state 300
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203


State 236

   45 math_op: expression DIV • expression

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    expression  go to state 301
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203


State 237

   41 expression: expression SEMIC •

    ADD        reduce using rule 41 (expression)
    SUB        reduce using rule 41 (expression)
    MULT       reduce using rule 41 (expression)
    DIV        reduce using rule 41 (expression)
    SEMIC      reduce using rule 41 (expression)
    OR         reduce using rule 41 (expression)
    AND        reduce using rule 41 (expression)
    SMALLER    reduce using rule 41 (expression)
    GREATER    reduce using rule 41 (expression)
    SMALLEQ    reduce using rule 41 (expression)
    GREATEQ    reduce using rule 41 (expression)
    EQUALS     reduce using rule 41 (expression)
    DIFFERENT  reduce using rule 41 (expression)
    IN         reduce using rule 41 (expression)
    COMMA      reduce using rule 41 (expression)
    PARENR     reduce using rule 41 (expression)


State 238

   58 log_op: expression OR • expression

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    expression  go to state 302
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203


State 239

   59 log_op: expression AND • expression

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    expression  go to state 303
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203


State 240

   52 log_op: expression SMALLER • expression

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    expression  go to state 304
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203


State 241

   53 log_op: expression GREATER • expression

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    expression  go to state 305
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203


State 242

   54 log_op: expression SMALLEQ • expression

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    expression  go to state 306
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203


State 243

   55 log_op: expression GREATEQ • expression

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    expression  go to state 307
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203


State 244

   56 log_op: expression EQUALS • expression

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    expression  go to state 308
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203


State 245

   57 log_op: expression DIFFERENT • expression

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    expression  go to state 309
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203


State 246

   62 in_set: expression IN • expression

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    expression  go to state 310
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203


State 247

   41 expression: expression SEMIC •

    ADD        reduce using rule 41 (expression)
    SUB        reduce using rule 41 (expression)
    MULT       reduce using rule 41 (expression)
    DIV        reduce using rule 41 (expression)
    SEMIC      reduce using rule 41 (expression)
    OR         reduce using rule 41 (expression)
    AND        reduce using rule 41 (expression)
    SMALLER    reduce using rule 41 (expression)
    GREATER    reduce using rule 41 (expression)
    SMALLEQ    reduce using rule 41 (expression)
    GREATEQ    reduce using rule 41 (expression)
    EQUALS     reduce using rule 41 (expression)
    DIFFERENT  reduce using rule 41 (expression)
    IN         reduce using rule 41 (expression)


State 248

   47 set_op: ADDSET • PARENL in_set PARENR

    PARENL  shift, and go to state 311


State 249

   48 set_op: REMOVE • PARENL in_set PARENR

    PARENL  shift, and go to state 312


State 250

   49 set_op: EXISTS • PARENL in_set PARENR

    PARENL  shift, and go to state 313


State 251

   61 func_call: ID PARENL • args_list PARENR

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    PARENR  reduce using rule 63 (args_list)

    expression  go to state 95
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203
    args_list   go to state 314


State 252

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   60       | NEG expression •
   62 in_set: expression • IN expression

    IN  shift, and go to state 217

    ADD        reduce using rule 60 (log_op)
    SUB        reduce using rule 60 (log_op)
    MULT       reduce using rule 60 (log_op)
    DIV        reduce using rule 60 (log_op)
    SEMIC      reduce using rule 60 (log_op)
    OR         reduce using rule 60 (log_op)
    AND        reduce using rule 60 (log_op)
    SMALLER    reduce using rule 60 (log_op)
    GREATER    reduce using rule 60 (log_op)
    SMALLEQ    reduce using rule 60 (log_op)
    GREATEQ    reduce using rule 60 (log_op)
    EQUALS     reduce using rule 60 (log_op)
    DIFFERENT  reduce using rule 60 (log_op)
    IN         [reduce using rule 60 (log_op)]

    shift/reduce conflict on token IN:
       60 log_op: NEG expression •
       62 in_set: expression • IN expression
      Example: NEG expression • IN expression
      Shift derivation
        log_op
        ↳ NEG expression
              ↳ log_op
                ↳ in_set
                  ↳ expression • IN expression
      Reduce derivation
        log_op
        ↳ in_set
          ↳ expression           IN expression
            ↳ log_op
              ↳ NEG expression •



State 253

   51 log_op: ISTYPE PARENL • expression PARENR

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 315
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 254

   47 set_op: ADDSET PARENL • in_set PARENR

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 316


State 255

   48 set_op: REMOVE PARENL • in_set PARENR

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 317


State 256

   49 set_op: EXISTS PARENL • in_set PARENR

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 318


State 257

   41 expression: expression • SEMIC
   42           | PARENL expression • PARENR
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    ADD        shift, and go to state 219
    SUB        shift, and go to state 220
    MULT       shift, and go to state 221
    DIV        shift, and go to state 222
    SEMIC      shift, and go to state 223
    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232
    PARENR     shift, and go to state 319


State 258

   61 func_call: ID PARENL • args_list PARENR

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    PARENR  reduce using rule 63 (args_list)

    expression  go to state 95
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203
    args_list   go to state 320


State 259

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   60       | NEG expression •
   62 in_set: expression • IN expression

    IN  shift, and go to state 232

    ADD        reduce using rule 60 (log_op)
    SUB        reduce using rule 60 (log_op)
    MULT       reduce using rule 60 (log_op)
    DIV        reduce using rule 60 (log_op)
    SEMIC      reduce using rule 60 (log_op)
    OR         reduce using rule 60 (log_op)
    AND        reduce using rule 60 (log_op)
    SMALLER    reduce using rule 60 (log_op)
    GREATER    reduce using rule 60 (log_op)
    SMALLEQ    reduce using rule 60 (log_op)
    GREATEQ    reduce using rule 60 (log_op)
    EQUALS     reduce using rule 60 (log_op)
    DIFFERENT  reduce using rule 60 (log_op)
    IN         [reduce using rule 60 (log_op)]
    PARENR     reduce using rule 60 (log_op)

    shift/reduce conflict on token IN:
       60 log_op: NEG expression •
       62 in_set: expression • IN expression
      First example: IN expression
      Shift derivation
        in_set
        ↳ IN expression
      Second example: IN expression
      Reduce derivation
        in_set
        ↳ IN expression



State 260

   51 log_op: ISTYPE PARENL • expression PARENR

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 321
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 261

   47 set_op: ADDSET PARENL • in_set PARENR

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 322


State 262

   48 set_op: REMOVE PARENL • in_set PARENR

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 323


State 263

   49 set_op: EXISTS PARENL • in_set PARENR

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 324


State 264

   41 expression: expression • SEMIC
   42           | PARENL expression • PARENR
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    ADD        shift, and go to state 219
    SUB        shift, and go to state 220
    MULT       shift, and go to state 221
    DIV        shift, and go to state 222
    SEMIC      shift, and go to state 223
    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232
    PARENR     shift, and go to state 325


State 265

   61 func_call: ID PARENL • args_list PARENR

    ID       shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    STRING   shift, and go to state 190
    CHAR     shift, and go to state 191
    EMPTY    shift, and go to state 192
    NEG      shift, and go to state 193
    ISTYPE   shift, and go to state 194
    ADDSET   shift, and go to state 195
    REMOVE   shift, and go to state 196
    EXISTS   shift, and go to state 197
    PARENL   shift, and go to state 198

    PARENR  reduce using rule 63 (args_list)

    expression  go to state 95
    math_op     go to state 199
    set_op      go to state 200
    log_op      go to state 201
    func_call   go to state 202
    in_set      go to state 203
    args_list   go to state 326


State 266

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   60       | NEG expression •
   62 in_set: expression • IN expression

    IN  shift, and go to state 246

    ADD        reduce using rule 60 (log_op)
    SUB        reduce using rule 60 (log_op)
    MULT       reduce using rule 60 (log_op)
    DIV        reduce using rule 60 (log_op)
    SEMIC      reduce using rule 60 (log_op)
    OR         reduce using rule 60 (log_op)
    AND        reduce using rule 60 (log_op)
    SMALLER    reduce using rule 60 (log_op)
    GREATER    reduce using rule 60 (log_op)
    SMALLEQ    reduce using rule 60 (log_op)
    GREATEQ    reduce using rule 60 (log_op)
    EQUALS     reduce using rule 60 (log_op)
    DIFFERENT  reduce using rule 60 (log_op)
    IN         [reduce using rule 60 (log_op)]
    COMMA      reduce using rule 60 (log_op)
    PARENR     reduce using rule 60 (log_op)

    shift/reduce conflict on token IN:
       60 log_op: NEG expression •
       62 in_set: expression • IN expression
      First example: IN expression
      Shift derivation
        in_set
        ↳ IN expression
      Second example: IN expression
      Reduce derivation
        in_set
        ↳ IN expression



State 267

   51 log_op: ISTYPE PARENL • expression PARENR

    ID       shift, and go to state 170
    INTEGER  shift, and go to state 171
    DECIMAL  shift, and go to state 172
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression  go to state 327
    math_op     go to state 182
    set_op      go to state 183
    log_op      go to state 184
    func_call   go to state 185
    in_set      go to state 186


State 268

   47 set_op: ADDSET PARENL • in_set PARENR

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 328


State 269

   48 set_op: REMOVE PARENL • in_set PARENR

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 329


State 270

   49 set_op: EXISTS PARENL • in_set PARENR

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 330


State 271

   41 expression: expression • SEMIC
   42           | PARENL expression • PARENR
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    ADD        shift, and go to state 219
    SUB        shift, and go to state 220
    MULT       shift, and go to state 221
    DIV        shift, and go to state 222
    SEMIC      shift, and go to state 223
    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232
    PARENR     shift, and go to state 331


State 272

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   43        | expression ADD expression •
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 209
    AND        shift, and go to state 210
    SMALLER    shift, and go to state 211
    GREATER    shift, and go to state 212
    SMALLEQ    shift, and go to state 213
    GREATEQ    shift, and go to state 214
    EQUALS     shift, and go to state 215
    DIFFERENT  shift, and go to state 216
    IN         shift, and go to state 217

    ADD    reduce using rule 43 (math_op)
    SUB    reduce using rule 43 (math_op)
    MULT   reduce using rule 43 (math_op)
    DIV    reduce using rule 43 (math_op)
    SEMIC  reduce using rule 43 (math_op)
    IN     [reduce using rule 43 (math_op)]

    shift/reduce conflict on token IN:
       43 math_op: expression ADD expression •
       62 in_set: expression • IN expression
      First example: ADD expression • IN expression
      Shift derivation
        math_op
        ↳ ADD in_set
              ↳ expression • IN expression
      Second example: ADD expression
      Reduce derivation
        math_op
        ↳ ADD expression



State 273

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   44        | expression SUB expression •
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 209
    AND        shift, and go to state 210
    SMALLER    shift, and go to state 211
    GREATER    shift, and go to state 212
    SMALLEQ    shift, and go to state 213
    GREATEQ    shift, and go to state 214
    EQUALS     shift, and go to state 215
    DIFFERENT  shift, and go to state 216
    IN         shift, and go to state 217

    ADD    reduce using rule 44 (math_op)
    SUB    reduce using rule 44 (math_op)
    MULT   reduce using rule 44 (math_op)
    DIV    reduce using rule 44 (math_op)
    SEMIC  reduce using rule 44 (math_op)
    IN     [reduce using rule 44 (math_op)]

    shift/reduce conflict on token IN:
       44 math_op: expression SUB expression •
       62 in_set: expression • IN expression
      First example: SUB expression • IN expression
      Shift derivation
        math_op
        ↳ SUB in_set
              ↳ expression • IN expression
      Second example: SUB expression
      Reduce derivation
        math_op
        ↳ SUB expression



State 274

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   46        | expression MULT expression •
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 209
    AND        shift, and go to state 210
    SMALLER    shift, and go to state 211
    GREATER    shift, and go to state 212
    SMALLEQ    shift, and go to state 213
    GREATEQ    shift, and go to state 214
    EQUALS     shift, and go to state 215
    DIFFERENT  shift, and go to state 216
    IN         shift, and go to state 217

    ADD    reduce using rule 46 (math_op)
    SUB    reduce using rule 46 (math_op)
    MULT   reduce using rule 46 (math_op)
    DIV    reduce using rule 46 (math_op)
    SEMIC  reduce using rule 46 (math_op)
    IN     [reduce using rule 46 (math_op)]

    shift/reduce conflict on token IN:
       46 math_op: expression MULT expression •
       62 in_set: expression • IN expression
      First example: MULT expression • IN expression
      Shift derivation
        math_op
        ↳ MULT in_set
               ↳ expression • IN expression
      Second example: MULT expression
      Reduce derivation
        math_op
        ↳ MULT expression



State 275

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   45        | expression DIV expression •
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 209
    AND        shift, and go to state 210
    SMALLER    shift, and go to state 211
    GREATER    shift, and go to state 212
    SMALLEQ    shift, and go to state 213
    GREATEQ    shift, and go to state 214
    EQUALS     shift, and go to state 215
    DIFFERENT  shift, and go to state 216
    IN         shift, and go to state 217

    ADD    reduce using rule 45 (math_op)
    SUB    reduce using rule 45 (math_op)
    MULT   reduce using rule 45 (math_op)
    DIV    reduce using rule 45 (math_op)
    SEMIC  reduce using rule 45 (math_op)
    IN     [reduce using rule 45 (math_op)]

    shift/reduce conflict on token IN:
       45 math_op: expression DIV expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression DIV expression • IN expression IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                   declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                           ENDFUNC
                                                           ↳ statement                                                                                               statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                                            PARENR set_op SEMIC
                                                                               ↳ math_op                                           IN expression
                                                                                 ↳ expression DIV expression
                                                                                                  ↳ log_op
                                                                                                    ↳ in_set
                                                                                                      ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression DIV expression • IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                         ENDFUNC
                                                           ↳ statement                                                                             statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                          PARENR set_op SEMIC
                                                                               ↳ expression                      IN expression
                                                                                 ↳ math_op
                                                                                   ↳ expression DIV expression •



State 276

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   58       | expression OR expression •
   59       | expression • AND expression
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 213
    GREATEQ    shift, and go to state 214
    EQUALS     shift, and go to state 215
    DIFFERENT  shift, and go to state 216
    IN         shift, and go to state 217

    ADD      reduce using rule 58 (log_op)
    SUB      reduce using rule 58 (log_op)
    MULT     reduce using rule 58 (log_op)
    DIV      reduce using rule 58 (log_op)
    SEMIC    reduce using rule 58 (log_op)
    OR       reduce using rule 58 (log_op)
    AND      reduce using rule 58 (log_op)
    SMALLER  reduce using rule 58 (log_op)
    GREATER  reduce using rule 58 (log_op)
    IN       [reduce using rule 58 (log_op)]

    shift/reduce conflict on token IN:
       58 log_op: expression OR expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression OR expression • IN expression IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                               $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                  declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                          ENDFUNC
                                                           ↳ statement                                                                                              statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                                           PARENR set_op SEMIC
                                                                               ↳ log_op                                           IN expression
                                                                                 ↳ expression OR expression
                                                                                                 ↳ log_op
                                                                                                   ↳ in_set
                                                                                                     ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression OR expression • IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                             $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                        ENDFUNC
                                                           ↳ statement                                                                            statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                         PARENR set_op SEMIC
                                                                               ↳ expression                     IN expression
                                                                                 ↳ log_op
                                                                                   ↳ expression OR expression •



State 277

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   59       | expression AND expression •
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 213
    GREATEQ    shift, and go to state 214
    EQUALS     shift, and go to state 215
    DIFFERENT  shift, and go to state 216
    IN         shift, and go to state 217

    ADD      reduce using rule 59 (log_op)
    SUB      reduce using rule 59 (log_op)
    MULT     reduce using rule 59 (log_op)
    DIV      reduce using rule 59 (log_op)
    SEMIC    reduce using rule 59 (log_op)
    OR       reduce using rule 59 (log_op)
    AND      reduce using rule 59 (log_op)
    SMALLER  reduce using rule 59 (log_op)
    GREATER  reduce using rule 59 (log_op)
    IN       [reduce using rule 59 (log_op)]

    shift/reduce conflict on token IN:
       59 log_op: expression AND expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression AND expression • IN expression IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                   declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                           ENDFUNC
                                                           ↳ statement                                                                                               statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                                            PARENR set_op SEMIC
                                                                               ↳ log_op                                            IN expression
                                                                                 ↳ expression AND expression
                                                                                                  ↳ log_op
                                                                                                    ↳ in_set
                                                                                                      ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression AND expression • IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                         ENDFUNC
                                                           ↳ statement                                                                             statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                          PARENR set_op SEMIC
                                                                               ↳ expression                      IN expression
                                                                                 ↳ log_op
                                                                                   ↳ expression AND expression •



State 278

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   52       | expression SMALLER expression •
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 213
    GREATEQ    shift, and go to state 214
    EQUALS     shift, and go to state 215
    DIFFERENT  shift, and go to state 216
    IN         shift, and go to state 217

    ADD      reduce using rule 52 (log_op)
    SUB      reduce using rule 52 (log_op)
    MULT     reduce using rule 52 (log_op)
    DIV      reduce using rule 52 (log_op)
    SEMIC    reduce using rule 52 (log_op)
    OR       reduce using rule 52 (log_op)
    AND      reduce using rule 52 (log_op)
    SMALLER  reduce using rule 52 (log_op)
    GREATER  reduce using rule 52 (log_op)
    IN       [reduce using rule 52 (log_op)]

    shift/reduce conflict on token IN:
       52 log_op: expression SMALLER expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression SMALLER expression • IN expression IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                    $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                       declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                               ENDFUNC
                                                           ↳ statement                                                                                                   statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                                                PARENR set_op SEMIC
                                                                               ↳ log_op                                                IN expression
                                                                                 ↳ expression SMALLER expression
                                                                                                      ↳ log_op
                                                                                                        ↳ in_set
                                                                                                          ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression SMALLER expression • IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                  $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                     declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                             ENDFUNC
                                                           ↳ statement                                                                                 statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                              PARENR set_op SEMIC
                                                                               ↳ expression                          IN expression
                                                                                 ↳ log_op
                                                                                   ↳ expression SMALLER expression •



State 279

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   53       | expression GREATER expression •
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 213
    GREATEQ    shift, and go to state 214
    EQUALS     shift, and go to state 215
    DIFFERENT  shift, and go to state 216
    IN         shift, and go to state 217

    ADD      reduce using rule 53 (log_op)
    SUB      reduce using rule 53 (log_op)
    MULT     reduce using rule 53 (log_op)
    DIV      reduce using rule 53 (log_op)
    SEMIC    reduce using rule 53 (log_op)
    OR       reduce using rule 53 (log_op)
    AND      reduce using rule 53 (log_op)
    SMALLER  reduce using rule 53 (log_op)
    GREATER  reduce using rule 53 (log_op)
    IN       [reduce using rule 53 (log_op)]

    shift/reduce conflict on token IN:
       53 log_op: expression GREATER expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression GREATER expression • IN expression IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                    $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                       declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                               ENDFUNC
                                                           ↳ statement                                                                                                   statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                                                PARENR set_op SEMIC
                                                                               ↳ log_op                                                IN expression
                                                                                 ↳ expression GREATER expression
                                                                                                      ↳ log_op
                                                                                                        ↳ in_set
                                                                                                          ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression GREATER expression • IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                  $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                     declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                             ENDFUNC
                                                           ↳ statement                                                                                 statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                              PARENR set_op SEMIC
                                                                               ↳ expression                          IN expression
                                                                                 ↳ log_op
                                                                                   ↳ expression GREATER expression •



State 280

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   54       | expression SMALLEQ expression •
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 217

    ADD        reduce using rule 54 (log_op)
    SUB        reduce using rule 54 (log_op)
    MULT       reduce using rule 54 (log_op)
    DIV        reduce using rule 54 (log_op)
    SEMIC      reduce using rule 54 (log_op)
    OR         reduce using rule 54 (log_op)
    AND        reduce using rule 54 (log_op)
    SMALLER    reduce using rule 54 (log_op)
    GREATER    reduce using rule 54 (log_op)
    SMALLEQ    reduce using rule 54 (log_op)
    GREATEQ    reduce using rule 54 (log_op)
    EQUALS     reduce using rule 54 (log_op)
    DIFFERENT  reduce using rule 54 (log_op)
    IN         [reduce using rule 54 (log_op)]

    shift/reduce conflict on token IN:
       54 log_op: expression SMALLEQ expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression SMALLEQ expression • IN expression IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                    $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                       declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                               ENDFUNC
                                                           ↳ statement                                                                                                   statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                                                PARENR set_op SEMIC
                                                                               ↳ log_op                                                IN expression
                                                                                 ↳ expression SMALLEQ expression
                                                                                                      ↳ log_op
                                                                                                        ↳ in_set
                                                                                                          ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression SMALLEQ expression • IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                  $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                     declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                             ENDFUNC
                                                           ↳ statement                                                                                 statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                              PARENR set_op SEMIC
                                                                               ↳ expression                          IN expression
                                                                                 ↳ log_op
                                                                                   ↳ expression SMALLEQ expression •



State 281

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   55       | expression GREATEQ expression •
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 217

    ADD        reduce using rule 55 (log_op)
    SUB        reduce using rule 55 (log_op)
    MULT       reduce using rule 55 (log_op)
    DIV        reduce using rule 55 (log_op)
    SEMIC      reduce using rule 55 (log_op)
    OR         reduce using rule 55 (log_op)
    AND        reduce using rule 55 (log_op)
    SMALLER    reduce using rule 55 (log_op)
    GREATER    reduce using rule 55 (log_op)
    SMALLEQ    reduce using rule 55 (log_op)
    GREATEQ    reduce using rule 55 (log_op)
    EQUALS     reduce using rule 55 (log_op)
    DIFFERENT  reduce using rule 55 (log_op)
    IN         [reduce using rule 55 (log_op)]

    shift/reduce conflict on token IN:
       55 log_op: expression GREATEQ expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression GREATEQ expression • IN expression IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                    $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                       declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                               ENDFUNC
                                                           ↳ statement                                                                                                   statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                                                PARENR set_op SEMIC
                                                                               ↳ log_op                                                IN expression
                                                                                 ↳ expression GREATEQ expression
                                                                                                      ↳ log_op
                                                                                                        ↳ in_set
                                                                                                          ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression GREATEQ expression • IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                  $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                     declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                             ENDFUNC
                                                           ↳ statement                                                                                 statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                              PARENR set_op SEMIC
                                                                               ↳ expression                          IN expression
                                                                                 ↳ log_op
                                                                                   ↳ expression GREATEQ expression •



State 282

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   56       | expression EQUALS expression •
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 217

    ADD        reduce using rule 56 (log_op)
    SUB        reduce using rule 56 (log_op)
    MULT       reduce using rule 56 (log_op)
    DIV        reduce using rule 56 (log_op)
    SEMIC      reduce using rule 56 (log_op)
    OR         reduce using rule 56 (log_op)
    AND        reduce using rule 56 (log_op)
    SMALLER    reduce using rule 56 (log_op)
    GREATER    reduce using rule 56 (log_op)
    SMALLEQ    reduce using rule 56 (log_op)
    GREATEQ    reduce using rule 56 (log_op)
    EQUALS     reduce using rule 56 (log_op)
    DIFFERENT  reduce using rule 56 (log_op)
    IN         [reduce using rule 56 (log_op)]

    shift/reduce conflict on token IN:
       56 log_op: expression EQUALS expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression EQUALS expression • IN expression IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                   $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                      declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                              ENDFUNC
                                                           ↳ statement                                                                                                  statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                                               PARENR set_op SEMIC
                                                                               ↳ log_op                                               IN expression
                                                                                 ↳ expression EQUALS expression
                                                                                                     ↳ log_op
                                                                                                       ↳ in_set
                                                                                                         ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression EQUALS expression • IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                 $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                    declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                            ENDFUNC
                                                           ↳ statement                                                                                statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                             PARENR set_op SEMIC
                                                                               ↳ expression                         IN expression
                                                                                 ↳ log_op
                                                                                   ↳ expression EQUALS expression •



State 283

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   57       | expression DIFFERENT expression •
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 217

    ADD        reduce using rule 57 (log_op)
    SUB        reduce using rule 57 (log_op)
    MULT       reduce using rule 57 (log_op)
    DIV        reduce using rule 57 (log_op)
    SEMIC      reduce using rule 57 (log_op)
    OR         reduce using rule 57 (log_op)
    AND        reduce using rule 57 (log_op)
    SMALLER    reduce using rule 57 (log_op)
    GREATER    reduce using rule 57 (log_op)
    SMALLEQ    reduce using rule 57 (log_op)
    GREATEQ    reduce using rule 57 (log_op)
    EQUALS     reduce using rule 57 (log_op)
    DIFFERENT  reduce using rule 57 (log_op)
    IN         [reduce using rule 57 (log_op)]

    shift/reduce conflict on token IN:
       57 log_op: expression DIFFERENT expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression DIFFERENT expression • IN expression IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                      $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                         declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                 ENDFUNC
                                                           ↳ statement                                                                                                     statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                                                  PARENR set_op SEMIC
                                                                               ↳ log_op                                                  IN expression
                                                                                 ↳ expression DIFFERENT expression
                                                                                                        ↳ log_op
                                                                                                          ↳ in_set
                                                                                                            ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression DIFFERENT expression • IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                    $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                       declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                               ENDFUNC
                                                           ↳ statement                                                                                   statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                                PARENR set_op SEMIC
                                                                               ↳ expression                            IN expression
                                                                                 ↳ log_op
                                                                                   ↳ expression DIFFERENT expression •



State 284

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression
   62       | expression IN expression •

    ADD        shift, and go to state 205
    SUB        shift, and go to state 206
    MULT       shift, and go to state 207
    DIV        shift, and go to state 208
    SEMIC      shift, and go to state 247
    OR         shift, and go to state 209
    AND        shift, and go to state 210
    SMALLER    shift, and go to state 211
    GREATER    shift, and go to state 212
    SMALLEQ    shift, and go to state 213
    GREATEQ    shift, and go to state 214
    EQUALS     shift, and go to state 215
    DIFFERENT  shift, and go to state 216
    IN         shift, and go to state 217

    ADD        [reduce using rule 62 (in_set)]
    SUB        [reduce using rule 62 (in_set)]
    MULT       [reduce using rule 62 (in_set)]
    DIV        [reduce using rule 62 (in_set)]
    SEMIC      [reduce using rule 62 (in_set)]
    OR         [reduce using rule 62 (in_set)]
    AND        [reduce using rule 62 (in_set)]
    SMALLER    [reduce using rule 62 (in_set)]
    GREATER    [reduce using rule 62 (in_set)]
    SMALLEQ    [reduce using rule 62 (in_set)]
    GREATEQ    [reduce using rule 62 (in_set)]
    EQUALS     [reduce using rule 62 (in_set)]
    DIFFERENT  [reduce using rule 62 (in_set)]
    IN         [reduce using rule 62 (in_set)]

    shift/reduce conflict on token SEMIC:
       62 in_set: expression IN expression •
       41 expression: expression • SEMIC
      First example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • SEMIC SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                $end
          ↳ declarations_list
            ↳ declaration                                                                                                                   declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                           ENDFUNC
                                                           ↳ statement                                               statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                             SEMIC
                                                                        ↳ in_set
                                                                          ↳ expression IN expression
                                                                                          ↳ expression • SEMIC
      Second example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                          $end
          ↳ declarations_list
            ↳ declaration                                                                                                             declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                     ENDFUNC
                                                           ↳ statement                                         statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                       SEMIC
                                                                        ↳ log_op
                                                                          ↳ in_set
                                                                            ↳ expression IN expression •

    shift/reduce conflict on token ADD:
       62 in_set: expression IN expression •
       43 math_op: expression • ADD expression
      First example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • ADD expression ADD expression SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                         ENDFUNC
                                                           ↳ statement                                                                             statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                                           SEMIC
                                                                        ↳ math_op
                                                                          ↳ expression                                        ADD expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ math_op
                                                                                                ↳ expression • ADD expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • ADD expression SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                             $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                        ENDFUNC
                                                           ↳ statement                                                            statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                          SEMIC
                                                                        ↳ math_op
                                                                          ↳ expression                       ADD expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token SUB:
       62 in_set: expression IN expression •
       44 math_op: expression • SUB expression
      First example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • SUB expression SUB expression SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                         ENDFUNC
                                                           ↳ statement                                                                             statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                                           SEMIC
                                                                        ↳ math_op
                                                                          ↳ expression                                        SUB expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ math_op
                                                                                                ↳ expression • SUB expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • SUB expression SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                             $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                        ENDFUNC
                                                           ↳ statement                                                            statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                          SEMIC
                                                                        ↳ math_op
                                                                          ↳ expression                       SUB expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token DIV:
       62 in_set: expression IN expression •
       45 math_op: expression • DIV expression
      First example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • DIV expression DIV expression SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                         ENDFUNC
                                                           ↳ statement                                                                             statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                                           SEMIC
                                                                        ↳ math_op
                                                                          ↳ expression                                        DIV expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ math_op
                                                                                                ↳ expression • DIV expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • DIV expression SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                             $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                        ENDFUNC
                                                           ↳ statement                                                            statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                          SEMIC
                                                                        ↳ math_op
                                                                          ↳ expression                       DIV expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token MULT:
       62 in_set: expression IN expression •
       46 math_op: expression • MULT expression
      First example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • MULT expression MULT expression SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                   declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                           ENDFUNC
                                                           ↳ statement                                                                               statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                                             SEMIC
                                                                        ↳ math_op
                                                                          ↳ expression                                         MULT expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ math_op
                                                                                                ↳ expression • MULT expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • MULT expression SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                         ENDFUNC
                                                           ↳ statement                                                             statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                           SEMIC
                                                                        ↳ math_op
                                                                          ↳ expression                       MULT expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token SMALLER:
       62 in_set: expression IN expression •
       52 log_op: expression • SMALLER expression
      First example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • SMALLER expression SMALLER expression SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                      $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                         declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                 ENDFUNC
                                                           ↳ statement                                                                                     statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                                                   SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                                            SMALLER expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ log_op
                                                                                                ↳ expression • SMALLER expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • SMALLER expression SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                 $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                    declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                            ENDFUNC
                                                           ↳ statement                                                                statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                              SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                       SMALLER expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token GREATER:
       62 in_set: expression IN expression •
       53 log_op: expression • GREATER expression
      First example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • GREATER expression GREATER expression SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                      $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                         declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                 ENDFUNC
                                                           ↳ statement                                                                                     statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                                                   SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                                            GREATER expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ log_op
                                                                                                ↳ expression • GREATER expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • GREATER expression SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                 $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                    declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                            ENDFUNC
                                                           ↳ statement                                                                statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                              SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                       GREATER expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token SMALLEQ:
       62 in_set: expression IN expression •
       54 log_op: expression • SMALLEQ expression
      First example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • SMALLEQ expression SMALLEQ expression SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                      $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                         declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                 ENDFUNC
                                                           ↳ statement                                                                                     statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                                                   SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                                            SMALLEQ expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ log_op
                                                                                                ↳ expression • SMALLEQ expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • SMALLEQ expression SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                 $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                    declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                            ENDFUNC
                                                           ↳ statement                                                                statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                              SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                       SMALLEQ expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token GREATEQ:
       62 in_set: expression IN expression •
       55 log_op: expression • GREATEQ expression
      First example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • GREATEQ expression GREATEQ expression SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                      $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                         declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                 ENDFUNC
                                                           ↳ statement                                                                                     statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                                                   SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                                            GREATEQ expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ log_op
                                                                                                ↳ expression • GREATEQ expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • GREATEQ expression SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                 $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                    declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                            ENDFUNC
                                                           ↳ statement                                                                statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                              SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                       GREATEQ expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token EQUALS:
       62 in_set: expression IN expression •
       56 log_op: expression • EQUALS expression
      First example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • EQUALS expression EQUALS expression SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                    $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                       declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                               ENDFUNC
                                                           ↳ statement                                                                                   statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                                                 SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                                           EQUALS expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ log_op
                                                                                                ↳ expression • EQUALS expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • EQUALS expression SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                   declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                           ENDFUNC
                                                           ↳ statement                                                               statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                             SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                       EQUALS expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token DIFFERENT:
       62 in_set: expression IN expression •
       57 log_op: expression • DIFFERENT expression
      First example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • DIFFERENT expression DIFFERENT expression SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                          $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                             declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                     ENDFUNC
                                                           ↳ statement                                                                                         statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                                                       SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                                              DIFFERENT expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ log_op
                                                                                                ↳ expression • DIFFERENT expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • DIFFERENT expression SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                   $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                      declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                              ENDFUNC
                                                           ↳ statement                                                                  statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                                SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                       DIFFERENT expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token OR:
       62 in_set: expression IN expression •
       58 log_op: expression • OR expression
      First example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • OR expression OR expression SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                            $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                               declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                       ENDFUNC
                                                           ↳ statement                                                                           statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                                         SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                                       OR expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ log_op
                                                                                                ↳ expression • OR expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • OR expression SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                            $end
          ↳ declarations_list
            ↳ declaration                                                                                                                               declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                       ENDFUNC
                                                           ↳ statement                                                           statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                         SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                       OR expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token AND:
       62 in_set: expression IN expression •
       59 log_op: expression • AND expression
      First example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • AND expression AND expression SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                         ENDFUNC
                                                           ↳ statement                                                                             statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                                           SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                                        AND expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ log_op
                                                                                                ↳ expression • AND expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • AND expression SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                             $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                        ENDFUNC
                                                           ↳ statement                                                            statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                          SEMIC
                                                                        ↳ log_op
                                                                          ↳ expression                       AND expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token IN:
       62 in_set: expression IN expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • IN expression IN expression SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                   declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                           ENDFUNC
                                                           ↳ statement                                                                               statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                                             SEMIC
                                                                        ↳ log_op
                                                                          ↳ in_set
                                                                            ↳ expression                                         IN expression
                                                                              ↳ in_set
                                                                                ↳ expression IN expression
                                                                                                ↳ log_op
                                                                                                  ↳ in_set
                                                                                                    ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC RETURN expression IN expression • IN expression SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                         ENDFUNC
                                                           ↳ statement                                                             statement_list
                                                             ↳ ret_st
                                                               ↳ RETURN expression                                           SEMIC
                                                                        ↳ log_op
                                                                          ↳ in_set
                                                                            ↳ expression                       IN expression
                                                                              ↳ log_op
                                                                                ↳ in_set
                                                                                  ↳ expression IN expression •



State 285

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   43        | expression ADD expression •
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232

    ADD     reduce using rule 43 (math_op)
    SUB     reduce using rule 43 (math_op)
    MULT    reduce using rule 43 (math_op)
    DIV     reduce using rule 43 (math_op)
    SEMIC   reduce using rule 43 (math_op)
    IN      [reduce using rule 43 (math_op)]
    PARENR  reduce using rule 43 (math_op)

    shift/reduce conflict on token IN:
       43 math_op: expression ADD expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression ADD expression • IN expression IN expression PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                   declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                           ENDFUNC
                                                           ↳ statement                                                                               statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                                            PARENR
                                                                        ↳ log_op
                                                                          ↳ in_set
                                                                            ↳ math_op                                           IN expression
                                                                              ↳ expression ADD expression
                                                                                               ↳ log_op
                                                                                                 ↳ in_set
                                                                                                   ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression ADD expression • IN expression PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                         ENDFUNC
                                                           ↳ statement                                                             statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                          PARENR
                                                                        ↳ log_op
                                                                          ↳ in_set
                                                                            ↳ expression                      IN expression
                                                                              ↳ math_op
                                                                                ↳ expression ADD expression •



State 286

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   44        | expression SUB expression •
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232

    ADD     reduce using rule 44 (math_op)
    SUB     reduce using rule 44 (math_op)
    MULT    reduce using rule 44 (math_op)
    DIV     reduce using rule 44 (math_op)
    SEMIC   reduce using rule 44 (math_op)
    IN      [reduce using rule 44 (math_op)]
    PARENR  reduce using rule 44 (math_op)

    shift/reduce conflict on token IN:
       44 math_op: expression SUB expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression SUB expression • IN expression IN expression PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                   declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                           ENDFUNC
                                                           ↳ statement                                                                               statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                                            PARENR
                                                                        ↳ log_op
                                                                          ↳ in_set
                                                                            ↳ math_op                                           IN expression
                                                                              ↳ expression SUB expression
                                                                                               ↳ log_op
                                                                                                 ↳ in_set
                                                                                                   ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression SUB expression • IN expression PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                         ENDFUNC
                                                           ↳ statement                                                             statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                          PARENR
                                                                        ↳ log_op
                                                                          ↳ in_set
                                                                            ↳ expression                      IN expression
                                                                              ↳ math_op
                                                                                ↳ expression SUB expression •



State 287

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   46        | expression MULT expression •
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232

    ADD     reduce using rule 46 (math_op)
    SUB     reduce using rule 46 (math_op)
    MULT    reduce using rule 46 (math_op)
    DIV     reduce using rule 46 (math_op)
    SEMIC   reduce using rule 46 (math_op)
    IN      [reduce using rule 46 (math_op)]
    PARENR  reduce using rule 46 (math_op)

    shift/reduce conflict on token IN:
       46 math_op: expression MULT expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression MULT expression • IN expression IN expression PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                 $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                    declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                            ENDFUNC
                                                           ↳ statement                                                                                statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                                             PARENR
                                                                        ↳ log_op
                                                                          ↳ in_set
                                                                            ↳ math_op                                            IN expression
                                                                              ↳ expression MULT expression
                                                                                                ↳ log_op
                                                                                                  ↳ in_set
                                                                                                    ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression MULT expression • IN expression PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                               $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                  declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                          ENDFUNC
                                                           ↳ statement                                                              statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                           PARENR
                                                                        ↳ log_op
                                                                          ↳ in_set
                                                                            ↳ expression                       IN expression
                                                                              ↳ math_op
                                                                                ↳ expression MULT expression •



State 288

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   45        | expression DIV expression •
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232

    ADD     reduce using rule 45 (math_op)
    SUB     reduce using rule 45 (math_op)
    MULT    reduce using rule 45 (math_op)
    DIV     reduce using rule 45 (math_op)
    SEMIC   reduce using rule 45 (math_op)
    IN      [reduce using rule 45 (math_op)]
    PARENR  reduce using rule 45 (math_op)

    shift/reduce conflict on token IN:
       45 math_op: expression DIV expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression DIV expression • IN expression IN expression PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                   declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                           ENDFUNC
                                                           ↳ statement                                                                               statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                                            PARENR
                                                                        ↳ log_op
                                                                          ↳ in_set
                                                                            ↳ math_op                                           IN expression
                                                                              ↳ expression DIV expression
                                                                                               ↳ log_op
                                                                                                 ↳ in_set
                                                                                                   ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression DIV expression • IN expression PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                         ENDFUNC
                                                           ↳ statement                                                             statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                          PARENR
                                                                        ↳ log_op
                                                                          ↳ in_set
                                                                            ↳ expression                      IN expression
                                                                              ↳ math_op
                                                                                ↳ expression DIV expression •



State 289

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   58       | expression OR expression •
   59       | expression • AND expression
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232

    ADD      reduce using rule 58 (log_op)
    SUB      reduce using rule 58 (log_op)
    MULT     reduce using rule 58 (log_op)
    DIV      reduce using rule 58 (log_op)
    SEMIC    reduce using rule 58 (log_op)
    OR       reduce using rule 58 (log_op)
    AND      reduce using rule 58 (log_op)
    SMALLER  reduce using rule 58 (log_op)
    GREATER  reduce using rule 58 (log_op)
    IN       [reduce using rule 58 (log_op)]
    PARENR   reduce using rule 58 (log_op)

    shift/reduce conflict on token IN:
       58 log_op: expression OR expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression OR expression • IN expression IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                               $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                  declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                          ENDFUNC
                                                           ↳ statement                                                                                                              statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                             PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ log_op                                           IN expression
                                                                                ↳ expression OR expression
                                                                                                ↳ log_op
                                                                                                  ↳ in_set
                                                                                                    ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression OR expression • IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                             $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                        ENDFUNC
                                                           ↳ statement                                                                                            statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                           PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ expression                     IN expression
                                                                                ↳ log_op
                                                                                  ↳ expression OR expression •



State 290

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   59       | expression AND expression •
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232

    ADD      reduce using rule 59 (log_op)
    SUB      reduce using rule 59 (log_op)
    MULT     reduce using rule 59 (log_op)
    DIV      reduce using rule 59 (log_op)
    SEMIC    reduce using rule 59 (log_op)
    OR       reduce using rule 59 (log_op)
    AND      reduce using rule 59 (log_op)
    SMALLER  reduce using rule 59 (log_op)
    GREATER  reduce using rule 59 (log_op)
    IN       [reduce using rule 59 (log_op)]
    PARENR   reduce using rule 59 (log_op)

    shift/reduce conflict on token IN:
       59 log_op: expression AND expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression AND expression • IN expression IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                                $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                   declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                           ENDFUNC
                                                           ↳ statement                                                                                                               statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                              PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ log_op                                            IN expression
                                                                                ↳ expression AND expression
                                                                                                 ↳ log_op
                                                                                                   ↳ in_set
                                                                                                     ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression AND expression • IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                         ENDFUNC
                                                           ↳ statement                                                                                             statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                            PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ expression                      IN expression
                                                                                ↳ log_op
                                                                                  ↳ expression AND expression •



State 291

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   52       | expression SMALLER expression •
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232

    ADD      reduce using rule 52 (log_op)
    SUB      reduce using rule 52 (log_op)
    MULT     reduce using rule 52 (log_op)
    DIV      reduce using rule 52 (log_op)
    SEMIC    reduce using rule 52 (log_op)
    OR       reduce using rule 52 (log_op)
    AND      reduce using rule 52 (log_op)
    SMALLER  reduce using rule 52 (log_op)
    GREATER  reduce using rule 52 (log_op)
    IN       [reduce using rule 52 (log_op)]
    PARENR   reduce using rule 52 (log_op)

    shift/reduce conflict on token IN:
       52 log_op: expression SMALLER expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression SMALLER expression • IN expression IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                                    $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                       declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                               ENDFUNC
                                                           ↳ statement                                                                                                                   statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                                  PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ log_op                                                IN expression
                                                                                ↳ expression SMALLER expression
                                                                                                     ↳ log_op
                                                                                                       ↳ in_set
                                                                                                         ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression SMALLER expression • IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                                  $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                     declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                             ENDFUNC
                                                           ↳ statement                                                                                                 statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ expression                          IN expression
                                                                                ↳ log_op
                                                                                  ↳ expression SMALLER expression •



State 292

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   53       | expression GREATER expression •
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232

    ADD      reduce using rule 53 (log_op)
    SUB      reduce using rule 53 (log_op)
    MULT     reduce using rule 53 (log_op)
    DIV      reduce using rule 53 (log_op)
    SEMIC    reduce using rule 53 (log_op)
    OR       reduce using rule 53 (log_op)
    AND      reduce using rule 53 (log_op)
    SMALLER  reduce using rule 53 (log_op)
    GREATER  reduce using rule 53 (log_op)
    IN       [reduce using rule 53 (log_op)]
    PARENR   reduce using rule 53 (log_op)

    shift/reduce conflict on token IN:
       53 log_op: expression GREATER expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression GREATER expression • IN expression IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                                    $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                       declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                               ENDFUNC
                                                           ↳ statement                                                                                                                   statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                                  PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ log_op                                                IN expression
                                                                                ↳ expression GREATER expression
                                                                                                     ↳ log_op
                                                                                                       ↳ in_set
                                                                                                         ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression GREATER expression • IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                                  $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                     declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                             ENDFUNC
                                                           ↳ statement                                                                                                 statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ expression                          IN expression
                                                                                ↳ log_op
                                                                                  ↳ expression GREATER expression •



State 293

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   54       | expression SMALLEQ expression •
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 232

    ADD        reduce using rule 54 (log_op)
    SUB        reduce using rule 54 (log_op)
    MULT       reduce using rule 54 (log_op)
    DIV        reduce using rule 54 (log_op)
    SEMIC      reduce using rule 54 (log_op)
    OR         reduce using rule 54 (log_op)
    AND        reduce using rule 54 (log_op)
    SMALLER    reduce using rule 54 (log_op)
    GREATER    reduce using rule 54 (log_op)
    SMALLEQ    reduce using rule 54 (log_op)
    GREATEQ    reduce using rule 54 (log_op)
    EQUALS     reduce using rule 54 (log_op)
    DIFFERENT  reduce using rule 54 (log_op)
    IN         [reduce using rule 54 (log_op)]
    PARENR     reduce using rule 54 (log_op)

    shift/reduce conflict on token IN:
       54 log_op: expression SMALLEQ expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression SMALLEQ expression • IN expression IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                                    $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                       declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                               ENDFUNC
                                                           ↳ statement                                                                                                                   statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                                  PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ log_op                                                IN expression
                                                                                ↳ expression SMALLEQ expression
                                                                                                     ↳ log_op
                                                                                                       ↳ in_set
                                                                                                         ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression SMALLEQ expression • IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                                  $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                     declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                             ENDFUNC
                                                           ↳ statement                                                                                                 statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ expression                          IN expression
                                                                                ↳ log_op
                                                                                  ↳ expression SMALLEQ expression •



State 294

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   55       | expression GREATEQ expression •
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 232

    ADD        reduce using rule 55 (log_op)
    SUB        reduce using rule 55 (log_op)
    MULT       reduce using rule 55 (log_op)
    DIV        reduce using rule 55 (log_op)
    SEMIC      reduce using rule 55 (log_op)
    OR         reduce using rule 55 (log_op)
    AND        reduce using rule 55 (log_op)
    SMALLER    reduce using rule 55 (log_op)
    GREATER    reduce using rule 55 (log_op)
    SMALLEQ    reduce using rule 55 (log_op)
    GREATEQ    reduce using rule 55 (log_op)
    EQUALS     reduce using rule 55 (log_op)
    DIFFERENT  reduce using rule 55 (log_op)
    IN         [reduce using rule 55 (log_op)]
    PARENR     reduce using rule 55 (log_op)

    shift/reduce conflict on token IN:
       55 log_op: expression GREATEQ expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression GREATEQ expression • IN expression IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                                    $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                       declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                               ENDFUNC
                                                           ↳ statement                                                                                                                   statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                                  PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ log_op                                                IN expression
                                                                                ↳ expression GREATEQ expression
                                                                                                     ↳ log_op
                                                                                                       ↳ in_set
                                                                                                         ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression GREATEQ expression • IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                                  $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                     declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                             ENDFUNC
                                                           ↳ statement                                                                                                 statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ expression                          IN expression
                                                                                ↳ log_op
                                                                                  ↳ expression GREATEQ expression •



State 295

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   56       | expression EQUALS expression •
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 232

    ADD        reduce using rule 56 (log_op)
    SUB        reduce using rule 56 (log_op)
    MULT       reduce using rule 56 (log_op)
    DIV        reduce using rule 56 (log_op)
    SEMIC      reduce using rule 56 (log_op)
    OR         reduce using rule 56 (log_op)
    AND        reduce using rule 56 (log_op)
    SMALLER    reduce using rule 56 (log_op)
    GREATER    reduce using rule 56 (log_op)
    SMALLEQ    reduce using rule 56 (log_op)
    GREATEQ    reduce using rule 56 (log_op)
    EQUALS     reduce using rule 56 (log_op)
    DIFFERENT  reduce using rule 56 (log_op)
    IN         [reduce using rule 56 (log_op)]
    PARENR     reduce using rule 56 (log_op)

    shift/reduce conflict on token IN:
       56 log_op: expression EQUALS expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression EQUALS expression • IN expression IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                                   $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                      declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                              ENDFUNC
                                                           ↳ statement                                                                                                                  statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                                 PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ log_op                                               IN expression
                                                                                ↳ expression EQUALS expression
                                                                                                    ↳ log_op
                                                                                                      ↳ in_set
                                                                                                        ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression EQUALS expression • IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                                 $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                    declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                            ENDFUNC
                                                           ↳ statement                                                                                                statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                               PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ expression                         IN expression
                                                                                ↳ log_op
                                                                                  ↳ expression EQUALS expression •



State 296

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   57       | expression DIFFERENT expression •
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 232

    ADD        reduce using rule 57 (log_op)
    SUB        reduce using rule 57 (log_op)
    MULT       reduce using rule 57 (log_op)
    DIV        reduce using rule 57 (log_op)
    SEMIC      reduce using rule 57 (log_op)
    OR         reduce using rule 57 (log_op)
    AND        reduce using rule 57 (log_op)
    SMALLER    reduce using rule 57 (log_op)
    GREATER    reduce using rule 57 (log_op)
    SMALLEQ    reduce using rule 57 (log_op)
    GREATEQ    reduce using rule 57 (log_op)
    EQUALS     reduce using rule 57 (log_op)
    DIFFERENT  reduce using rule 57 (log_op)
    IN         [reduce using rule 57 (log_op)]
    PARENR     reduce using rule 57 (log_op)

    shift/reduce conflict on token IN:
       57 log_op: expression DIFFERENT expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression DIFFERENT expression • IN expression IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                                      $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                         declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                                 ENDFUNC
                                                           ↳ statement                                                                                                                     statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                                    PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ log_op                                                  IN expression
                                                                                ↳ expression DIFFERENT expression
                                                                                                       ↳ log_op
                                                                                                         ↳ in_set
                                                                                                           ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression DIFFERENT expression • IN expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                                    $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                       declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                               ENDFUNC
                                                           ↳ statement                                                                                                   statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                  PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ in_set
                                                                              ↳ expression                            IN expression
                                                                                ↳ log_op
                                                                                  ↳ expression DIFFERENT expression •



State 297

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression
   62       | expression IN expression •

    ADD        shift, and go to state 219
    SUB        shift, and go to state 220
    MULT       shift, and go to state 221
    DIV        shift, and go to state 222
    SEMIC      shift, and go to state 223
    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232

    ADD        [reduce using rule 62 (in_set)]
    SUB        [reduce using rule 62 (in_set)]
    MULT       [reduce using rule 62 (in_set)]
    DIV        [reduce using rule 62 (in_set)]
    SEMIC      [reduce using rule 62 (in_set)]
    OR         [reduce using rule 62 (in_set)]
    AND        [reduce using rule 62 (in_set)]
    SMALLER    [reduce using rule 62 (in_set)]
    GREATER    [reduce using rule 62 (in_set)]
    SMALLEQ    [reduce using rule 62 (in_set)]
    GREATEQ    [reduce using rule 62 (in_set)]
    EQUALS     [reduce using rule 62 (in_set)]
    DIFFERENT  [reduce using rule 62 (in_set)]
    IN         [reduce using rule 62 (in_set)]
    PARENR     reduce using rule 62 (in_set)

    shift/reduce conflict on token SEMIC:
       62 in_set: expression IN expression •
       41 expression: expression • SEMIC
      First example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression IN expression • SEMIC SEMIC PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                         $end
          ↳ declarations_list
            ↳ declaration                                                                                                                            declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                    ENDFUNC
                                                           ↳ statement                                                        statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                     PARENR
                                                                        ↳ expression                             SEMIC
                                                                          ↳ in_set
                                                                            ↳ expression IN expression
                                                                                            ↳ expression • SEMIC
      Second example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression IN expression • SEMIC PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                   $end
          ↳ declarations_list
            ↳ declaration                                                                                                                      declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                              ENDFUNC
                                                           ↳ statement                                                  statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                               PARENR
                                                                        ↳ expression                       SEMIC
                                                                          ↳ log_op
                                                                            ↳ in_set
                                                                              ↳ expression IN expression •

    shift/reduce conflict on token ADD:
       62 in_set: expression IN expression •
       43 math_op: expression • ADD expression
      First example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression IN expression • ADD expression ADD expression PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                               $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                  declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                          ENDFUNC
                                                           ↳ statement                                                                              statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                                           PARENR
                                                                        ↳ math_op
                                                                          ↳ expression                                        ADD expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ math_op
                                                                                                ↳ expression • ADD expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression IN expression • ADD expression PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                         ENDFUNC
                                                           ↳ statement                                                             statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                          PARENR
                                                                        ↳ math_op
                                                                          ↳ expression                       ADD expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token SUB:
       62 in_set: expression IN expression •
       44 math_op: expression • SUB expression
      First example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression IN expression • SUB expression SUB expression PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                               $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                  declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                          ENDFUNC
                                                           ↳ statement                                                                              statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                                           PARENR
                                                                        ↳ math_op
                                                                          ↳ expression                                        SUB expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ math_op
                                                                                                ↳ expression • SUB expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression IN expression • SUB expression PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                         ENDFUNC
                                                           ↳ statement                                                             statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                          PARENR
                                                                        ↳ math_op
                                                                          ↳ expression                       SUB expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token DIV:
       62 in_set: expression IN expression •
       45 math_op: expression • DIV expression
      First example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression IN expression • DIV expression DIV expression PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                               $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                  declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                          ENDFUNC
                                                           ↳ statement                                                                              statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                                           PARENR
                                                                        ↳ math_op
                                                                          ↳ expression                                        DIV expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ math_op
                                                                                                ↳ expression • DIV expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression IN expression • DIV expression PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                         ENDFUNC
                                                           ↳ statement                                                             statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                          PARENR
                                                                        ↳ math_op
                                                                          ↳ expression                       DIV expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token MULT:
       62 in_set: expression IN expression •
       46 math_op: expression • MULT expression
      First example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression IN expression • MULT expression MULT expression PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                 $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                    declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                            ENDFUNC
                                                           ↳ statement                                                                                statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                                             PARENR
                                                                        ↳ math_op
                                                                          ↳ expression                                         MULT expression
                                                                            ↳ in_set
                                                                              ↳ expression IN expression
                                                                                              ↳ math_op
                                                                                                ↳ expression • MULT expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC PARENL expression IN expression • MULT expression PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                               $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                  declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                          ENDFUNC
                                                           ↳ statement                                                              statement_list
                                                             ↳ expression
                                                               ↳ PARENL expression                                           PARENR
                                                                        ↳ math_op
                                                                          ↳ expression                       MULT expression
                                                                            ↳ log_op
                                                                              ↳ in_set
                                                                                ↳ expression IN expression •

    shift/reduce conflict on token SMALLER:
       62 in_set: expression IN expression •
       52 log_op: expression • SMALLER expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • SMALLER expression SMALLER expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                                       $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                          declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                                  ENDFUNC
                                                           ↳ statement                                                                                                                      statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                                     PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                                            SMALLER expression
                                                                              ↳ in_set
                                                                                ↳ expression IN expression
                                                                                                ↳ log_op
                                                                                                  ↳ expression • SMALLER expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • SMALLER expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                                  $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                     declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                             ENDFUNC
                                                           ↳ statement                                                                                                 statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                       SMALLER expression
                                                                              ↳ log_op
                                                                                ↳ in_set
                                                                                  ↳ expression IN expression •

    shift/reduce conflict on token GREATER:
       62 in_set: expression IN expression •
       53 log_op: expression • GREATER expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • GREATER expression GREATER expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                                       $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                          declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                                  ENDFUNC
                                                           ↳ statement                                                                                                                      statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                                     PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                                            GREATER expression
                                                                              ↳ in_set
                                                                                ↳ expression IN expression
                                                                                                ↳ log_op
                                                                                                  ↳ expression • GREATER expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • GREATER expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                                  $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                     declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                             ENDFUNC
                                                           ↳ statement                                                                                                 statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                       GREATER expression
                                                                              ↳ log_op
                                                                                ↳ in_set
                                                                                  ↳ expression IN expression •

    shift/reduce conflict on token SMALLEQ:
       62 in_set: expression IN expression •
       54 log_op: expression • SMALLEQ expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • SMALLEQ expression SMALLEQ expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                                       $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                          declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                                  ENDFUNC
                                                           ↳ statement                                                                                                                      statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                                     PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                                            SMALLEQ expression
                                                                              ↳ in_set
                                                                                ↳ expression IN expression
                                                                                                ↳ log_op
                                                                                                  ↳ expression • SMALLEQ expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • SMALLEQ expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                                  $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                     declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                             ENDFUNC
                                                           ↳ statement                                                                                                 statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                       SMALLEQ expression
                                                                              ↳ log_op
                                                                                ↳ in_set
                                                                                  ↳ expression IN expression •

    shift/reduce conflict on token GREATEQ:
       62 in_set: expression IN expression •
       55 log_op: expression • GREATEQ expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • GREATEQ expression GREATEQ expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                                       $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                          declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                                  ENDFUNC
                                                           ↳ statement                                                                                                                      statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                                     PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                                            GREATEQ expression
                                                                              ↳ in_set
                                                                                ↳ expression IN expression
                                                                                                ↳ log_op
                                                                                                  ↳ expression • GREATEQ expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • GREATEQ expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                                  $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                     declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                             ENDFUNC
                                                           ↳ statement                                                                                                 statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                       GREATEQ expression
                                                                              ↳ log_op
                                                                                ↳ in_set
                                                                                  ↳ expression IN expression •

    shift/reduce conflict on token EQUALS:
       62 in_set: expression IN expression •
       56 log_op: expression • EQUALS expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • EQUALS expression EQUALS expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                                     $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                        declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                                ENDFUNC
                                                           ↳ statement                                                                                                                    statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                                   PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                                           EQUALS expression
                                                                              ↳ in_set
                                                                                ↳ expression IN expression
                                                                                                ↳ log_op
                                                                                                  ↳ expression • EQUALS expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • EQUALS expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                                 $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                    declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                            ENDFUNC
                                                           ↳ statement                                                                                                statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                               PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                       EQUALS expression
                                                                              ↳ log_op
                                                                                ↳ in_set
                                                                                  ↳ expression IN expression •

    shift/reduce conflict on token DIFFERENT:
       62 in_set: expression IN expression •
       57 log_op: expression • DIFFERENT expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • DIFFERENT expression DIFFERENT expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                                           $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                              declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                                      ENDFUNC
                                                           ↳ statement                                                                                                                          statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                                         PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                                              DIFFERENT expression
                                                                              ↳ in_set
                                                                                ↳ expression IN expression
                                                                                                ↳ log_op
                                                                                                  ↳ expression • DIFFERENT expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • DIFFERENT expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                                    $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                       declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                               ENDFUNC
                                                           ↳ statement                                                                                                   statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                  PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                       DIFFERENT expression
                                                                              ↳ log_op
                                                                                ↳ in_set
                                                                                  ↳ expression IN expression •

    shift/reduce conflict on token OR:
       62 in_set: expression IN expression •
       58 log_op: expression • OR expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • OR expression OR expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                             $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                        ENDFUNC
                                                           ↳ statement                                                                                                            statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                           PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                                       OR expression
                                                                              ↳ in_set
                                                                                ↳ expression IN expression
                                                                                                ↳ log_op
                                                                                                  ↳ expression • OR expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • OR expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                             $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                        ENDFUNC
                                                           ↳ statement                                                                                            statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                           PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                       OR expression
                                                                              ↳ log_op
                                                                                ↳ in_set
                                                                                  ↳ expression IN expression •

    shift/reduce conflict on token AND:
       62 in_set: expression IN expression •
       59 log_op: expression • AND expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • AND expression AND expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                               $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                  declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                          ENDFUNC
                                                           ↳ statement                                                                                                              statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                                             PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                                        AND expression
                                                                              ↳ in_set
                                                                                ↳ expression IN expression
                                                                                                ↳ log_op
                                                                                                  ↳ expression • AND expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FOR PARENL expression IN expression • AND expression PARENR STFUNC statement_list ENDFUNC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                         ENDFUNC
                                                           ↳ statement                                                                                             statement_list
                                                             ↳ basic_ops
                                                               ↳ FOR PARENL log_op                                            PARENR STFUNC statement_list ENDFUNC
                                                                            ↳ expression                       AND expression
                                                                              ↳ log_op
                                                                                ↳ in_set
                                                                                  ↳ expression IN expression •

    shift/reduce conflict on token IN:
       62 in_set: expression IN expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression IN expression • IN expression IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                 $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                    declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                            ENDFUNC
                                                           ↳ statement                                                                                                statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                                             PARENR set_op SEMIC
                                                                               ↳ expression                                         IN expression
                                                                                 ↳ in_set
                                                                                   ↳ expression IN expression
                                                                                                   ↳ log_op
                                                                                                     ↳ in_set
                                                                                                       ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC FORALL PARENL expression IN expression • IN expression PARENR set_op SEMIC statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                               $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                  declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                          ENDFUNC
                                                           ↳ statement                                                                              statement_list
                                                             ↳ basic_ops
                                                               ↳ FORALL PARENL in_set                                           PARENR set_op SEMIC
                                                                               ↳ expression                       IN expression
                                                                                 ↳ log_op
                                                                                   ↳ in_set
                                                                                     ↳ expression IN expression •



State 298

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   43        | expression ADD expression •
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 238
    AND        shift, and go to state 239
    SMALLER    shift, and go to state 240
    GREATER    shift, and go to state 241
    SMALLEQ    shift, and go to state 242
    GREATEQ    shift, and go to state 243
    EQUALS     shift, and go to state 244
    DIFFERENT  shift, and go to state 245
    IN         shift, and go to state 246

    ADD     reduce using rule 43 (math_op)
    SUB     reduce using rule 43 (math_op)
    MULT    reduce using rule 43 (math_op)
    DIV     reduce using rule 43 (math_op)
    SEMIC   reduce using rule 43 (math_op)
    IN      [reduce using rule 43 (math_op)]
    COMMA   reduce using rule 43 (math_op)
    PARENR  reduce using rule 43 (math_op)

    shift/reduce conflict on token IN:
       43 math_op: expression ADD expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression ADD expression • IN expression IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                       $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                          declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                  ENDFUNC
                                                           ↳ statement                                                                                                      statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                               PARENR
                                                                             ↳ expression                                                            COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ math_op                                           IN expression
                                                                                     ↳ expression ADD expression
                                                                                                      ↳ log_op
                                                                                                        ↳ in_set
                                                                                                          ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression ADD expression • IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                     $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                        declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                ENDFUNC
                                                           ↳ statement                                                                                    statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                             PARENR
                                                                             ↳ expression                                          COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ expression                      IN expression
                                                                                     ↳ math_op
                                                                                       ↳ expression ADD expression •



State 299

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   44        | expression SUB expression •
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 238
    AND        shift, and go to state 239
    SMALLER    shift, and go to state 240
    GREATER    shift, and go to state 241
    SMALLEQ    shift, and go to state 242
    GREATEQ    shift, and go to state 243
    EQUALS     shift, and go to state 244
    DIFFERENT  shift, and go to state 245
    IN         shift, and go to state 246

    ADD     reduce using rule 44 (math_op)
    SUB     reduce using rule 44 (math_op)
    MULT    reduce using rule 44 (math_op)
    DIV     reduce using rule 44 (math_op)
    SEMIC   reduce using rule 44 (math_op)
    IN      [reduce using rule 44 (math_op)]
    COMMA   reduce using rule 44 (math_op)
    PARENR  reduce using rule 44 (math_op)

    shift/reduce conflict on token IN:
       44 math_op: expression SUB expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression SUB expression • IN expression IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                       $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                          declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                  ENDFUNC
                                                           ↳ statement                                                                                                      statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                               PARENR
                                                                             ↳ expression                                                            COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ math_op                                           IN expression
                                                                                     ↳ expression SUB expression
                                                                                                      ↳ log_op
                                                                                                        ↳ in_set
                                                                                                          ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression SUB expression • IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                     $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                        declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                ENDFUNC
                                                           ↳ statement                                                                                    statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                             PARENR
                                                                             ↳ expression                                          COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ expression                      IN expression
                                                                                     ↳ math_op
                                                                                       ↳ expression SUB expression •



State 300

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   46        | expression MULT expression •
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 238
    AND        shift, and go to state 239
    SMALLER    shift, and go to state 240
    GREATER    shift, and go to state 241
    SMALLEQ    shift, and go to state 242
    GREATEQ    shift, and go to state 243
    EQUALS     shift, and go to state 244
    DIFFERENT  shift, and go to state 245
    IN         shift, and go to state 246

    ADD     reduce using rule 46 (math_op)
    SUB     reduce using rule 46 (math_op)
    MULT    reduce using rule 46 (math_op)
    DIV     reduce using rule 46 (math_op)
    SEMIC   reduce using rule 46 (math_op)
    IN      [reduce using rule 46 (math_op)]
    COMMA   reduce using rule 46 (math_op)
    PARENR  reduce using rule 46 (math_op)

    shift/reduce conflict on token IN:
       46 math_op: expression MULT expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression MULT expression • IN expression IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                        $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                           declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                   ENDFUNC
                                                           ↳ statement                                                                                                       statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                                PARENR
                                                                             ↳ expression                                                             COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ math_op                                            IN expression
                                                                                     ↳ expression MULT expression
                                                                                                       ↳ log_op
                                                                                                         ↳ in_set
                                                                                                           ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression MULT expression • IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                      $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                         declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                 ENDFUNC
                                                           ↳ statement                                                                                     statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                              PARENR
                                                                             ↳ expression                                           COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ expression                       IN expression
                                                                                     ↳ math_op
                                                                                       ↳ expression MULT expression •



State 301

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   45        | expression DIV expression •
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    OR         shift, and go to state 238
    AND        shift, and go to state 239
    SMALLER    shift, and go to state 240
    GREATER    shift, and go to state 241
    SMALLEQ    shift, and go to state 242
    GREATEQ    shift, and go to state 243
    EQUALS     shift, and go to state 244
    DIFFERENT  shift, and go to state 245
    IN         shift, and go to state 246

    ADD     reduce using rule 45 (math_op)
    SUB     reduce using rule 45 (math_op)
    MULT    reduce using rule 45 (math_op)
    DIV     reduce using rule 45 (math_op)
    SEMIC   reduce using rule 45 (math_op)
    IN      [reduce using rule 45 (math_op)]
    COMMA   reduce using rule 45 (math_op)
    PARENR  reduce using rule 45 (math_op)

    shift/reduce conflict on token IN:
       45 math_op: expression DIV expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression DIV expression • IN expression IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                       $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                          declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                  ENDFUNC
                                                           ↳ statement                                                                                                      statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                               PARENR
                                                                             ↳ expression                                                            COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ math_op                                           IN expression
                                                                                     ↳ expression DIV expression
                                                                                                      ↳ log_op
                                                                                                        ↳ in_set
                                                                                                          ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression DIV expression • IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                     $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                        declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                ENDFUNC
                                                           ↳ statement                                                                                    statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                             PARENR
                                                                             ↳ expression                                          COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ expression                      IN expression
                                                                                     ↳ math_op
                                                                                       ↳ expression DIV expression •



State 302

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   58       | expression OR expression •
   59       | expression • AND expression
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 242
    GREATEQ    shift, and go to state 243
    EQUALS     shift, and go to state 244
    DIFFERENT  shift, and go to state 245
    IN         shift, and go to state 246

    ADD      reduce using rule 58 (log_op)
    SUB      reduce using rule 58 (log_op)
    MULT     reduce using rule 58 (log_op)
    DIV      reduce using rule 58 (log_op)
    SEMIC    reduce using rule 58 (log_op)
    OR       reduce using rule 58 (log_op)
    AND      reduce using rule 58 (log_op)
    SMALLER  reduce using rule 58 (log_op)
    GREATER  reduce using rule 58 (log_op)
    IN       [reduce using rule 58 (log_op)]
    COMMA    reduce using rule 58 (log_op)
    PARENR   reduce using rule 58 (log_op)

    shift/reduce conflict on token IN:
       58 log_op: expression OR expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression OR expression • IN expression IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                      $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                         declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                 ENDFUNC
                                                           ↳ statement                                                                                                     statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                              PARENR
                                                                             ↳ expression                                                           COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ log_op                                           IN expression
                                                                                     ↳ expression OR expression
                                                                                                     ↳ log_op
                                                                                                       ↳ in_set
                                                                                                         ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression OR expression • IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                    $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                       declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                               ENDFUNC
                                                           ↳ statement                                                                                   statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                            PARENR
                                                                             ↳ expression                                         COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ expression                     IN expression
                                                                                     ↳ log_op
                                                                                       ↳ expression OR expression •



State 303

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   59       | expression AND expression •
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 242
    GREATEQ    shift, and go to state 243
    EQUALS     shift, and go to state 244
    DIFFERENT  shift, and go to state 245
    IN         shift, and go to state 246

    ADD      reduce using rule 59 (log_op)
    SUB      reduce using rule 59 (log_op)
    MULT     reduce using rule 59 (log_op)
    DIV      reduce using rule 59 (log_op)
    SEMIC    reduce using rule 59 (log_op)
    OR       reduce using rule 59 (log_op)
    AND      reduce using rule 59 (log_op)
    SMALLER  reduce using rule 59 (log_op)
    GREATER  reduce using rule 59 (log_op)
    IN       [reduce using rule 59 (log_op)]
    COMMA    reduce using rule 59 (log_op)
    PARENR   reduce using rule 59 (log_op)

    shift/reduce conflict on token IN:
       59 log_op: expression AND expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression AND expression • IN expression IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                       $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                          declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                  ENDFUNC
                                                           ↳ statement                                                                                                      statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                               PARENR
                                                                             ↳ expression                                                            COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ log_op                                            IN expression
                                                                                     ↳ expression AND expression
                                                                                                      ↳ log_op
                                                                                                        ↳ in_set
                                                                                                          ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression AND expression • IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                     $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                        declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                ENDFUNC
                                                           ↳ statement                                                                                    statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                             PARENR
                                                                             ↳ expression                                          COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ expression                      IN expression
                                                                                     ↳ log_op
                                                                                       ↳ expression AND expression •



State 304

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   52       | expression SMALLER expression •
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 242
    GREATEQ    shift, and go to state 243
    EQUALS     shift, and go to state 244
    DIFFERENT  shift, and go to state 245
    IN         shift, and go to state 246

    ADD      reduce using rule 52 (log_op)
    SUB      reduce using rule 52 (log_op)
    MULT     reduce using rule 52 (log_op)
    DIV      reduce using rule 52 (log_op)
    SEMIC    reduce using rule 52 (log_op)
    OR       reduce using rule 52 (log_op)
    AND      reduce using rule 52 (log_op)
    SMALLER  reduce using rule 52 (log_op)
    GREATER  reduce using rule 52 (log_op)
    IN       [reduce using rule 52 (log_op)]
    COMMA    reduce using rule 52 (log_op)
    PARENR   reduce using rule 52 (log_op)

    shift/reduce conflict on token IN:
       52 log_op: expression SMALLER expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression SMALLER expression • IN expression IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                           $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                              declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                      ENDFUNC
                                                           ↳ statement                                                                                                          statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                                   PARENR
                                                                             ↳ expression                                                                COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ log_op                                                IN expression
                                                                                     ↳ expression SMALLER expression
                                                                                                          ↳ log_op
                                                                                                            ↳ in_set
                                                                                                              ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression SMALLER expression • IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                         $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                            declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                    ENDFUNC
                                                           ↳ statement                                                                                        statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                 PARENR
                                                                             ↳ expression                                              COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ expression                          IN expression
                                                                                     ↳ log_op
                                                                                       ↳ expression SMALLER expression •



State 305

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   53       | expression GREATER expression •
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    SMALLEQ    shift, and go to state 242
    GREATEQ    shift, and go to state 243
    EQUALS     shift, and go to state 244
    DIFFERENT  shift, and go to state 245
    IN         shift, and go to state 246

    ADD      reduce using rule 53 (log_op)
    SUB      reduce using rule 53 (log_op)
    MULT     reduce using rule 53 (log_op)
    DIV      reduce using rule 53 (log_op)
    SEMIC    reduce using rule 53 (log_op)
    OR       reduce using rule 53 (log_op)
    AND      reduce using rule 53 (log_op)
    SMALLER  reduce using rule 53 (log_op)
    GREATER  reduce using rule 53 (log_op)
    IN       [reduce using rule 53 (log_op)]
    COMMA    reduce using rule 53 (log_op)
    PARENR   reduce using rule 53 (log_op)

    shift/reduce conflict on token IN:
       53 log_op: expression GREATER expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression GREATER expression • IN expression IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                           $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                              declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                      ENDFUNC
                                                           ↳ statement                                                                                                          statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                                   PARENR
                                                                             ↳ expression                                                                COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ log_op                                                IN expression
                                                                                     ↳ expression GREATER expression
                                                                                                          ↳ log_op
                                                                                                            ↳ in_set
                                                                                                              ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression GREATER expression • IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                         $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                            declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                    ENDFUNC
                                                           ↳ statement                                                                                        statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                 PARENR
                                                                             ↳ expression                                              COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ expression                          IN expression
                                                                                     ↳ log_op
                                                                                       ↳ expression GREATER expression •



State 306

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   54       | expression SMALLEQ expression •
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 246

    ADD        reduce using rule 54 (log_op)
    SUB        reduce using rule 54 (log_op)
    MULT       reduce using rule 54 (log_op)
    DIV        reduce using rule 54 (log_op)
    SEMIC      reduce using rule 54 (log_op)
    OR         reduce using rule 54 (log_op)
    AND        reduce using rule 54 (log_op)
    SMALLER    reduce using rule 54 (log_op)
    GREATER    reduce using rule 54 (log_op)
    SMALLEQ    reduce using rule 54 (log_op)
    GREATEQ    reduce using rule 54 (log_op)
    EQUALS     reduce using rule 54 (log_op)
    DIFFERENT  reduce using rule 54 (log_op)
    IN         [reduce using rule 54 (log_op)]
    COMMA      reduce using rule 54 (log_op)
    PARENR     reduce using rule 54 (log_op)

    shift/reduce conflict on token IN:
       54 log_op: expression SMALLEQ expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression SMALLEQ expression • IN expression IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                           $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                              declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                      ENDFUNC
                                                           ↳ statement                                                                                                          statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                                   PARENR
                                                                             ↳ expression                                                                COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ log_op                                                IN expression
                                                                                     ↳ expression SMALLEQ expression
                                                                                                          ↳ log_op
                                                                                                            ↳ in_set
                                                                                                              ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression SMALLEQ expression • IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                         $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                            declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                    ENDFUNC
                                                           ↳ statement                                                                                        statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                 PARENR
                                                                             ↳ expression                                              COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ expression                          IN expression
                                                                                     ↳ log_op
                                                                                       ↳ expression SMALLEQ expression •



State 307

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   55       | expression GREATEQ expression •
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 246

    ADD        reduce using rule 55 (log_op)
    SUB        reduce using rule 55 (log_op)
    MULT       reduce using rule 55 (log_op)
    DIV        reduce using rule 55 (log_op)
    SEMIC      reduce using rule 55 (log_op)
    OR         reduce using rule 55 (log_op)
    AND        reduce using rule 55 (log_op)
    SMALLER    reduce using rule 55 (log_op)
    GREATER    reduce using rule 55 (log_op)
    SMALLEQ    reduce using rule 55 (log_op)
    GREATEQ    reduce using rule 55 (log_op)
    EQUALS     reduce using rule 55 (log_op)
    DIFFERENT  reduce using rule 55 (log_op)
    IN         [reduce using rule 55 (log_op)]
    COMMA      reduce using rule 55 (log_op)
    PARENR     reduce using rule 55 (log_op)

    shift/reduce conflict on token IN:
       55 log_op: expression GREATEQ expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression GREATEQ expression • IN expression IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                           $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                              declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                      ENDFUNC
                                                           ↳ statement                                                                                                          statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                                   PARENR
                                                                             ↳ expression                                                                COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ log_op                                                IN expression
                                                                                     ↳ expression GREATEQ expression
                                                                                                          ↳ log_op
                                                                                                            ↳ in_set
                                                                                                              ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression GREATEQ expression • IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                         $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                            declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                    ENDFUNC
                                                           ↳ statement                                                                                        statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                 PARENR
                                                                             ↳ expression                                              COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ expression                          IN expression
                                                                                     ↳ log_op
                                                                                       ↳ expression GREATEQ expression •



State 308

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   56       | expression EQUALS expression •
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 246

    ADD        reduce using rule 56 (log_op)
    SUB        reduce using rule 56 (log_op)
    MULT       reduce using rule 56 (log_op)
    DIV        reduce using rule 56 (log_op)
    SEMIC      reduce using rule 56 (log_op)
    OR         reduce using rule 56 (log_op)
    AND        reduce using rule 56 (log_op)
    SMALLER    reduce using rule 56 (log_op)
    GREATER    reduce using rule 56 (log_op)
    SMALLEQ    reduce using rule 56 (log_op)
    GREATEQ    reduce using rule 56 (log_op)
    EQUALS     reduce using rule 56 (log_op)
    DIFFERENT  reduce using rule 56 (log_op)
    IN         [reduce using rule 56 (log_op)]
    COMMA      reduce using rule 56 (log_op)
    PARENR     reduce using rule 56 (log_op)

    shift/reduce conflict on token IN:
       56 log_op: expression EQUALS expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression EQUALS expression • IN expression IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                          $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                             declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                     ENDFUNC
                                                           ↳ statement                                                                                                         statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                                  PARENR
                                                                             ↳ expression                                                               COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ log_op                                               IN expression
                                                                                     ↳ expression EQUALS expression
                                                                                                         ↳ log_op
                                                                                                           ↳ in_set
                                                                                                             ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression EQUALS expression • IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                        $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                           declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                   ENDFUNC
                                                           ↳ statement                                                                                       statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                PARENR
                                                                             ↳ expression                                             COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ expression                         IN expression
                                                                                     ↳ log_op
                                                                                       ↳ expression EQUALS expression •



State 309

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   57       | expression DIFFERENT expression •
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    IN  shift, and go to state 246

    ADD        reduce using rule 57 (log_op)
    SUB        reduce using rule 57 (log_op)
    MULT       reduce using rule 57 (log_op)
    DIV        reduce using rule 57 (log_op)
    SEMIC      reduce using rule 57 (log_op)
    OR         reduce using rule 57 (log_op)
    AND        reduce using rule 57 (log_op)
    SMALLER    reduce using rule 57 (log_op)
    GREATER    reduce using rule 57 (log_op)
    SMALLEQ    reduce using rule 57 (log_op)
    GREATEQ    reduce using rule 57 (log_op)
    EQUALS     reduce using rule 57 (log_op)
    DIFFERENT  reduce using rule 57 (log_op)
    IN         [reduce using rule 57 (log_op)]
    COMMA      reduce using rule 57 (log_op)
    PARENR     reduce using rule 57 (log_op)

    shift/reduce conflict on token IN:
       57 log_op: expression DIFFERENT expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression DIFFERENT expression • IN expression IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                             $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                        ENDFUNC
                                                           ↳ statement                                                                                                            statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                                     PARENR
                                                                             ↳ expression                                                                  COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ log_op                                                  IN expression
                                                                                     ↳ expression DIFFERENT expression
                                                                                                            ↳ log_op
                                                                                                              ↳ in_set
                                                                                                                ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression DIFFERENT expression • IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                           $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                              declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                      ENDFUNC
                                                           ↳ statement                                                                                          statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                   PARENR
                                                                             ↳ expression                                                COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ expression                            IN expression
                                                                                     ↳ log_op
                                                                                       ↳ expression DIFFERENT expression •



State 310

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   52 log_op: expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression
   62       | expression IN expression •

    ADD        shift, and go to state 233
    SUB        shift, and go to state 234
    MULT       shift, and go to state 235
    DIV        shift, and go to state 236
    SEMIC      shift, and go to state 237
    OR         shift, and go to state 238
    AND        shift, and go to state 239
    SMALLER    shift, and go to state 240
    GREATER    shift, and go to state 241
    SMALLEQ    shift, and go to state 242
    GREATEQ    shift, and go to state 243
    EQUALS     shift, and go to state 244
    DIFFERENT  shift, and go to state 245
    IN         shift, and go to state 246

    ADD        [reduce using rule 62 (in_set)]
    SUB        [reduce using rule 62 (in_set)]
    MULT       [reduce using rule 62 (in_set)]
    DIV        [reduce using rule 62 (in_set)]
    SEMIC      [reduce using rule 62 (in_set)]
    OR         [reduce using rule 62 (in_set)]
    AND        [reduce using rule 62 (in_set)]
    SMALLER    [reduce using rule 62 (in_set)]
    GREATER    [reduce using rule 62 (in_set)]
    SMALLEQ    [reduce using rule 62 (in_set)]
    GREATEQ    [reduce using rule 62 (in_set)]
    EQUALS     [reduce using rule 62 (in_set)]
    DIFFERENT  [reduce using rule 62 (in_set)]
    IN         [reduce using rule 62 (in_set)]
    COMMA      reduce using rule 62 (in_set)
    PARENR     reduce using rule 62 (in_set)

    shift/reduce conflict on token SEMIC:
       62 in_set: expression IN expression •
       41 expression: expression • SEMIC
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • SEMIC SEMIC COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                   declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                           ENDFUNC
                                                           ↳ statement                                                                               statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                        PARENR
                                                                             ↳ expression                                     COMMA args_list
                                                                               ↳ expression                             SEMIC
                                                                                 ↳ in_set
                                                                                   ↳ expression IN expression
                                                                                                   ↳ expression • SEMIC
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • SEMIC COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                          $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                             declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                     ENDFUNC
                                                           ↳ statement                                                                         statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                  PARENR
                                                                             ↳ expression                               COMMA args_list
                                                                               ↳ expression                       SEMIC
                                                                                 ↳ log_op
                                                                                   ↳ in_set
                                                                                     ↳ expression IN expression •

    shift/reduce conflict on token ADD:
       62 in_set: expression IN expression •
       43 math_op: expression • ADD expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • ADD expression ADD expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                      $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                         declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                 ENDFUNC
                                                           ↳ statement                                                                                                     statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                              PARENR
                                                                             ↳ expression                                                           COMMA args_list
                                                                               ↳ math_op
                                                                                 ↳ expression                                        ADD expression
                                                                                   ↳ in_set
                                                                                     ↳ expression IN expression
                                                                                                     ↳ math_op
                                                                                                       ↳ expression • ADD expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • ADD expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                     $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                        declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                ENDFUNC
                                                           ↳ statement                                                                                    statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                             PARENR
                                                                             ↳ expression                                          COMMA args_list
                                                                               ↳ math_op
                                                                                 ↳ expression                       ADD expression
                                                                                   ↳ log_op
                                                                                     ↳ in_set
                                                                                       ↳ expression IN expression •

    shift/reduce conflict on token SUB:
       62 in_set: expression IN expression •
       44 math_op: expression • SUB expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • SUB expression SUB expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                      $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                         declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                 ENDFUNC
                                                           ↳ statement                                                                                                     statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                              PARENR
                                                                             ↳ expression                                                           COMMA args_list
                                                                               ↳ math_op
                                                                                 ↳ expression                                        SUB expression
                                                                                   ↳ in_set
                                                                                     ↳ expression IN expression
                                                                                                     ↳ math_op
                                                                                                       ↳ expression • SUB expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • SUB expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                     $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                        declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                ENDFUNC
                                                           ↳ statement                                                                                    statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                             PARENR
                                                                             ↳ expression                                          COMMA args_list
                                                                               ↳ math_op
                                                                                 ↳ expression                       SUB expression
                                                                                   ↳ log_op
                                                                                     ↳ in_set
                                                                                       ↳ expression IN expression •

    shift/reduce conflict on token DIV:
       62 in_set: expression IN expression •
       45 math_op: expression • DIV expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • DIV expression DIV expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                      $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                         declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                 ENDFUNC
                                                           ↳ statement                                                                                                     statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                              PARENR
                                                                             ↳ expression                                                           COMMA args_list
                                                                               ↳ math_op
                                                                                 ↳ expression                                        DIV expression
                                                                                   ↳ in_set
                                                                                     ↳ expression IN expression
                                                                                                     ↳ math_op
                                                                                                       ↳ expression • DIV expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • DIV expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                     $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                        declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                ENDFUNC
                                                           ↳ statement                                                                                    statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                             PARENR
                                                                             ↳ expression                                          COMMA args_list
                                                                               ↳ math_op
                                                                                 ↳ expression                       DIV expression
                                                                                   ↳ log_op
                                                                                     ↳ in_set
                                                                                       ↳ expression IN expression •

    shift/reduce conflict on token MULT:
       62 in_set: expression IN expression •
       46 math_op: expression • MULT expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • MULT expression MULT expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                        $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                           declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                   ENDFUNC
                                                           ↳ statement                                                                                                       statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                                PARENR
                                                                             ↳ expression                                                             COMMA args_list
                                                                               ↳ math_op
                                                                                 ↳ expression                                         MULT expression
                                                                                   ↳ in_set
                                                                                     ↳ expression IN expression
                                                                                                     ↳ math_op
                                                                                                       ↳ expression • MULT expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • MULT expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                      $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                         declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                 ENDFUNC
                                                           ↳ statement                                                                                     statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                              PARENR
                                                                             ↳ expression                                           COMMA args_list
                                                                               ↳ math_op
                                                                                 ↳ expression                       MULT expression
                                                                                   ↳ log_op
                                                                                     ↳ in_set
                                                                                       ↳ expression IN expression •

    shift/reduce conflict on token SMALLER:
       62 in_set: expression IN expression •
       52 log_op: expression • SMALLER expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • SMALLER expression SMALLER expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                         ENDFUNC
                                                           ↳ statement                                                                                                             statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                                      PARENR
                                                                             ↳ expression                                                                   COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                                            SMALLER expression
                                                                                   ↳ in_set
                                                                                     ↳ expression IN expression
                                                                                                     ↳ log_op
                                                                                                       ↳ expression • SMALLER expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • SMALLER expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                         $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                            declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                    ENDFUNC
                                                           ↳ statement                                                                                        statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                 PARENR
                                                                             ↳ expression                                              COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                       SMALLER expression
                                                                                   ↳ log_op
                                                                                     ↳ in_set
                                                                                       ↳ expression IN expression •

    shift/reduce conflict on token GREATER:
       62 in_set: expression IN expression •
       53 log_op: expression • GREATER expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • GREATER expression GREATER expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                         ENDFUNC
                                                           ↳ statement                                                                                                             statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                                      PARENR
                                                                             ↳ expression                                                                   COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                                            GREATER expression
                                                                                   ↳ in_set
                                                                                     ↳ expression IN expression
                                                                                                     ↳ log_op
                                                                                                       ↳ expression • GREATER expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • GREATER expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                         $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                            declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                    ENDFUNC
                                                           ↳ statement                                                                                        statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                 PARENR
                                                                             ↳ expression                                              COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                       GREATER expression
                                                                                   ↳ log_op
                                                                                     ↳ in_set
                                                                                       ↳ expression IN expression •

    shift/reduce conflict on token SMALLEQ:
       62 in_set: expression IN expression •
       54 log_op: expression • SMALLEQ expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • SMALLEQ expression SMALLEQ expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                         ENDFUNC
                                                           ↳ statement                                                                                                             statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                                      PARENR
                                                                             ↳ expression                                                                   COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                                            SMALLEQ expression
                                                                                   ↳ in_set
                                                                                     ↳ expression IN expression
                                                                                                     ↳ log_op
                                                                                                       ↳ expression • SMALLEQ expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • SMALLEQ expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                         $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                            declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                    ENDFUNC
                                                           ↳ statement                                                                                        statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                 PARENR
                                                                             ↳ expression                                              COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                       SMALLEQ expression
                                                                                   ↳ log_op
                                                                                     ↳ in_set
                                                                                       ↳ expression IN expression •

    shift/reduce conflict on token GREATEQ:
       62 in_set: expression IN expression •
       55 log_op: expression • GREATEQ expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • GREATEQ expression GREATEQ expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                              $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                 declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                         ENDFUNC
                                                           ↳ statement                                                                                                             statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                                      PARENR
                                                                             ↳ expression                                                                   COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                                            GREATEQ expression
                                                                                   ↳ in_set
                                                                                     ↳ expression IN expression
                                                                                                     ↳ log_op
                                                                                                       ↳ expression • GREATEQ expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • GREATEQ expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                         $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                            declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                    ENDFUNC
                                                           ↳ statement                                                                                        statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                 PARENR
                                                                             ↳ expression                                              COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                       GREATEQ expression
                                                                                   ↳ log_op
                                                                                     ↳ in_set
                                                                                       ↳ expression IN expression •

    shift/reduce conflict on token EQUALS:
       62 in_set: expression IN expression •
       56 log_op: expression • EQUALS expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • EQUALS expression EQUALS expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                            $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                               declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                       ENDFUNC
                                                           ↳ statement                                                                                                           statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                                    PARENR
                                                                             ↳ expression                                                                 COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                                           EQUALS expression
                                                                                   ↳ in_set
                                                                                     ↳ expression IN expression
                                                                                                     ↳ log_op
                                                                                                       ↳ expression • EQUALS expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • EQUALS expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                        $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                           declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                   ENDFUNC
                                                           ↳ statement                                                                                       statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                PARENR
                                                                             ↳ expression                                             COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                       EQUALS expression
                                                                                   ↳ log_op
                                                                                     ↳ in_set
                                                                                       ↳ expression IN expression •

    shift/reduce conflict on token DIFFERENT:
       62 in_set: expression IN expression •
       57 log_op: expression • DIFFERENT expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • DIFFERENT expression DIFFERENT expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                                  $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                                     declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                             ENDFUNC
                                                           ↳ statement                                                                                                                 statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                                          PARENR
                                                                             ↳ expression                                                                       COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                                              DIFFERENT expression
                                                                                   ↳ in_set
                                                                                     ↳ expression IN expression
                                                                                                     ↳ log_op
                                                                                                       ↳ expression • DIFFERENT expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • DIFFERENT expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                           $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                              declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                      ENDFUNC
                                                           ↳ statement                                                                                          statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                   PARENR
                                                                             ↳ expression                                                COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                       DIFFERENT expression
                                                                                   ↳ log_op
                                                                                     ↳ in_set
                                                                                       ↳ expression IN expression •

    shift/reduce conflict on token OR:
       62 in_set: expression IN expression •
       58 log_op: expression • OR expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • OR expression OR expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                    $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                       declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                               ENDFUNC
                                                           ↳ statement                                                                                                   statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                            PARENR
                                                                             ↳ expression                                                         COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                                       OR expression
                                                                                   ↳ in_set
                                                                                     ↳ expression IN expression
                                                                                                     ↳ log_op
                                                                                                       ↳ expression • OR expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • OR expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                    $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                       declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                               ENDFUNC
                                                           ↳ statement                                                                                   statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                            PARENR
                                                                             ↳ expression                                         COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                       OR expression
                                                                                   ↳ log_op
                                                                                     ↳ in_set
                                                                                       ↳ expression IN expression •

    shift/reduce conflict on token AND:
       62 in_set: expression IN expression •
       59 log_op: expression • AND expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • AND expression AND expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                      $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                         declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                 ENDFUNC
                                                           ↳ statement                                                                                                     statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                              PARENR
                                                                             ↳ expression                                                           COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                                        AND expression
                                                                                   ↳ in_set
                                                                                     ↳ expression IN expression
                                                                                                     ↳ log_op
                                                                                                       ↳ expression • AND expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • AND expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                     $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                        declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                ENDFUNC
                                                           ↳ statement                                                                                    statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                             PARENR
                                                                             ↳ expression                                          COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ expression                       AND expression
                                                                                   ↳ log_op
                                                                                     ↳ in_set
                                                                                       ↳ expression IN expression •

    shift/reduce conflict on token IN:
       62 in_set: expression IN expression •
       62 in_set: expression • IN expression
      First example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • IN expression IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Shift derivation
        $accept
        ↳ prog                                                                                                                                                                                                        $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                                           declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                                   ENDFUNC
                                                           ↳ statement                                                                                                       statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                                                PARENR
                                                                             ↳ expression                                                             COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ expression                                         IN expression
                                                                                     ↳ in_set
                                                                                       ↳ expression IN expression
                                                                                                       ↳ log_op
                                                                                                         ↳ in_set
                                                                                                           ↳ expression • IN expression
      Second example: TYPE ID PARENL params_list PARENR STFUNC ID PARENL expression IN expression • IN expression COMMA args_list PARENR statement_list ENDFUNC declarations_list $end
      Reduce derivation
        $accept
        ↳ prog                                                                                                                                                                                      $end
          ↳ declarations_list
            ↳ declaration                                                                                                                                                         declarations_list
              ↳ func_dec
                ↳ TYPE ID PARENL params_list PARENR STFUNC statement_list                                                                                                 ENDFUNC
                                                           ↳ statement                                                                                     statement_list
                                                             ↳ expression
                                                               ↳ func_call
                                                                 ↳ ID PARENL args_list                                                              PARENR
                                                                             ↳ expression                                           COMMA args_list
                                                                               ↳ log_op
                                                                                 ↳ in_set
                                                                                   ↳ expression                       IN expression
                                                                                     ↳ log_op
                                                                                       ↳ in_set
                                                                                         ↳ expression IN expression •



State 311

   47 set_op: ADDSET PARENL • in_set PARENR

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 332


State 312

   48 set_op: REMOVE PARENL • in_set PARENR

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 333


State 313

   49 set_op: EXISTS PARENL • in_set PARENR

    ID       shift, and go to state 153
    INTEGER  shift, and go to state 154
    DECIMAL  shift, and go to state 155
    STRING   shift, and go to state 156
    CHAR     shift, and go to state 157
    EMPTY    shift, and go to state 158
    NEG      shift, and go to state 159
    ISTYPE   shift, and go to state 160
    ADDSET   shift, and go to state 161
    REMOVE   shift, and go to state 162
    EXISTS   shift, and go to state 163
    PARENL   shift, and go to state 164

    expression  go to state 218
    math_op     go to state 165
    set_op      go to state 166
    log_op      go to state 167
    func_call   go to state 168
    in_set      go to state 334


State 314

   61 func_call: ID PARENL args_list • PARENR

    PARENR  shift, and go to state 335


State 315

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   51 log_op: ISTYPE PARENL expression • PARENR
   52       | expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    ADD        shift, and go to state 219
    SUB        shift, and go to state 220
    MULT       shift, and go to state 221
    DIV        shift, and go to state 222
    SEMIC      shift, and go to state 223
    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232
    PARENR     shift, and go to state 336


State 316

   47 set_op: ADDSET PARENL in_set • PARENR
   50 log_op: in_set •

    PARENR  shift, and go to state 337

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 317

   48 set_op: REMOVE PARENL in_set • PARENR
   50 log_op: in_set •

    PARENR  shift, and go to state 338

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 318

   49 set_op: EXISTS PARENL in_set • PARENR
   50 log_op: in_set •

    PARENR  shift, and go to state 339

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 319

   42 expression: PARENL expression PARENR •

    ADD        reduce using rule 42 (expression)
    SUB        reduce using rule 42 (expression)
    MULT       reduce using rule 42 (expression)
    DIV        reduce using rule 42 (expression)
    SEMIC      reduce using rule 42 (expression)
    OR         reduce using rule 42 (expression)
    AND        reduce using rule 42 (expression)
    SMALLER    reduce using rule 42 (expression)
    GREATER    reduce using rule 42 (expression)
    SMALLEQ    reduce using rule 42 (expression)
    GREATEQ    reduce using rule 42 (expression)
    EQUALS     reduce using rule 42 (expression)
    DIFFERENT  reduce using rule 42 (expression)
    IN         reduce using rule 42 (expression)


State 320

   61 func_call: ID PARENL args_list • PARENR

    PARENR  shift, and go to state 340


State 321

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   51 log_op: ISTYPE PARENL expression • PARENR
   52       | expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    ADD        shift, and go to state 219
    SUB        shift, and go to state 220
    MULT       shift, and go to state 221
    DIV        shift, and go to state 222
    SEMIC      shift, and go to state 223
    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232
    PARENR     shift, and go to state 341


State 322

   47 set_op: ADDSET PARENL in_set • PARENR
   50 log_op: in_set •

    PARENR  shift, and go to state 342

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 323

   48 set_op: REMOVE PARENL in_set • PARENR
   50 log_op: in_set •

    PARENR  shift, and go to state 343

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 324

   49 set_op: EXISTS PARENL in_set • PARENR
   50 log_op: in_set •

    PARENR  shift, and go to state 344

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 325

   42 expression: PARENL expression PARENR •

    ADD        reduce using rule 42 (expression)
    SUB        reduce using rule 42 (expression)
    MULT       reduce using rule 42 (expression)
    DIV        reduce using rule 42 (expression)
    SEMIC      reduce using rule 42 (expression)
    OR         reduce using rule 42 (expression)
    AND        reduce using rule 42 (expression)
    SMALLER    reduce using rule 42 (expression)
    GREATER    reduce using rule 42 (expression)
    SMALLEQ    reduce using rule 42 (expression)
    GREATEQ    reduce using rule 42 (expression)
    EQUALS     reduce using rule 42 (expression)
    DIFFERENT  reduce using rule 42 (expression)
    IN         reduce using rule 42 (expression)
    PARENR     reduce using rule 42 (expression)


State 326

   61 func_call: ID PARENL args_list • PARENR

    PARENR  shift, and go to state 345


State 327

   41 expression: expression • SEMIC
   43 math_op: expression • ADD expression
   44        | expression • SUB expression
   45        | expression • DIV expression
   46        | expression • MULT expression
   51 log_op: ISTYPE PARENL expression • PARENR
   52       | expression • SMALLER expression
   53       | expression • GREATER expression
   54       | expression • SMALLEQ expression
   55       | expression • GREATEQ expression
   56       | expression • EQUALS expression
   57       | expression • DIFFERENT expression
   58       | expression • OR expression
   59       | expression • AND expression
   62 in_set: expression • IN expression

    ADD        shift, and go to state 219
    SUB        shift, and go to state 220
    MULT       shift, and go to state 221
    DIV        shift, and go to state 222
    SEMIC      shift, and go to state 223
    OR         shift, and go to state 224
    AND        shift, and go to state 225
    SMALLER    shift, and go to state 226
    GREATER    shift, and go to state 227
    SMALLEQ    shift, and go to state 228
    GREATEQ    shift, and go to state 229
    EQUALS     shift, and go to state 230
    DIFFERENT  shift, and go to state 231
    IN         shift, and go to state 232
    PARENR     shift, and go to state 346


State 328

   47 set_op: ADDSET PARENL in_set • PARENR
   50 log_op: in_set •

    PARENR  shift, and go to state 347

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 329

   48 set_op: REMOVE PARENL in_set • PARENR
   50 log_op: in_set •

    PARENR  shift, and go to state 348

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 330

   49 set_op: EXISTS PARENL in_set • PARENR
   50 log_op: in_set •

    PARENR  shift, and go to state 349

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 331

   42 expression: PARENL expression PARENR •

    ADD        reduce using rule 42 (expression)
    SUB        reduce using rule 42 (expression)
    MULT       reduce using rule 42 (expression)
    DIV        reduce using rule 42 (expression)
    SEMIC      reduce using rule 42 (expression)
    OR         reduce using rule 42 (expression)
    AND        reduce using rule 42 (expression)
    SMALLER    reduce using rule 42 (expression)
    GREATER    reduce using rule 42 (expression)
    SMALLEQ    reduce using rule 42 (expression)
    GREATEQ    reduce using rule 42 (expression)
    EQUALS     reduce using rule 42 (expression)
    DIFFERENT  reduce using rule 42 (expression)
    IN         reduce using rule 42 (expression)
    COMMA      reduce using rule 42 (expression)
    PARENR     reduce using rule 42 (expression)


State 332

   47 set_op: ADDSET PARENL in_set • PARENR
   50 log_op: in_set •

    PARENR  shift, and go to state 350

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 333

   48 set_op: REMOVE PARENL in_set • PARENR
   50 log_op: in_set •

    PARENR  shift, and go to state 351

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 334

   49 set_op: EXISTS PARENL in_set • PARENR
   50 log_op: in_set •

    PARENR  shift, and go to state 352

    ADD        reduce using rule 50 (log_op)
    SUB        reduce using rule 50 (log_op)
    MULT       reduce using rule 50 (log_op)
    DIV        reduce using rule 50 (log_op)
    SEMIC      reduce using rule 50 (log_op)
    OR         reduce using rule 50 (log_op)
    AND        reduce using rule 50 (log_op)
    SMALLER    reduce using rule 50 (log_op)
    GREATER    reduce using rule 50 (log_op)
    SMALLEQ    reduce using rule 50 (log_op)
    GREATEQ    reduce using rule 50 (log_op)
    EQUALS     reduce using rule 50 (log_op)
    DIFFERENT  reduce using rule 50 (log_op)
    IN         reduce using rule 50 (log_op)


State 335

   61 func_call: ID PARENL args_list PARENR •

    ADD        reduce using rule 61 (func_call)
    SUB        reduce using rule 61 (func_call)
    MULT       reduce using rule 61 (func_call)
    DIV        reduce using rule 61 (func_call)
    SEMIC      reduce using rule 61 (func_call)
    OR         reduce using rule 61 (func_call)
    AND        reduce using rule 61 (func_call)
    SMALLER    reduce using rule 61 (func_call)
    GREATER    reduce using rule 61 (func_call)
    SMALLEQ    reduce using rule 61 (func_call)
    GREATEQ    reduce using rule 61 (func_call)
    EQUALS     reduce using rule 61 (func_call)
    DIFFERENT  reduce using rule 61 (func_call)
    IN         reduce using rule 61 (func_call)


State 336

   51 log_op: ISTYPE PARENL expression PARENR •

    ADD        reduce using rule 51 (log_op)
    SUB        reduce using rule 51 (log_op)
    MULT       reduce using rule 51 (log_op)
    DIV        reduce using rule 51 (log_op)
    SEMIC      reduce using rule 51 (log_op)
    OR         reduce using rule 51 (log_op)
    AND        reduce using rule 51 (log_op)
    SMALLER    reduce using rule 51 (log_op)
    GREATER    reduce using rule 51 (log_op)
    SMALLEQ    reduce using rule 51 (log_op)
    GREATEQ    reduce using rule 51 (log_op)
    EQUALS     reduce using rule 51 (log_op)
    DIFFERENT  reduce using rule 51 (log_op)
    IN         reduce using rule 51 (log_op)


State 337

   47 set_op: ADDSET PARENL in_set PARENR •

    ADD        reduce using rule 47 (set_op)
    SUB        reduce using rule 47 (set_op)
    MULT       reduce using rule 47 (set_op)
    DIV        reduce using rule 47 (set_op)
    SEMIC      reduce using rule 47 (set_op)
    OR         reduce using rule 47 (set_op)
    AND        reduce using rule 47 (set_op)
    SMALLER    reduce using rule 47 (set_op)
    GREATER    reduce using rule 47 (set_op)
    SMALLEQ    reduce using rule 47 (set_op)
    GREATEQ    reduce using rule 47 (set_op)
    EQUALS     reduce using rule 47 (set_op)
    DIFFERENT  reduce using rule 47 (set_op)
    IN         reduce using rule 47 (set_op)


State 338

   48 set_op: REMOVE PARENL in_set PARENR •

    ADD        reduce using rule 48 (set_op)
    SUB        reduce using rule 48 (set_op)
    MULT       reduce using rule 48 (set_op)
    DIV        reduce using rule 48 (set_op)
    SEMIC      reduce using rule 48 (set_op)
    OR         reduce using rule 48 (set_op)
    AND        reduce using rule 48 (set_op)
    SMALLER    reduce using rule 48 (set_op)
    GREATER    reduce using rule 48 (set_op)
    SMALLEQ    reduce using rule 48 (set_op)
    GREATEQ    reduce using rule 48 (set_op)
    EQUALS     reduce using rule 48 (set_op)
    DIFFERENT  reduce using rule 48 (set_op)
    IN         reduce using rule 48 (set_op)


State 339

   49 set_op: EXISTS PARENL in_set PARENR •

    ADD        reduce using rule 49 (set_op)
    SUB        reduce using rule 49 (set_op)
    MULT       reduce using rule 49 (set_op)
    DIV        reduce using rule 49 (set_op)
    SEMIC      reduce using rule 49 (set_op)
    OR         reduce using rule 49 (set_op)
    AND        reduce using rule 49 (set_op)
    SMALLER    reduce using rule 49 (set_op)
    GREATER    reduce using rule 49 (set_op)
    SMALLEQ    reduce using rule 49 (set_op)
    GREATEQ    reduce using rule 49 (set_op)
    EQUALS     reduce using rule 49 (set_op)
    DIFFERENT  reduce using rule 49 (set_op)
    IN         reduce using rule 49 (set_op)


State 340

   61 func_call: ID PARENL args_list PARENR •

    ADD        reduce using rule 61 (func_call)
    SUB        reduce using rule 61 (func_call)
    MULT       reduce using rule 61 (func_call)
    DIV        reduce using rule 61 (func_call)
    SEMIC      reduce using rule 61 (func_call)
    OR         reduce using rule 61 (func_call)
    AND        reduce using rule 61 (func_call)
    SMALLER    reduce using rule 61 (func_call)
    GREATER    reduce using rule 61 (func_call)
    SMALLEQ    reduce using rule 61 (func_call)
    GREATEQ    reduce using rule 61 (func_call)
    EQUALS     reduce using rule 61 (func_call)
    DIFFERENT  reduce using rule 61 (func_call)
    IN         reduce using rule 61 (func_call)
    PARENR     reduce using rule 61 (func_call)


State 341

   51 log_op: ISTYPE PARENL expression PARENR •

    ADD        reduce using rule 51 (log_op)
    SUB        reduce using rule 51 (log_op)
    MULT       reduce using rule 51 (log_op)
    DIV        reduce using rule 51 (log_op)
    SEMIC      reduce using rule 51 (log_op)
    OR         reduce using rule 51 (log_op)
    AND        reduce using rule 51 (log_op)
    SMALLER    reduce using rule 51 (log_op)
    GREATER    reduce using rule 51 (log_op)
    SMALLEQ    reduce using rule 51 (log_op)
    GREATEQ    reduce using rule 51 (log_op)
    EQUALS     reduce using rule 51 (log_op)
    DIFFERENT  reduce using rule 51 (log_op)
    IN         reduce using rule 51 (log_op)
    PARENR     reduce using rule 51 (log_op)


State 342

   47 set_op: ADDSET PARENL in_set PARENR •

    ADD        reduce using rule 47 (set_op)
    SUB        reduce using rule 47 (set_op)
    MULT       reduce using rule 47 (set_op)
    DIV        reduce using rule 47 (set_op)
    SEMIC      reduce using rule 47 (set_op)
    OR         reduce using rule 47 (set_op)
    AND        reduce using rule 47 (set_op)
    SMALLER    reduce using rule 47 (set_op)
    GREATER    reduce using rule 47 (set_op)
    SMALLEQ    reduce using rule 47 (set_op)
    GREATEQ    reduce using rule 47 (set_op)
    EQUALS     reduce using rule 47 (set_op)
    DIFFERENT  reduce using rule 47 (set_op)
    IN         reduce using rule 47 (set_op)
    PARENR     reduce using rule 47 (set_op)


State 343

   48 set_op: REMOVE PARENL in_set PARENR •

    ADD        reduce using rule 48 (set_op)
    SUB        reduce using rule 48 (set_op)
    MULT       reduce using rule 48 (set_op)
    DIV        reduce using rule 48 (set_op)
    SEMIC      reduce using rule 48 (set_op)
    OR         reduce using rule 48 (set_op)
    AND        reduce using rule 48 (set_op)
    SMALLER    reduce using rule 48 (set_op)
    GREATER    reduce using rule 48 (set_op)
    SMALLEQ    reduce using rule 48 (set_op)
    GREATEQ    reduce using rule 48 (set_op)
    EQUALS     reduce using rule 48 (set_op)
    DIFFERENT  reduce using rule 48 (set_op)
    IN         reduce using rule 48 (set_op)
    PARENR     reduce using rule 48 (set_op)


State 344

   49 set_op: EXISTS PARENL in_set PARENR •

    ADD        reduce using rule 49 (set_op)
    SUB        reduce using rule 49 (set_op)
    MULT       reduce using rule 49 (set_op)
    DIV        reduce using rule 49 (set_op)
    SEMIC      reduce using rule 49 (set_op)
    OR         reduce using rule 49 (set_op)
    AND        reduce using rule 49 (set_op)
    SMALLER    reduce using rule 49 (set_op)
    GREATER    reduce using rule 49 (set_op)
    SMALLEQ    reduce using rule 49 (set_op)
    GREATEQ    reduce using rule 49 (set_op)
    EQUALS     reduce using rule 49 (set_op)
    DIFFERENT  reduce using rule 49 (set_op)
    IN         reduce using rule 49 (set_op)
    PARENR     reduce using rule 49 (set_op)


State 345

   61 func_call: ID PARENL args_list PARENR •

    ADD        reduce using rule 61 (func_call)
    SUB        reduce using rule 61 (func_call)
    MULT       reduce using rule 61 (func_call)
    DIV        reduce using rule 61 (func_call)
    SEMIC      reduce using rule 61 (func_call)
    OR         reduce using rule 61 (func_call)
    AND        reduce using rule 61 (func_call)
    SMALLER    reduce using rule 61 (func_call)
    GREATER    reduce using rule 61 (func_call)
    SMALLEQ    reduce using rule 61 (func_call)
    GREATEQ    reduce using rule 61 (func_call)
    EQUALS     reduce using rule 61 (func_call)
    DIFFERENT  reduce using rule 61 (func_call)
    IN         reduce using rule 61 (func_call)
    COMMA      reduce using rule 61 (func_call)
    PARENR     reduce using rule 61 (func_call)


State 346

   51 log_op: ISTYPE PARENL expression PARENR •

    ADD        reduce using rule 51 (log_op)
    SUB        reduce using rule 51 (log_op)
    MULT       reduce using rule 51 (log_op)
    DIV        reduce using rule 51 (log_op)
    SEMIC      reduce using rule 51 (log_op)
    OR         reduce using rule 51 (log_op)
    AND        reduce using rule 51 (log_op)
    SMALLER    reduce using rule 51 (log_op)
    GREATER    reduce using rule 51 (log_op)
    SMALLEQ    reduce using rule 51 (log_op)
    GREATEQ    reduce using rule 51 (log_op)
    EQUALS     reduce using rule 51 (log_op)
    DIFFERENT  reduce using rule 51 (log_op)
    IN         reduce using rule 51 (log_op)
    COMMA      reduce using rule 51 (log_op)
    PARENR     reduce using rule 51 (log_op)


State 347

   47 set_op: ADDSET PARENL in_set PARENR •

    ADD        reduce using rule 47 (set_op)
    SUB        reduce using rule 47 (set_op)
    MULT       reduce using rule 47 (set_op)
    DIV        reduce using rule 47 (set_op)
    SEMIC      reduce using rule 47 (set_op)
    OR         reduce using rule 47 (set_op)
    AND        reduce using rule 47 (set_op)
    SMALLER    reduce using rule 47 (set_op)
    GREATER    reduce using rule 47 (set_op)
    SMALLEQ    reduce using rule 47 (set_op)
    GREATEQ    reduce using rule 47 (set_op)
    EQUALS     reduce using rule 47 (set_op)
    DIFFERENT  reduce using rule 47 (set_op)
    IN         reduce using rule 47 (set_op)
    COMMA      reduce using rule 47 (set_op)
    PARENR     reduce using rule 47 (set_op)


State 348

   48 set_op: REMOVE PARENL in_set PARENR •

    ADD        reduce using rule 48 (set_op)
    SUB        reduce using rule 48 (set_op)
    MULT       reduce using rule 48 (set_op)
    DIV        reduce using rule 48 (set_op)
    SEMIC      reduce using rule 48 (set_op)
    OR         reduce using rule 48 (set_op)
    AND        reduce using rule 48 (set_op)
    SMALLER    reduce using rule 48 (set_op)
    GREATER    reduce using rule 48 (set_op)
    SMALLEQ    reduce using rule 48 (set_op)
    GREATEQ    reduce using rule 48 (set_op)
    EQUALS     reduce using rule 48 (set_op)
    DIFFERENT  reduce using rule 48 (set_op)
    IN         reduce using rule 48 (set_op)
    COMMA      reduce using rule 48 (set_op)
    PARENR     reduce using rule 48 (set_op)


State 349

   49 set_op: EXISTS PARENL in_set PARENR •

    ADD        reduce using rule 49 (set_op)
    SUB        reduce using rule 49 (set_op)
    MULT       reduce using rule 49 (set_op)
    DIV        reduce using rule 49 (set_op)
    SEMIC      reduce using rule 49 (set_op)
    OR         reduce using rule 49 (set_op)
    AND        reduce using rule 49 (set_op)
    SMALLER    reduce using rule 49 (set_op)
    GREATER    reduce using rule 49 (set_op)
    SMALLEQ    reduce using rule 49 (set_op)
    GREATEQ    reduce using rule 49 (set_op)
    EQUALS     reduce using rule 49 (set_op)
    DIFFERENT  reduce using rule 49 (set_op)
    IN         reduce using rule 49 (set_op)
    COMMA      reduce using rule 49 (set_op)
    PARENR     reduce using rule 49 (set_op)


State 350

   47 set_op: ADDSET PARENL in_set PARENR •

    SEMIC  reduce using rule 47 (set_op)


State 351

   48 set_op: REMOVE PARENL in_set PARENR •

    SEMIC  reduce using rule 48 (set_op)


State 352

   49 set_op: EXISTS PARENL in_set PARENR •

    SEMIC  reduce using rule 49 (set_op)
