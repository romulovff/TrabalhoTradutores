Grammar

    0 $accept: prog $end

    1 prog: declarations_list

    2 declarations_list: declarations_list declaration
    3                  | declaration

    4 declaration: var_dec
    5            | func_dec

    6 func_dec: TYPE ID PARENL params_list PARENR STFUNC statement_list ENDFUNC
    7         | TYPE MAIN PARENL params_list PARENR STFUNC statement_list ENDFUNC

    8 params_list: params_list COMMA parameter
    9            | parameter
   10            | %empty

   11 parameter: TYPE ID

   12 statement_list: statement_list statement
   13               | %empty

   14 statement: expression_stmt
   15          | ret_st
   16          | var_dec
   17          | io_ops
   18          | basic_ops

   19 expression_stmt: expression SEMIC

   20 basic_ops: if_ops
   21          | FOR PARENL operation PARENR STFUNC statement_list ENDFUNC
   22          | FORALL PARENL in_set PARENR set_op SEMIC
   23          | FORALL PARENL in_set PARENR STFUNC statement_list ENDFUNC

   24 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC
   25       | IF PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

   26 ret_st: RETURN expression SEMIC

   27 var_dec: TYPE ID SEMIC

   28 io_ops: READ PARENL PARENR SEMIC
   29       | WRITE PARENL expression PARENR SEMIC
   30       | WRITELN PARENL expression PARENR SEMIC

   31 expression: set_op
   32           | operation
   33           | func_call
   34           | assign_value

   35 term: ID
   36     | INTEGER
   37     | DECIMAL
   38     | CHAR
   39     | STRING
   40     | EMPTY
   41     | PARENL expression PARENR

   42 math_op: term DIV expression
   43        | term MULT expression
   44        | term ADD expression
   45        | term SUB expression
   46        | term

   47 set_op: ADDSET PARENL in_set PARENR
   48       | REMOVE PARENL in_set PARENR
   49       | EXISTS PARENL in_set PARENR

   50 operation: math_op
   51          | in_set
   52          | ISTYPE PARENL expression PARENR
   53          | term SMALLER expression
   54          | term GREATER expression
   55          | term SMALLEQ expression
   56          | term GREATEQ expression
   57          | term EQUALS expression
   58          | term DIFFERENT expression
   59          | term OR expression
   60          | term AND expression
   61          | NEG expression

   62 func_call: ID PARENL args_list PARENR

   63 in_set: term IN expression

   64 args_list: args_list COMMA term
   65          | term
   66          | %empty

   67 assign_value: ID ASSIGN expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <str> (258) 6 11 27 35 62 67
    TYPE <str> (259) 6 7 11 27
    STRING <str> (260) 39
    CHAR <str> (261) 38
    EMPTY <str> (262) 40
    MAIN <str> (263) 7
    INTEGER <integer> (264) 36
    DECIMAL <dec> (265) 37
    ADD (266) 44
    SUB (267) 45
    MULT (268) 43
    DIV (269) 42
    OR (270) 59
    AND (271) 60
    SMALLER (272) 53
    GREATER (273) 54
    SMALLEQ (274) 55
    GREATEQ (275) 56
    EQUALS (276) 57
    DIFFERENT (277) 58
    ASSIGN (278) 67
    NEG (279) 61
    IF (280) 24 25
    ELSE (281) 25
    FOR (282) 21
    READ (283) 28
    WRITE (284) 29
    WRITELN (285) 30
    RETURN (286) 26
    IN (287) 63
    ISTYPE (288) 52
    ADDSET (289) 47
    REMOVE (290) 48
    EXISTS (291) 49
    FORALL (292) 22 23
    COMMA (293) 8 64
    STFUNC (294) 6 7 21 23 24 25
    ENDFUNC (295) 6 7 21 23 24 25
    PARENL (296) 6 7 21 22 23 24 25 28 29 30 41 47 48 49 52 62
    PARENR (297) 6 7 21 22 23 24 25 28 29 30 41 47 48 49 52 62
    SEMIC (298) 19 22 26 27 28 29 30


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    prog (45)
        on left: 1
        on right: 0
    declarations_list <ast> (46)
        on left: 2 3
        on right: 1 2
    declaration <ast> (47)
        on left: 4 5
        on right: 2 3
    func_dec <ast> (48)
        on left: 6 7
        on right: 5
    params_list <ast> (49)
        on left: 8 9 10
        on right: 6 7 8
    parameter <ast> (50)
        on left: 11
        on right: 8 9
    statement_list <ast> (51)
        on left: 12 13
        on right: 6 7 12 21 23 24 25
    statement <ast> (52)
        on left: 14 15 16 17 18
        on right: 12
    expression_stmt (53)
        on left: 19
        on right: 14
    basic_ops <ast> (54)
        on left: 20 21 22 23
        on right: 18
    if_ops <ast> (55)
        on left: 24 25
        on right: 20
    ret_st <ast> (56)
        on left: 26
        on right: 15
    var_dec <ast> (57)
        on left: 27
        on right: 4 16
    io_ops <ast> (58)
        on left: 28 29 30
        on right: 17
    expression <ast> (59)
        on left: 31 32 33 34
        on right: 19 26 29 30 41 42 43 44 45 52 53 54 55 56 57 58 59 60 61 63 67
    term (60)
        on left: 35 36 37 38 39 40 41
        on right: 42 43 44 45 46 53 54 55 56 57 58 59 60 63 64 65
    math_op <ast> (61)
        on left: 42 43 44 45 46
        on right: 50
    set_op <ast> (62)
        on left: 47 48 49
        on right: 22 31
    operation <ast> (63)
        on left: 50 51 52 53 54 55 56 57 58 59 60 61
        on right: 21 24 25 32
    func_call <ast> (64)
        on left: 62
        on right: 33
    in_set <ast> (65)
        on left: 63
        on right: 22 23 47 48 49 51
    args_list (66)
        on left: 64 65 66
        on right: 62 64
    assign_value <ast> (67)
        on left: 67
        on right: 34


State 0

    0 $accept: • prog $end

    TYPE  shift, and go to state 1

    prog               go to state 2
    declarations_list  go to state 3
    declaration        go to state 4
    func_dec           go to state 5
    var_dec            go to state 6


State 1

    6 func_dec: TYPE • ID PARENL params_list PARENR STFUNC statement_list ENDFUNC
    7         | TYPE • MAIN PARENL params_list PARENR STFUNC statement_list ENDFUNC
   27 var_dec: TYPE • ID SEMIC

    ID    shift, and go to state 7
    MAIN  shift, and go to state 8


State 2

    0 $accept: prog • $end

    $end  shift, and go to state 9


State 3

    1 prog: declarations_list •
    2 declarations_list: declarations_list • declaration

    TYPE  shift, and go to state 1

    $end  reduce using rule 1 (prog)

    declaration  go to state 10
    func_dec     go to state 5
    var_dec      go to state 6


State 4

    3 declarations_list: declaration •

    $end  reduce using rule 3 (declarations_list)
    TYPE  reduce using rule 3 (declarations_list)


State 5

    5 declaration: func_dec •

    $end  reduce using rule 5 (declaration)
    TYPE  reduce using rule 5 (declaration)


State 6

    4 declaration: var_dec •

    $end  reduce using rule 4 (declaration)
    TYPE  reduce using rule 4 (declaration)


State 7

    6 func_dec: TYPE ID • PARENL params_list PARENR STFUNC statement_list ENDFUNC
   27 var_dec: TYPE ID • SEMIC

    PARENL  shift, and go to state 11
    SEMIC   shift, and go to state 12


State 8

    7 func_dec: TYPE MAIN • PARENL params_list PARENR STFUNC statement_list ENDFUNC

    PARENL  shift, and go to state 13


State 9

    0 $accept: prog $end •

    $default  accept


State 10

    2 declarations_list: declarations_list declaration •

    $end  reduce using rule 2 (declarations_list)
    TYPE  reduce using rule 2 (declarations_list)


State 11

    6 func_dec: TYPE ID PARENL • params_list PARENR STFUNC statement_list ENDFUNC

    TYPE  shift, and go to state 14

    COMMA   reduce using rule 10 (params_list)
    PARENR  reduce using rule 10 (params_list)

    params_list  go to state 15
    parameter    go to state 16


State 12

   27 var_dec: TYPE ID SEMIC •

    $end  reduce using rule 27 (var_dec)
    TYPE  reduce using rule 27 (var_dec)


State 13

    7 func_dec: TYPE MAIN PARENL • params_list PARENR STFUNC statement_list ENDFUNC

    TYPE  shift, and go to state 14

    COMMA   reduce using rule 10 (params_list)
    PARENR  reduce using rule 10 (params_list)

    params_list  go to state 17
    parameter    go to state 16


State 14

   11 parameter: TYPE • ID

    ID  shift, and go to state 18


State 15

    6 func_dec: TYPE ID PARENL params_list • PARENR STFUNC statement_list ENDFUNC
    8 params_list: params_list • COMMA parameter

    COMMA   shift, and go to state 19
    PARENR  shift, and go to state 20


State 16

    9 params_list: parameter •

    COMMA   reduce using rule 9 (params_list)
    PARENR  reduce using rule 9 (params_list)


State 17

    7 func_dec: TYPE MAIN PARENL params_list • PARENR STFUNC statement_list ENDFUNC
    8 params_list: params_list • COMMA parameter

    COMMA   shift, and go to state 19
    PARENR  shift, and go to state 21


State 18

   11 parameter: TYPE ID •

    COMMA   reduce using rule 11 (parameter)
    PARENR  reduce using rule 11 (parameter)


State 19

    8 params_list: params_list COMMA • parameter

    TYPE  shift, and go to state 14

    parameter  go to state 22


State 20

    6 func_dec: TYPE ID PARENL params_list PARENR • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 23


State 21

    7 func_dec: TYPE MAIN PARENL params_list PARENR • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 24


State 22

    8 params_list: params_list COMMA parameter •

    COMMA   reduce using rule 8 (params_list)
    PARENR  reduce using rule 8 (params_list)


State 23

    6 func_dec: TYPE ID PARENL params_list PARENR STFUNC • statement_list ENDFUNC

    ID       reduce using rule 13 (statement_list)
    TYPE     reduce using rule 13 (statement_list)
    STRING   reduce using rule 13 (statement_list)
    CHAR     reduce using rule 13 (statement_list)
    EMPTY    reduce using rule 13 (statement_list)
    INTEGER  reduce using rule 13 (statement_list)
    DECIMAL  reduce using rule 13 (statement_list)
    NEG      reduce using rule 13 (statement_list)
    IF       reduce using rule 13 (statement_list)
    FOR      reduce using rule 13 (statement_list)
    READ     reduce using rule 13 (statement_list)
    WRITE    reduce using rule 13 (statement_list)
    WRITELN  reduce using rule 13 (statement_list)
    RETURN   reduce using rule 13 (statement_list)
    ISTYPE   reduce using rule 13 (statement_list)
    ADDSET   reduce using rule 13 (statement_list)
    REMOVE   reduce using rule 13 (statement_list)
    EXISTS   reduce using rule 13 (statement_list)
    FORALL   reduce using rule 13 (statement_list)
    ENDFUNC  reduce using rule 13 (statement_list)
    PARENL   reduce using rule 13 (statement_list)

    statement_list  go to state 25


State 24

    7 func_dec: TYPE MAIN PARENL params_list PARENR STFUNC • statement_list ENDFUNC

    ID       reduce using rule 13 (statement_list)
    TYPE     reduce using rule 13 (statement_list)
    STRING   reduce using rule 13 (statement_list)
    CHAR     reduce using rule 13 (statement_list)
    EMPTY    reduce using rule 13 (statement_list)
    INTEGER  reduce using rule 13 (statement_list)
    DECIMAL  reduce using rule 13 (statement_list)
    NEG      reduce using rule 13 (statement_list)
    IF       reduce using rule 13 (statement_list)
    FOR      reduce using rule 13 (statement_list)
    READ     reduce using rule 13 (statement_list)
    WRITE    reduce using rule 13 (statement_list)
    WRITELN  reduce using rule 13 (statement_list)
    RETURN   reduce using rule 13 (statement_list)
    ISTYPE   reduce using rule 13 (statement_list)
    ADDSET   reduce using rule 13 (statement_list)
    REMOVE   reduce using rule 13 (statement_list)
    EXISTS   reduce using rule 13 (statement_list)
    FORALL   reduce using rule 13 (statement_list)
    ENDFUNC  reduce using rule 13 (statement_list)
    PARENL   reduce using rule 13 (statement_list)

    statement_list  go to state 26


State 25

    6 func_dec: TYPE ID PARENL params_list PARENR STFUNC statement_list • ENDFUNC
   12 statement_list: statement_list • statement

    ID       shift, and go to state 27
    TYPE     shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    IF       shift, and go to state 35
    FOR      shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38
    WRITELN  shift, and go to state 39
    RETURN   shift, and go to state 40
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    FORALL   shift, and go to state 45
    ENDFUNC  shift, and go to state 46
    PARENL   shift, and go to state 47

    statement        go to state 48
    expression_stmt  go to state 49
    basic_ops        go to state 50
    if_ops           go to state 51
    ret_st           go to state 52
    var_dec          go to state 53
    io_ops           go to state 54
    expression       go to state 55
    term             go to state 56
    math_op          go to state 57
    set_op           go to state 58
    operation        go to state 59
    func_call        go to state 60
    in_set           go to state 61
    assign_value     go to state 62


State 26

    7 func_dec: TYPE MAIN PARENL params_list PARENR STFUNC statement_list • ENDFUNC
   12 statement_list: statement_list • statement

    ID       shift, and go to state 27
    TYPE     shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    IF       shift, and go to state 35
    FOR      shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38
    WRITELN  shift, and go to state 39
    RETURN   shift, and go to state 40
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    FORALL   shift, and go to state 45
    ENDFUNC  shift, and go to state 63
    PARENL   shift, and go to state 47

    statement        go to state 48
    expression_stmt  go to state 49
    basic_ops        go to state 50
    if_ops           go to state 51
    ret_st           go to state 52
    var_dec          go to state 53
    io_ops           go to state 54
    expression       go to state 55
    term             go to state 56
    math_op          go to state 57
    set_op           go to state 58
    operation        go to state 59
    func_call        go to state 60
    in_set           go to state 61
    assign_value     go to state 62


State 27

   35 term: ID •
   62 func_call: ID • PARENL args_list PARENR
   67 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 64
    PARENL  shift, and go to state 65

    ADD        reduce using rule 35 (term)
    SUB        reduce using rule 35 (term)
    MULT       reduce using rule 35 (term)
    DIV        reduce using rule 35 (term)
    OR         reduce using rule 35 (term)
    AND        reduce using rule 35 (term)
    SMALLER    reduce using rule 35 (term)
    GREATER    reduce using rule 35 (term)
    SMALLEQ    reduce using rule 35 (term)
    GREATEQ    reduce using rule 35 (term)
    EQUALS     reduce using rule 35 (term)
    DIFFERENT  reduce using rule 35 (term)
    IN         reduce using rule 35 (term)
    SEMIC      reduce using rule 35 (term)


State 28

   27 var_dec: TYPE • ID SEMIC

    ID  shift, and go to state 66


State 29

   39 term: STRING •

    ADD        reduce using rule 39 (term)
    SUB        reduce using rule 39 (term)
    MULT       reduce using rule 39 (term)
    DIV        reduce using rule 39 (term)
    OR         reduce using rule 39 (term)
    AND        reduce using rule 39 (term)
    SMALLER    reduce using rule 39 (term)
    GREATER    reduce using rule 39 (term)
    SMALLEQ    reduce using rule 39 (term)
    GREATEQ    reduce using rule 39 (term)
    EQUALS     reduce using rule 39 (term)
    DIFFERENT  reduce using rule 39 (term)
    IN         reduce using rule 39 (term)
    SEMIC      reduce using rule 39 (term)


State 30

   38 term: CHAR •

    ADD        reduce using rule 38 (term)
    SUB        reduce using rule 38 (term)
    MULT       reduce using rule 38 (term)
    DIV        reduce using rule 38 (term)
    OR         reduce using rule 38 (term)
    AND        reduce using rule 38 (term)
    SMALLER    reduce using rule 38 (term)
    GREATER    reduce using rule 38 (term)
    SMALLEQ    reduce using rule 38 (term)
    GREATEQ    reduce using rule 38 (term)
    EQUALS     reduce using rule 38 (term)
    DIFFERENT  reduce using rule 38 (term)
    IN         reduce using rule 38 (term)
    SEMIC      reduce using rule 38 (term)


State 31

   40 term: EMPTY •

    ADD        reduce using rule 40 (term)
    SUB        reduce using rule 40 (term)
    MULT       reduce using rule 40 (term)
    DIV        reduce using rule 40 (term)
    OR         reduce using rule 40 (term)
    AND        reduce using rule 40 (term)
    SMALLER    reduce using rule 40 (term)
    GREATER    reduce using rule 40 (term)
    SMALLEQ    reduce using rule 40 (term)
    GREATEQ    reduce using rule 40 (term)
    EQUALS     reduce using rule 40 (term)
    DIFFERENT  reduce using rule 40 (term)
    IN         reduce using rule 40 (term)
    SEMIC      reduce using rule 40 (term)


State 32

   36 term: INTEGER •

    ADD        reduce using rule 36 (term)
    SUB        reduce using rule 36 (term)
    MULT       reduce using rule 36 (term)
    DIV        reduce using rule 36 (term)
    OR         reduce using rule 36 (term)
    AND        reduce using rule 36 (term)
    SMALLER    reduce using rule 36 (term)
    GREATER    reduce using rule 36 (term)
    SMALLEQ    reduce using rule 36 (term)
    GREATEQ    reduce using rule 36 (term)
    EQUALS     reduce using rule 36 (term)
    DIFFERENT  reduce using rule 36 (term)
    IN         reduce using rule 36 (term)
    SEMIC      reduce using rule 36 (term)


State 33

   37 term: DECIMAL •

    ADD        reduce using rule 37 (term)
    SUB        reduce using rule 37 (term)
    MULT       reduce using rule 37 (term)
    DIV        reduce using rule 37 (term)
    OR         reduce using rule 37 (term)
    AND        reduce using rule 37 (term)
    SMALLER    reduce using rule 37 (term)
    GREATER    reduce using rule 37 (term)
    SMALLEQ    reduce using rule 37 (term)
    GREATEQ    reduce using rule 37 (term)
    EQUALS     reduce using rule 37 (term)
    DIFFERENT  reduce using rule 37 (term)
    IN         reduce using rule 37 (term)
    SEMIC      reduce using rule 37 (term)


State 34

   61 operation: NEG • expression

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 67
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 35

   24 if_ops: IF • PARENL operation PARENR STFUNC statement_list ENDFUNC
   25       | IF • PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    PARENL  shift, and go to state 68


State 36

   21 basic_ops: FOR • PARENL operation PARENR STFUNC statement_list ENDFUNC

    PARENL  shift, and go to state 69


State 37

   28 io_ops: READ • PARENL PARENR SEMIC

    PARENL  shift, and go to state 70


State 38

   29 io_ops: WRITE • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 71


State 39

   30 io_ops: WRITELN • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 72


State 40

   26 ret_st: RETURN • expression SEMIC

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 73
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 41

   52 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 74


State 42

   47 set_op: ADDSET • PARENL in_set PARENR

    PARENL  shift, and go to state 75


State 43

   48 set_op: REMOVE • PARENL in_set PARENR

    PARENL  shift, and go to state 76


State 44

   49 set_op: EXISTS • PARENL in_set PARENR

    PARENL  shift, and go to state 77


State 45

   22 basic_ops: FORALL • PARENL in_set PARENR set_op SEMIC
   23          | FORALL • PARENL in_set PARENR STFUNC statement_list ENDFUNC

    PARENL  shift, and go to state 78


State 46

    6 func_dec: TYPE ID PARENL params_list PARENR STFUNC statement_list ENDFUNC •

    $end  reduce using rule 6 (func_dec)
    TYPE  reduce using rule 6 (func_dec)


State 47

   41 term: PARENL • expression PARENR

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 79
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 48

   12 statement_list: statement_list statement •

    ID       reduce using rule 12 (statement_list)
    TYPE     reduce using rule 12 (statement_list)
    STRING   reduce using rule 12 (statement_list)
    CHAR     reduce using rule 12 (statement_list)
    EMPTY    reduce using rule 12 (statement_list)
    INTEGER  reduce using rule 12 (statement_list)
    DECIMAL  reduce using rule 12 (statement_list)
    NEG      reduce using rule 12 (statement_list)
    IF       reduce using rule 12 (statement_list)
    FOR      reduce using rule 12 (statement_list)
    READ     reduce using rule 12 (statement_list)
    WRITE    reduce using rule 12 (statement_list)
    WRITELN  reduce using rule 12 (statement_list)
    RETURN   reduce using rule 12 (statement_list)
    ISTYPE   reduce using rule 12 (statement_list)
    ADDSET   reduce using rule 12 (statement_list)
    REMOVE   reduce using rule 12 (statement_list)
    EXISTS   reduce using rule 12 (statement_list)
    FORALL   reduce using rule 12 (statement_list)
    ENDFUNC  reduce using rule 12 (statement_list)
    PARENL   reduce using rule 12 (statement_list)


State 49

   14 statement: expression_stmt •

    ID       reduce using rule 14 (statement)
    TYPE     reduce using rule 14 (statement)
    STRING   reduce using rule 14 (statement)
    CHAR     reduce using rule 14 (statement)
    EMPTY    reduce using rule 14 (statement)
    INTEGER  reduce using rule 14 (statement)
    DECIMAL  reduce using rule 14 (statement)
    NEG      reduce using rule 14 (statement)
    IF       reduce using rule 14 (statement)
    FOR      reduce using rule 14 (statement)
    READ     reduce using rule 14 (statement)
    WRITE    reduce using rule 14 (statement)
    WRITELN  reduce using rule 14 (statement)
    RETURN   reduce using rule 14 (statement)
    ISTYPE   reduce using rule 14 (statement)
    ADDSET   reduce using rule 14 (statement)
    REMOVE   reduce using rule 14 (statement)
    EXISTS   reduce using rule 14 (statement)
    FORALL   reduce using rule 14 (statement)
    ENDFUNC  reduce using rule 14 (statement)
    PARENL   reduce using rule 14 (statement)


State 50

   18 statement: basic_ops •

    ID       reduce using rule 18 (statement)
    TYPE     reduce using rule 18 (statement)
    STRING   reduce using rule 18 (statement)
    CHAR     reduce using rule 18 (statement)
    EMPTY    reduce using rule 18 (statement)
    INTEGER  reduce using rule 18 (statement)
    DECIMAL  reduce using rule 18 (statement)
    NEG      reduce using rule 18 (statement)
    IF       reduce using rule 18 (statement)
    FOR      reduce using rule 18 (statement)
    READ     reduce using rule 18 (statement)
    WRITE    reduce using rule 18 (statement)
    WRITELN  reduce using rule 18 (statement)
    RETURN   reduce using rule 18 (statement)
    ISTYPE   reduce using rule 18 (statement)
    ADDSET   reduce using rule 18 (statement)
    REMOVE   reduce using rule 18 (statement)
    EXISTS   reduce using rule 18 (statement)
    FORALL   reduce using rule 18 (statement)
    ENDFUNC  reduce using rule 18 (statement)
    PARENL   reduce using rule 18 (statement)


State 51

   20 basic_ops: if_ops •

    ID       reduce using rule 20 (basic_ops)
    TYPE     reduce using rule 20 (basic_ops)
    STRING   reduce using rule 20 (basic_ops)
    CHAR     reduce using rule 20 (basic_ops)
    EMPTY    reduce using rule 20 (basic_ops)
    INTEGER  reduce using rule 20 (basic_ops)
    DECIMAL  reduce using rule 20 (basic_ops)
    NEG      reduce using rule 20 (basic_ops)
    IF       reduce using rule 20 (basic_ops)
    FOR      reduce using rule 20 (basic_ops)
    READ     reduce using rule 20 (basic_ops)
    WRITE    reduce using rule 20 (basic_ops)
    WRITELN  reduce using rule 20 (basic_ops)
    RETURN   reduce using rule 20 (basic_ops)
    ISTYPE   reduce using rule 20 (basic_ops)
    ADDSET   reduce using rule 20 (basic_ops)
    REMOVE   reduce using rule 20 (basic_ops)
    EXISTS   reduce using rule 20 (basic_ops)
    FORALL   reduce using rule 20 (basic_ops)
    ENDFUNC  reduce using rule 20 (basic_ops)
    PARENL   reduce using rule 20 (basic_ops)


State 52

   15 statement: ret_st •

    ID       reduce using rule 15 (statement)
    TYPE     reduce using rule 15 (statement)
    STRING   reduce using rule 15 (statement)
    CHAR     reduce using rule 15 (statement)
    EMPTY    reduce using rule 15 (statement)
    INTEGER  reduce using rule 15 (statement)
    DECIMAL  reduce using rule 15 (statement)
    NEG      reduce using rule 15 (statement)
    IF       reduce using rule 15 (statement)
    FOR      reduce using rule 15 (statement)
    READ     reduce using rule 15 (statement)
    WRITE    reduce using rule 15 (statement)
    WRITELN  reduce using rule 15 (statement)
    RETURN   reduce using rule 15 (statement)
    ISTYPE   reduce using rule 15 (statement)
    ADDSET   reduce using rule 15 (statement)
    REMOVE   reduce using rule 15 (statement)
    EXISTS   reduce using rule 15 (statement)
    FORALL   reduce using rule 15 (statement)
    ENDFUNC  reduce using rule 15 (statement)
    PARENL   reduce using rule 15 (statement)


State 53

   16 statement: var_dec •

    ID       reduce using rule 16 (statement)
    TYPE     reduce using rule 16 (statement)
    STRING   reduce using rule 16 (statement)
    CHAR     reduce using rule 16 (statement)
    EMPTY    reduce using rule 16 (statement)
    INTEGER  reduce using rule 16 (statement)
    DECIMAL  reduce using rule 16 (statement)
    NEG      reduce using rule 16 (statement)
    IF       reduce using rule 16 (statement)
    FOR      reduce using rule 16 (statement)
    READ     reduce using rule 16 (statement)
    WRITE    reduce using rule 16 (statement)
    WRITELN  reduce using rule 16 (statement)
    RETURN   reduce using rule 16 (statement)
    ISTYPE   reduce using rule 16 (statement)
    ADDSET   reduce using rule 16 (statement)
    REMOVE   reduce using rule 16 (statement)
    EXISTS   reduce using rule 16 (statement)
    FORALL   reduce using rule 16 (statement)
    ENDFUNC  reduce using rule 16 (statement)
    PARENL   reduce using rule 16 (statement)


State 54

   17 statement: io_ops •

    ID       reduce using rule 17 (statement)
    TYPE     reduce using rule 17 (statement)
    STRING   reduce using rule 17 (statement)
    CHAR     reduce using rule 17 (statement)
    EMPTY    reduce using rule 17 (statement)
    INTEGER  reduce using rule 17 (statement)
    DECIMAL  reduce using rule 17 (statement)
    NEG      reduce using rule 17 (statement)
    IF       reduce using rule 17 (statement)
    FOR      reduce using rule 17 (statement)
    READ     reduce using rule 17 (statement)
    WRITE    reduce using rule 17 (statement)
    WRITELN  reduce using rule 17 (statement)
    RETURN   reduce using rule 17 (statement)
    ISTYPE   reduce using rule 17 (statement)
    ADDSET   reduce using rule 17 (statement)
    REMOVE   reduce using rule 17 (statement)
    EXISTS   reduce using rule 17 (statement)
    FORALL   reduce using rule 17 (statement)
    ENDFUNC  reduce using rule 17 (statement)
    PARENL   reduce using rule 17 (statement)


State 55

   19 expression_stmt: expression • SEMIC

    SEMIC  shift, and go to state 80


State 56

   42 math_op: term • DIV expression
   43        | term • MULT expression
   44        | term • ADD expression
   45        | term • SUB expression
   46        | term •
   53 operation: term • SMALLER expression
   54          | term • GREATER expression
   55          | term • SMALLEQ expression
   56          | term • GREATEQ expression
   57          | term • EQUALS expression
   58          | term • DIFFERENT expression
   59          | term • OR expression
   60          | term • AND expression
   63 in_set: term • IN expression

    ADD        shift, and go to state 81
    SUB        shift, and go to state 82
    MULT       shift, and go to state 83
    DIV        shift, and go to state 84
    OR         shift, and go to state 85
    AND        shift, and go to state 86
    SMALLER    shift, and go to state 87
    GREATER    shift, and go to state 88
    SMALLEQ    shift, and go to state 89
    GREATEQ    shift, and go to state 90
    EQUALS     shift, and go to state 91
    DIFFERENT  shift, and go to state 92
    IN         shift, and go to state 93

    SEMIC  reduce using rule 46 (math_op)


State 57

   50 operation: math_op •

    SEMIC  reduce using rule 50 (operation)


State 58

   31 expression: set_op •

    SEMIC  reduce using rule 31 (expression)


State 59

   32 expression: operation •

    SEMIC  reduce using rule 32 (expression)


State 60

   33 expression: func_call •

    SEMIC  reduce using rule 33 (expression)


State 61

   51 operation: in_set •

    SEMIC  reduce using rule 51 (operation)


State 62

   34 expression: assign_value •

    SEMIC  reduce using rule 34 (expression)


State 63

    7 func_dec: TYPE MAIN PARENL params_list PARENR STFUNC statement_list ENDFUNC •

    $end  reduce using rule 7 (func_dec)
    TYPE  reduce using rule 7 (func_dec)


State 64

   67 assign_value: ID ASSIGN • expression

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 94
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 65

   62 func_call: ID PARENL • args_list PARENR

    ID       shift, and go to state 95
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    INTEGER  shift, and go to state 176
    DECIMAL  shift, and go to state 177
    PARENL   shift, and go to state 178

    COMMA   reduce using rule 66 (args_list)
    PARENR  reduce using rule 66 (args_list)

    term       go to state 96
    args_list  go to state 97


State 66

   27 var_dec: TYPE ID • SEMIC

    SEMIC  shift, and go to state 179


State 67

   61 operation: NEG expression •

    SEMIC  reduce using rule 61 (operation)


State 68

   24 if_ops: IF PARENL • operation PARENR STFUNC statement_list ENDFUNC
   25       | IF PARENL • operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    ID       shift, and go to state 180
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    PARENL   shift, and go to state 165

    term       go to state 166
    math_op    go to state 167
    operation  go to state 98
    in_set     go to state 171


State 69

   21 basic_ops: FOR PARENL • operation PARENR STFUNC statement_list ENDFUNC

    ID       shift, and go to state 180
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    PARENL   shift, and go to state 165

    term       go to state 166
    math_op    go to state 167
    operation  go to state 99
    in_set     go to state 171


State 70

   28 io_ops: READ PARENL • PARENR SEMIC

    PARENR  shift, and go to state 100


State 71

   29 io_ops: WRITE PARENL • expression PARENR SEMIC

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 101
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 72

   30 io_ops: WRITELN PARENL • expression PARENR SEMIC

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 102
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 73

   26 ret_st: RETURN expression • SEMIC

    SEMIC  shift, and go to state 103


State 74

   52 operation: ISTYPE PARENL • expression PARENR

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 104
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 75

   47 set_op: ADDSET PARENL • in_set PARENR

    ID       shift, and go to state 181
    STRING   shift, and go to state 182
    CHAR     shift, and go to state 183
    EMPTY    shift, and go to state 184
    INTEGER  shift, and go to state 185
    DECIMAL  shift, and go to state 186
    PARENL   shift, and go to state 187

    term    go to state 105
    in_set  go to state 106


State 76

   48 set_op: REMOVE PARENL • in_set PARENR

    ID       shift, and go to state 181
    STRING   shift, and go to state 182
    CHAR     shift, and go to state 183
    EMPTY    shift, and go to state 184
    INTEGER  shift, and go to state 185
    DECIMAL  shift, and go to state 186
    PARENL   shift, and go to state 187

    term    go to state 105
    in_set  go to state 107


State 77

   49 set_op: EXISTS PARENL • in_set PARENR

    ID       shift, and go to state 181
    STRING   shift, and go to state 182
    CHAR     shift, and go to state 183
    EMPTY    shift, and go to state 184
    INTEGER  shift, and go to state 185
    DECIMAL  shift, and go to state 186
    PARENL   shift, and go to state 187

    term    go to state 105
    in_set  go to state 108


State 78

   22 basic_ops: FORALL PARENL • in_set PARENR set_op SEMIC
   23          | FORALL PARENL • in_set PARENR STFUNC statement_list ENDFUNC

    ID       shift, and go to state 181
    STRING   shift, and go to state 182
    CHAR     shift, and go to state 183
    EMPTY    shift, and go to state 184
    INTEGER  shift, and go to state 185
    DECIMAL  shift, and go to state 186
    PARENL   shift, and go to state 187

    term    go to state 105
    in_set  go to state 109


State 79

   41 term: PARENL expression • PARENR

    PARENR  shift, and go to state 110


State 80

   19 expression_stmt: expression SEMIC •

    ID       reduce using rule 19 (expression_stmt)
    TYPE     reduce using rule 19 (expression_stmt)
    STRING   reduce using rule 19 (expression_stmt)
    CHAR     reduce using rule 19 (expression_stmt)
    EMPTY    reduce using rule 19 (expression_stmt)
    INTEGER  reduce using rule 19 (expression_stmt)
    DECIMAL  reduce using rule 19 (expression_stmt)
    NEG      reduce using rule 19 (expression_stmt)
    IF       reduce using rule 19 (expression_stmt)
    FOR      reduce using rule 19 (expression_stmt)
    READ     reduce using rule 19 (expression_stmt)
    WRITE    reduce using rule 19 (expression_stmt)
    WRITELN  reduce using rule 19 (expression_stmt)
    RETURN   reduce using rule 19 (expression_stmt)
    ISTYPE   reduce using rule 19 (expression_stmt)
    ADDSET   reduce using rule 19 (expression_stmt)
    REMOVE   reduce using rule 19 (expression_stmt)
    EXISTS   reduce using rule 19 (expression_stmt)
    FORALL   reduce using rule 19 (expression_stmt)
    ENDFUNC  reduce using rule 19 (expression_stmt)
    PARENL   reduce using rule 19 (expression_stmt)


State 81

   44 math_op: term ADD • expression

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 111
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 82

   45 math_op: term SUB • expression

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 112
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 83

   43 math_op: term MULT • expression

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 113
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 84

   42 math_op: term DIV • expression

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 114
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 85

   59 operation: term OR • expression

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 115
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 86

   60 operation: term AND • expression

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 116
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 87

   53 operation: term SMALLER • expression

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 117
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 88

   54 operation: term GREATER • expression

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 118
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 89

   55 operation: term SMALLEQ • expression

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 119
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 90

   56 operation: term GREATEQ • expression

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 120
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 91

   57 operation: term EQUALS • expression

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 121
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 92

   58 operation: term DIFFERENT • expression

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 122
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 93

   63 in_set: term IN • expression

    ID       shift, and go to state 27
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    PARENL   shift, and go to state 47

    expression    go to state 123
    term          go to state 56
    math_op       go to state 57
    set_op        go to state 58
    operation     go to state 59
    func_call     go to state 60
    in_set        go to state 61
    assign_value  go to state 62


State 94

   67 assign_value: ID ASSIGN expression •

    SEMIC  reduce using rule 67 (assign_value)


State 95

   35 term: ID •

    COMMA   reduce using rule 35 (term)
    PARENR  reduce using rule 35 (term)


State 96

   65 args_list: term •

    COMMA   reduce using rule 65 (args_list)
    PARENR  reduce using rule 65 (args_list)


State 97

   62 func_call: ID PARENL args_list • PARENR
   64 args_list: args_list • COMMA term

    COMMA   shift, and go to state 124
    PARENR  shift, and go to state 125


State 98

   24 if_ops: IF PARENL operation • PARENR STFUNC statement_list ENDFUNC
   25       | IF PARENL operation • PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    PARENR  shift, and go to state 126


State 99

   21 basic_ops: FOR PARENL operation • PARENR STFUNC statement_list ENDFUNC

    PARENR  shift, and go to state 127


State 100

   28 io_ops: READ PARENL PARENR • SEMIC

    SEMIC  shift, and go to state 128


State 101

   29 io_ops: WRITE PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 129


State 102

   30 io_ops: WRITELN PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 130


State 103

   26 ret_st: RETURN expression SEMIC •

    ID       reduce using rule 26 (ret_st)
    TYPE     reduce using rule 26 (ret_st)
    STRING   reduce using rule 26 (ret_st)
    CHAR     reduce using rule 26 (ret_st)
    EMPTY    reduce using rule 26 (ret_st)
    INTEGER  reduce using rule 26 (ret_st)
    DECIMAL  reduce using rule 26 (ret_st)
    NEG      reduce using rule 26 (ret_st)
    IF       reduce using rule 26 (ret_st)
    FOR      reduce using rule 26 (ret_st)
    READ     reduce using rule 26 (ret_st)
    WRITE    reduce using rule 26 (ret_st)
    WRITELN  reduce using rule 26 (ret_st)
    RETURN   reduce using rule 26 (ret_st)
    ISTYPE   reduce using rule 26 (ret_st)
    ADDSET   reduce using rule 26 (ret_st)
    REMOVE   reduce using rule 26 (ret_st)
    EXISTS   reduce using rule 26 (ret_st)
    FORALL   reduce using rule 26 (ret_st)
    ENDFUNC  reduce using rule 26 (ret_st)
    PARENL   reduce using rule 26 (ret_st)


State 104

   52 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 131


State 105

   63 in_set: term • IN expression

    IN  shift, and go to state 188


State 106

   47 set_op: ADDSET PARENL in_set • PARENR

    PARENR  shift, and go to state 132


State 107

   48 set_op: REMOVE PARENL in_set • PARENR

    PARENR  shift, and go to state 133


State 108

   49 set_op: EXISTS PARENL in_set • PARENR

    PARENR  shift, and go to state 134


State 109

   22 basic_ops: FORALL PARENL in_set • PARENR set_op SEMIC
   23          | FORALL PARENL in_set • PARENR STFUNC statement_list ENDFUNC

    PARENR  shift, and go to state 135


State 110

   41 term: PARENL expression PARENR •

    ADD        reduce using rule 41 (term)
    SUB        reduce using rule 41 (term)
    MULT       reduce using rule 41 (term)
    DIV        reduce using rule 41 (term)
    OR         reduce using rule 41 (term)
    AND        reduce using rule 41 (term)
    SMALLER    reduce using rule 41 (term)
    GREATER    reduce using rule 41 (term)
    SMALLEQ    reduce using rule 41 (term)
    GREATEQ    reduce using rule 41 (term)
    EQUALS     reduce using rule 41 (term)
    DIFFERENT  reduce using rule 41 (term)
    IN         reduce using rule 41 (term)
    SEMIC      reduce using rule 41 (term)


State 111

   44 math_op: term ADD expression •

    SEMIC  reduce using rule 44 (math_op)


State 112

   45 math_op: term SUB expression •

    SEMIC  reduce using rule 45 (math_op)


State 113

   43 math_op: term MULT expression •

    SEMIC  reduce using rule 43 (math_op)


State 114

   42 math_op: term DIV expression •

    SEMIC  reduce using rule 42 (math_op)


State 115

   59 operation: term OR expression •

    SEMIC  reduce using rule 59 (operation)


State 116

   60 operation: term AND expression •

    SEMIC  reduce using rule 60 (operation)


State 117

   53 operation: term SMALLER expression •

    SEMIC  reduce using rule 53 (operation)


State 118

   54 operation: term GREATER expression •

    SEMIC  reduce using rule 54 (operation)


State 119

   55 operation: term SMALLEQ expression •

    SEMIC  reduce using rule 55 (operation)


State 120

   56 operation: term GREATEQ expression •

    SEMIC  reduce using rule 56 (operation)


State 121

   57 operation: term EQUALS expression •

    SEMIC  reduce using rule 57 (operation)


State 122

   58 operation: term DIFFERENT expression •

    SEMIC  reduce using rule 58 (operation)


State 123

   63 in_set: term IN expression •

    SEMIC  reduce using rule 63 (in_set)


State 124

   64 args_list: args_list COMMA • term

    ID       shift, and go to state 95
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    INTEGER  shift, and go to state 176
    DECIMAL  shift, and go to state 177
    PARENL   shift, and go to state 178

    term  go to state 136


State 125

   62 func_call: ID PARENL args_list PARENR •

    SEMIC  reduce using rule 62 (func_call)


State 126

   24 if_ops: IF PARENL operation PARENR • STFUNC statement_list ENDFUNC
   25       | IF PARENL operation PARENR • STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 137


State 127

   21 basic_ops: FOR PARENL operation PARENR • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 138


State 128

   28 io_ops: READ PARENL PARENR SEMIC •

    ID       reduce using rule 28 (io_ops)
    TYPE     reduce using rule 28 (io_ops)
    STRING   reduce using rule 28 (io_ops)
    CHAR     reduce using rule 28 (io_ops)
    EMPTY    reduce using rule 28 (io_ops)
    INTEGER  reduce using rule 28 (io_ops)
    DECIMAL  reduce using rule 28 (io_ops)
    NEG      reduce using rule 28 (io_ops)
    IF       reduce using rule 28 (io_ops)
    FOR      reduce using rule 28 (io_ops)
    READ     reduce using rule 28 (io_ops)
    WRITE    reduce using rule 28 (io_ops)
    WRITELN  reduce using rule 28 (io_ops)
    RETURN   reduce using rule 28 (io_ops)
    ISTYPE   reduce using rule 28 (io_ops)
    ADDSET   reduce using rule 28 (io_ops)
    REMOVE   reduce using rule 28 (io_ops)
    EXISTS   reduce using rule 28 (io_ops)
    FORALL   reduce using rule 28 (io_ops)
    ENDFUNC  reduce using rule 28 (io_ops)
    PARENL   reduce using rule 28 (io_ops)


State 129

   29 io_ops: WRITE PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 139


State 130

   30 io_ops: WRITELN PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 140


State 131

   52 operation: ISTYPE PARENL expression PARENR •

    SEMIC  reduce using rule 52 (operation)


State 132

   47 set_op: ADDSET PARENL in_set PARENR •

    SEMIC  reduce using rule 47 (set_op)


State 133

   48 set_op: REMOVE PARENL in_set PARENR •

    SEMIC  reduce using rule 48 (set_op)


State 134

   49 set_op: EXISTS PARENL in_set PARENR •

    SEMIC  reduce using rule 49 (set_op)


State 135

   22 basic_ops: FORALL PARENL in_set PARENR • set_op SEMIC
   23          | FORALL PARENL in_set PARENR • STFUNC statement_list ENDFUNC

    ADDSET  shift, and go to state 42
    REMOVE  shift, and go to state 43
    EXISTS  shift, and go to state 44
    STFUNC  shift, and go to state 141

    set_op  go to state 142


State 136

   64 args_list: args_list COMMA term •

    COMMA   reduce using rule 64 (args_list)
    PARENR  reduce using rule 64 (args_list)


State 137

   24 if_ops: IF PARENL operation PARENR STFUNC • statement_list ENDFUNC
   25       | IF PARENL operation PARENR STFUNC • statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    ID       reduce using rule 13 (statement_list)
    TYPE     reduce using rule 13 (statement_list)
    STRING   reduce using rule 13 (statement_list)
    CHAR     reduce using rule 13 (statement_list)
    EMPTY    reduce using rule 13 (statement_list)
    INTEGER  reduce using rule 13 (statement_list)
    DECIMAL  reduce using rule 13 (statement_list)
    NEG      reduce using rule 13 (statement_list)
    IF       reduce using rule 13 (statement_list)
    FOR      reduce using rule 13 (statement_list)
    READ     reduce using rule 13 (statement_list)
    WRITE    reduce using rule 13 (statement_list)
    WRITELN  reduce using rule 13 (statement_list)
    RETURN   reduce using rule 13 (statement_list)
    ISTYPE   reduce using rule 13 (statement_list)
    ADDSET   reduce using rule 13 (statement_list)
    REMOVE   reduce using rule 13 (statement_list)
    EXISTS   reduce using rule 13 (statement_list)
    FORALL   reduce using rule 13 (statement_list)
    ENDFUNC  reduce using rule 13 (statement_list)
    PARENL   reduce using rule 13 (statement_list)

    statement_list  go to state 143


State 138

   21 basic_ops: FOR PARENL operation PARENR STFUNC • statement_list ENDFUNC

    ID       reduce using rule 13 (statement_list)
    TYPE     reduce using rule 13 (statement_list)
    STRING   reduce using rule 13 (statement_list)
    CHAR     reduce using rule 13 (statement_list)
    EMPTY    reduce using rule 13 (statement_list)
    INTEGER  reduce using rule 13 (statement_list)
    DECIMAL  reduce using rule 13 (statement_list)
    NEG      reduce using rule 13 (statement_list)
    IF       reduce using rule 13 (statement_list)
    FOR      reduce using rule 13 (statement_list)
    READ     reduce using rule 13 (statement_list)
    WRITE    reduce using rule 13 (statement_list)
    WRITELN  reduce using rule 13 (statement_list)
    RETURN   reduce using rule 13 (statement_list)
    ISTYPE   reduce using rule 13 (statement_list)
    ADDSET   reduce using rule 13 (statement_list)
    REMOVE   reduce using rule 13 (statement_list)
    EXISTS   reduce using rule 13 (statement_list)
    FORALL   reduce using rule 13 (statement_list)
    ENDFUNC  reduce using rule 13 (statement_list)
    PARENL   reduce using rule 13 (statement_list)

    statement_list  go to state 144


State 139

   29 io_ops: WRITE PARENL expression PARENR SEMIC •

    ID       reduce using rule 29 (io_ops)
    TYPE     reduce using rule 29 (io_ops)
    STRING   reduce using rule 29 (io_ops)
    CHAR     reduce using rule 29 (io_ops)
    EMPTY    reduce using rule 29 (io_ops)
    INTEGER  reduce using rule 29 (io_ops)
    DECIMAL  reduce using rule 29 (io_ops)
    NEG      reduce using rule 29 (io_ops)
    IF       reduce using rule 29 (io_ops)
    FOR      reduce using rule 29 (io_ops)
    READ     reduce using rule 29 (io_ops)
    WRITE    reduce using rule 29 (io_ops)
    WRITELN  reduce using rule 29 (io_ops)
    RETURN   reduce using rule 29 (io_ops)
    ISTYPE   reduce using rule 29 (io_ops)
    ADDSET   reduce using rule 29 (io_ops)
    REMOVE   reduce using rule 29 (io_ops)
    EXISTS   reduce using rule 29 (io_ops)
    FORALL   reduce using rule 29 (io_ops)
    ENDFUNC  reduce using rule 29 (io_ops)
    PARENL   reduce using rule 29 (io_ops)


State 140

   30 io_ops: WRITELN PARENL expression PARENR SEMIC •

    ID       reduce using rule 30 (io_ops)
    TYPE     reduce using rule 30 (io_ops)
    STRING   reduce using rule 30 (io_ops)
    CHAR     reduce using rule 30 (io_ops)
    EMPTY    reduce using rule 30 (io_ops)
    INTEGER  reduce using rule 30 (io_ops)
    DECIMAL  reduce using rule 30 (io_ops)
    NEG      reduce using rule 30 (io_ops)
    IF       reduce using rule 30 (io_ops)
    FOR      reduce using rule 30 (io_ops)
    READ     reduce using rule 30 (io_ops)
    WRITE    reduce using rule 30 (io_ops)
    WRITELN  reduce using rule 30 (io_ops)
    RETURN   reduce using rule 30 (io_ops)
    ISTYPE   reduce using rule 30 (io_ops)
    ADDSET   reduce using rule 30 (io_ops)
    REMOVE   reduce using rule 30 (io_ops)
    EXISTS   reduce using rule 30 (io_ops)
    FORALL   reduce using rule 30 (io_ops)
    ENDFUNC  reduce using rule 30 (io_ops)
    PARENL   reduce using rule 30 (io_ops)


State 141

   23 basic_ops: FORALL PARENL in_set PARENR STFUNC • statement_list ENDFUNC

    ID       reduce using rule 13 (statement_list)
    TYPE     reduce using rule 13 (statement_list)
    STRING   reduce using rule 13 (statement_list)
    CHAR     reduce using rule 13 (statement_list)
    EMPTY    reduce using rule 13 (statement_list)
    INTEGER  reduce using rule 13 (statement_list)
    DECIMAL  reduce using rule 13 (statement_list)
    NEG      reduce using rule 13 (statement_list)
    IF       reduce using rule 13 (statement_list)
    FOR      reduce using rule 13 (statement_list)
    READ     reduce using rule 13 (statement_list)
    WRITE    reduce using rule 13 (statement_list)
    WRITELN  reduce using rule 13 (statement_list)
    RETURN   reduce using rule 13 (statement_list)
    ISTYPE   reduce using rule 13 (statement_list)
    ADDSET   reduce using rule 13 (statement_list)
    REMOVE   reduce using rule 13 (statement_list)
    EXISTS   reduce using rule 13 (statement_list)
    FORALL   reduce using rule 13 (statement_list)
    ENDFUNC  reduce using rule 13 (statement_list)
    PARENL   reduce using rule 13 (statement_list)

    statement_list  go to state 145


State 142

   22 basic_ops: FORALL PARENL in_set PARENR set_op • SEMIC

    SEMIC  shift, and go to state 146


State 143

   12 statement_list: statement_list • statement
   24 if_ops: IF PARENL operation PARENR STFUNC statement_list • ENDFUNC
   25       | IF PARENL operation PARENR STFUNC statement_list • ENDFUNC ELSE STFUNC statement_list ENDFUNC

    ID       shift, and go to state 27
    TYPE     shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    IF       shift, and go to state 35
    FOR      shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38
    WRITELN  shift, and go to state 39
    RETURN   shift, and go to state 40
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    FORALL   shift, and go to state 45
    ENDFUNC  shift, and go to state 147
    PARENL   shift, and go to state 47

    statement        go to state 48
    expression_stmt  go to state 49
    basic_ops        go to state 50
    if_ops           go to state 51
    ret_st           go to state 52
    var_dec          go to state 53
    io_ops           go to state 54
    expression       go to state 55
    term             go to state 56
    math_op          go to state 57
    set_op           go to state 58
    operation        go to state 59
    func_call        go to state 60
    in_set           go to state 61
    assign_value     go to state 62


State 144

   12 statement_list: statement_list • statement
   21 basic_ops: FOR PARENL operation PARENR STFUNC statement_list • ENDFUNC

    ID       shift, and go to state 27
    TYPE     shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    IF       shift, and go to state 35
    FOR      shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38
    WRITELN  shift, and go to state 39
    RETURN   shift, and go to state 40
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    FORALL   shift, and go to state 45
    ENDFUNC  shift, and go to state 148
    PARENL   shift, and go to state 47

    statement        go to state 48
    expression_stmt  go to state 49
    basic_ops        go to state 50
    if_ops           go to state 51
    ret_st           go to state 52
    var_dec          go to state 53
    io_ops           go to state 54
    expression       go to state 55
    term             go to state 56
    math_op          go to state 57
    set_op           go to state 58
    operation        go to state 59
    func_call        go to state 60
    in_set           go to state 61
    assign_value     go to state 62


State 145

   12 statement_list: statement_list • statement
   23 basic_ops: FORALL PARENL in_set PARENR STFUNC statement_list • ENDFUNC

    ID       shift, and go to state 27
    TYPE     shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    IF       shift, and go to state 35
    FOR      shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38
    WRITELN  shift, and go to state 39
    RETURN   shift, and go to state 40
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    FORALL   shift, and go to state 45
    ENDFUNC  shift, and go to state 149
    PARENL   shift, and go to state 47

    statement        go to state 48
    expression_stmt  go to state 49
    basic_ops        go to state 50
    if_ops           go to state 51
    ret_st           go to state 52
    var_dec          go to state 53
    io_ops           go to state 54
    expression       go to state 55
    term             go to state 56
    math_op          go to state 57
    set_op           go to state 58
    operation        go to state 59
    func_call        go to state 60
    in_set           go to state 61
    assign_value     go to state 62


State 146

   22 basic_ops: FORALL PARENL in_set PARENR set_op SEMIC •

    ID       reduce using rule 22 (basic_ops)
    TYPE     reduce using rule 22 (basic_ops)
    STRING   reduce using rule 22 (basic_ops)
    CHAR     reduce using rule 22 (basic_ops)
    EMPTY    reduce using rule 22 (basic_ops)
    INTEGER  reduce using rule 22 (basic_ops)
    DECIMAL  reduce using rule 22 (basic_ops)
    NEG      reduce using rule 22 (basic_ops)
    IF       reduce using rule 22 (basic_ops)
    FOR      reduce using rule 22 (basic_ops)
    READ     reduce using rule 22 (basic_ops)
    WRITE    reduce using rule 22 (basic_ops)
    WRITELN  reduce using rule 22 (basic_ops)
    RETURN   reduce using rule 22 (basic_ops)
    ISTYPE   reduce using rule 22 (basic_ops)
    ADDSET   reduce using rule 22 (basic_ops)
    REMOVE   reduce using rule 22 (basic_ops)
    EXISTS   reduce using rule 22 (basic_ops)
    FORALL   reduce using rule 22 (basic_ops)
    ENDFUNC  reduce using rule 22 (basic_ops)
    PARENL   reduce using rule 22 (basic_ops)


State 147

   24 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC •
   25       | IF PARENL operation PARENR STFUNC statement_list ENDFUNC • ELSE STFUNC statement_list ENDFUNC

    ELSE  shift, and go to state 150

    ID       reduce using rule 24 (if_ops)
    TYPE     reduce using rule 24 (if_ops)
    STRING   reduce using rule 24 (if_ops)
    CHAR     reduce using rule 24 (if_ops)
    EMPTY    reduce using rule 24 (if_ops)
    INTEGER  reduce using rule 24 (if_ops)
    DECIMAL  reduce using rule 24 (if_ops)
    NEG      reduce using rule 24 (if_ops)
    IF       reduce using rule 24 (if_ops)
    FOR      reduce using rule 24 (if_ops)
    READ     reduce using rule 24 (if_ops)
    WRITE    reduce using rule 24 (if_ops)
    WRITELN  reduce using rule 24 (if_ops)
    RETURN   reduce using rule 24 (if_ops)
    ISTYPE   reduce using rule 24 (if_ops)
    ADDSET   reduce using rule 24 (if_ops)
    REMOVE   reduce using rule 24 (if_ops)
    EXISTS   reduce using rule 24 (if_ops)
    FORALL   reduce using rule 24 (if_ops)
    ENDFUNC  reduce using rule 24 (if_ops)
    PARENL   reduce using rule 24 (if_ops)


State 148

   21 basic_ops: FOR PARENL operation PARENR STFUNC statement_list ENDFUNC •

    ID       reduce using rule 21 (basic_ops)
    TYPE     reduce using rule 21 (basic_ops)
    STRING   reduce using rule 21 (basic_ops)
    CHAR     reduce using rule 21 (basic_ops)
    EMPTY    reduce using rule 21 (basic_ops)
    INTEGER  reduce using rule 21 (basic_ops)
    DECIMAL  reduce using rule 21 (basic_ops)
    NEG      reduce using rule 21 (basic_ops)
    IF       reduce using rule 21 (basic_ops)
    FOR      reduce using rule 21 (basic_ops)
    READ     reduce using rule 21 (basic_ops)
    WRITE    reduce using rule 21 (basic_ops)
    WRITELN  reduce using rule 21 (basic_ops)
    RETURN   reduce using rule 21 (basic_ops)
    ISTYPE   reduce using rule 21 (basic_ops)
    ADDSET   reduce using rule 21 (basic_ops)
    REMOVE   reduce using rule 21 (basic_ops)
    EXISTS   reduce using rule 21 (basic_ops)
    FORALL   reduce using rule 21 (basic_ops)
    ENDFUNC  reduce using rule 21 (basic_ops)
    PARENL   reduce using rule 21 (basic_ops)


State 149

   23 basic_ops: FORALL PARENL in_set PARENR STFUNC statement_list ENDFUNC •

    ID       reduce using rule 23 (basic_ops)
    TYPE     reduce using rule 23 (basic_ops)
    STRING   reduce using rule 23 (basic_ops)
    CHAR     reduce using rule 23 (basic_ops)
    EMPTY    reduce using rule 23 (basic_ops)
    INTEGER  reduce using rule 23 (basic_ops)
    DECIMAL  reduce using rule 23 (basic_ops)
    NEG      reduce using rule 23 (basic_ops)
    IF       reduce using rule 23 (basic_ops)
    FOR      reduce using rule 23 (basic_ops)
    READ     reduce using rule 23 (basic_ops)
    WRITE    reduce using rule 23 (basic_ops)
    WRITELN  reduce using rule 23 (basic_ops)
    RETURN   reduce using rule 23 (basic_ops)
    ISTYPE   reduce using rule 23 (basic_ops)
    ADDSET   reduce using rule 23 (basic_ops)
    REMOVE   reduce using rule 23 (basic_ops)
    EXISTS   reduce using rule 23 (basic_ops)
    FORALL   reduce using rule 23 (basic_ops)
    ENDFUNC  reduce using rule 23 (basic_ops)
    PARENL   reduce using rule 23 (basic_ops)


State 150

   25 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 151


State 151

   25 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC • statement_list ENDFUNC

    ID       reduce using rule 13 (statement_list)
    TYPE     reduce using rule 13 (statement_list)
    STRING   reduce using rule 13 (statement_list)
    CHAR     reduce using rule 13 (statement_list)
    EMPTY    reduce using rule 13 (statement_list)
    INTEGER  reduce using rule 13 (statement_list)
    DECIMAL  reduce using rule 13 (statement_list)
    NEG      reduce using rule 13 (statement_list)
    IF       reduce using rule 13 (statement_list)
    FOR      reduce using rule 13 (statement_list)
    READ     reduce using rule 13 (statement_list)
    WRITE    reduce using rule 13 (statement_list)
    WRITELN  reduce using rule 13 (statement_list)
    RETURN   reduce using rule 13 (statement_list)
    ISTYPE   reduce using rule 13 (statement_list)
    ADDSET   reduce using rule 13 (statement_list)
    REMOVE   reduce using rule 13 (statement_list)
    EXISTS   reduce using rule 13 (statement_list)
    FORALL   reduce using rule 13 (statement_list)
    ENDFUNC  reduce using rule 13 (statement_list)
    PARENL   reduce using rule 13 (statement_list)

    statement_list  go to state 152


State 152

   12 statement_list: statement_list • statement
   25 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list • ENDFUNC

    ID       shift, and go to state 27
    TYPE     shift, and go to state 28
    STRING   shift, and go to state 29
    CHAR     shift, and go to state 30
    EMPTY    shift, and go to state 31
    INTEGER  shift, and go to state 32
    DECIMAL  shift, and go to state 33
    NEG      shift, and go to state 34
    IF       shift, and go to state 35
    FOR      shift, and go to state 36
    READ     shift, and go to state 37
    WRITE    shift, and go to state 38
    WRITELN  shift, and go to state 39
    RETURN   shift, and go to state 40
    ISTYPE   shift, and go to state 41
    ADDSET   shift, and go to state 42
    REMOVE   shift, and go to state 43
    EXISTS   shift, and go to state 44
    FORALL   shift, and go to state 45
    ENDFUNC  shift, and go to state 153
    PARENL   shift, and go to state 47

    statement        go to state 48
    expression_stmt  go to state 49
    basic_ops        go to state 50
    if_ops           go to state 51
    ret_st           go to state 52
    var_dec          go to state 53
    io_ops           go to state 54
    expression       go to state 55
    term             go to state 56
    math_op          go to state 57
    set_op           go to state 58
    operation        go to state 59
    func_call        go to state 60
    in_set           go to state 61
    assign_value     go to state 62


State 153

   25 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC •

    ID       reduce using rule 25 (if_ops)
    TYPE     reduce using rule 25 (if_ops)
    STRING   reduce using rule 25 (if_ops)
    CHAR     reduce using rule 25 (if_ops)
    EMPTY    reduce using rule 25 (if_ops)
    INTEGER  reduce using rule 25 (if_ops)
    DECIMAL  reduce using rule 25 (if_ops)
    NEG      reduce using rule 25 (if_ops)
    IF       reduce using rule 25 (if_ops)
    FOR      reduce using rule 25 (if_ops)
    READ     reduce using rule 25 (if_ops)
    WRITE    reduce using rule 25 (if_ops)
    WRITELN  reduce using rule 25 (if_ops)
    RETURN   reduce using rule 25 (if_ops)
    ISTYPE   reduce using rule 25 (if_ops)
    ADDSET   reduce using rule 25 (if_ops)
    REMOVE   reduce using rule 25 (if_ops)
    EXISTS   reduce using rule 25 (if_ops)
    FORALL   reduce using rule 25 (if_ops)
    ENDFUNC  reduce using rule 25 (if_ops)
    PARENL   reduce using rule 25 (if_ops)


State 154

   35 term: ID •
   62 func_call: ID • PARENL args_list PARENR
   67 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 189
    PARENL  shift, and go to state 190

    ADD        reduce using rule 35 (term)
    SUB        reduce using rule 35 (term)
    MULT       reduce using rule 35 (term)
    DIV        reduce using rule 35 (term)
    OR         reduce using rule 35 (term)
    AND        reduce using rule 35 (term)
    SMALLER    reduce using rule 35 (term)
    GREATER    reduce using rule 35 (term)
    SMALLEQ    reduce using rule 35 (term)
    GREATEQ    reduce using rule 35 (term)
    EQUALS     reduce using rule 35 (term)
    DIFFERENT  reduce using rule 35 (term)
    IN         reduce using rule 35 (term)
    PARENR     reduce using rule 35 (term)


State 155

   39 term: STRING •

    ADD        reduce using rule 39 (term)
    SUB        reduce using rule 39 (term)
    MULT       reduce using rule 39 (term)
    DIV        reduce using rule 39 (term)
    OR         reduce using rule 39 (term)
    AND        reduce using rule 39 (term)
    SMALLER    reduce using rule 39 (term)
    GREATER    reduce using rule 39 (term)
    SMALLEQ    reduce using rule 39 (term)
    GREATEQ    reduce using rule 39 (term)
    EQUALS     reduce using rule 39 (term)
    DIFFERENT  reduce using rule 39 (term)
    IN         reduce using rule 39 (term)
    PARENR     reduce using rule 39 (term)


State 156

   38 term: CHAR •

    ADD        reduce using rule 38 (term)
    SUB        reduce using rule 38 (term)
    MULT       reduce using rule 38 (term)
    DIV        reduce using rule 38 (term)
    OR         reduce using rule 38 (term)
    AND        reduce using rule 38 (term)
    SMALLER    reduce using rule 38 (term)
    GREATER    reduce using rule 38 (term)
    SMALLEQ    reduce using rule 38 (term)
    GREATEQ    reduce using rule 38 (term)
    EQUALS     reduce using rule 38 (term)
    DIFFERENT  reduce using rule 38 (term)
    IN         reduce using rule 38 (term)
    PARENR     reduce using rule 38 (term)


State 157

   40 term: EMPTY •

    ADD        reduce using rule 40 (term)
    SUB        reduce using rule 40 (term)
    MULT       reduce using rule 40 (term)
    DIV        reduce using rule 40 (term)
    OR         reduce using rule 40 (term)
    AND        reduce using rule 40 (term)
    SMALLER    reduce using rule 40 (term)
    GREATER    reduce using rule 40 (term)
    SMALLEQ    reduce using rule 40 (term)
    GREATEQ    reduce using rule 40 (term)
    EQUALS     reduce using rule 40 (term)
    DIFFERENT  reduce using rule 40 (term)
    IN         reduce using rule 40 (term)
    PARENR     reduce using rule 40 (term)


State 158

   36 term: INTEGER •

    ADD        reduce using rule 36 (term)
    SUB        reduce using rule 36 (term)
    MULT       reduce using rule 36 (term)
    DIV        reduce using rule 36 (term)
    OR         reduce using rule 36 (term)
    AND        reduce using rule 36 (term)
    SMALLER    reduce using rule 36 (term)
    GREATER    reduce using rule 36 (term)
    SMALLEQ    reduce using rule 36 (term)
    GREATEQ    reduce using rule 36 (term)
    EQUALS     reduce using rule 36 (term)
    DIFFERENT  reduce using rule 36 (term)
    IN         reduce using rule 36 (term)
    PARENR     reduce using rule 36 (term)


State 159

   37 term: DECIMAL •

    ADD        reduce using rule 37 (term)
    SUB        reduce using rule 37 (term)
    MULT       reduce using rule 37 (term)
    DIV        reduce using rule 37 (term)
    OR         reduce using rule 37 (term)
    AND        reduce using rule 37 (term)
    SMALLER    reduce using rule 37 (term)
    GREATER    reduce using rule 37 (term)
    SMALLEQ    reduce using rule 37 (term)
    GREATEQ    reduce using rule 37 (term)
    EQUALS     reduce using rule 37 (term)
    DIFFERENT  reduce using rule 37 (term)
    IN         reduce using rule 37 (term)
    PARENR     reduce using rule 37 (term)


State 160

   61 operation: NEG • expression

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 191
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 161

   52 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 192


State 162

   47 set_op: ADDSET • PARENL in_set PARENR

    PARENL  shift, and go to state 193


State 163

   48 set_op: REMOVE • PARENL in_set PARENR

    PARENL  shift, and go to state 194


State 164

   49 set_op: EXISTS • PARENL in_set PARENR

    PARENL  shift, and go to state 195


State 165

   41 term: PARENL • expression PARENR

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 196
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 166

   42 math_op: term • DIV expression
   43        | term • MULT expression
   44        | term • ADD expression
   45        | term • SUB expression
   46        | term •
   53 operation: term • SMALLER expression
   54          | term • GREATER expression
   55          | term • SMALLEQ expression
   56          | term • GREATEQ expression
   57          | term • EQUALS expression
   58          | term • DIFFERENT expression
   59          | term • OR expression
   60          | term • AND expression
   63 in_set: term • IN expression

    ADD        shift, and go to state 197
    SUB        shift, and go to state 198
    MULT       shift, and go to state 199
    DIV        shift, and go to state 200
    OR         shift, and go to state 201
    AND        shift, and go to state 202
    SMALLER    shift, and go to state 203
    GREATER    shift, and go to state 204
    SMALLEQ    shift, and go to state 205
    GREATEQ    shift, and go to state 206
    EQUALS     shift, and go to state 207
    DIFFERENT  shift, and go to state 208
    IN         shift, and go to state 188

    PARENR  reduce using rule 46 (math_op)


State 167

   50 operation: math_op •

    PARENR  reduce using rule 50 (operation)


State 168

   31 expression: set_op •

    PARENR  reduce using rule 31 (expression)


State 169

   32 expression: operation •

    PARENR  reduce using rule 32 (expression)


State 170

   33 expression: func_call •

    PARENR  reduce using rule 33 (expression)


State 171

   51 operation: in_set •

    PARENR  reduce using rule 51 (operation)


State 172

   34 expression: assign_value •

    PARENR  reduce using rule 34 (expression)


State 173

   39 term: STRING •

    COMMA   reduce using rule 39 (term)
    PARENR  reduce using rule 39 (term)


State 174

   38 term: CHAR •

    COMMA   reduce using rule 38 (term)
    PARENR  reduce using rule 38 (term)


State 175

   40 term: EMPTY •

    COMMA   reduce using rule 40 (term)
    PARENR  reduce using rule 40 (term)


State 176

   36 term: INTEGER •

    COMMA   reduce using rule 36 (term)
    PARENR  reduce using rule 36 (term)


State 177

   37 term: DECIMAL •

    COMMA   reduce using rule 37 (term)
    PARENR  reduce using rule 37 (term)


State 178

   41 term: PARENL • expression PARENR

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 209
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 179

   27 var_dec: TYPE ID SEMIC •

    ID       reduce using rule 27 (var_dec)
    TYPE     reduce using rule 27 (var_dec)
    STRING   reduce using rule 27 (var_dec)
    CHAR     reduce using rule 27 (var_dec)
    EMPTY    reduce using rule 27 (var_dec)
    INTEGER  reduce using rule 27 (var_dec)
    DECIMAL  reduce using rule 27 (var_dec)
    NEG      reduce using rule 27 (var_dec)
    IF       reduce using rule 27 (var_dec)
    FOR      reduce using rule 27 (var_dec)
    READ     reduce using rule 27 (var_dec)
    WRITE    reduce using rule 27 (var_dec)
    WRITELN  reduce using rule 27 (var_dec)
    RETURN   reduce using rule 27 (var_dec)
    ISTYPE   reduce using rule 27 (var_dec)
    ADDSET   reduce using rule 27 (var_dec)
    REMOVE   reduce using rule 27 (var_dec)
    EXISTS   reduce using rule 27 (var_dec)
    FORALL   reduce using rule 27 (var_dec)
    ENDFUNC  reduce using rule 27 (var_dec)
    PARENL   reduce using rule 27 (var_dec)


State 180

   35 term: ID •

    ADD        reduce using rule 35 (term)
    SUB        reduce using rule 35 (term)
    MULT       reduce using rule 35 (term)
    DIV        reduce using rule 35 (term)
    OR         reduce using rule 35 (term)
    AND        reduce using rule 35 (term)
    SMALLER    reduce using rule 35 (term)
    GREATER    reduce using rule 35 (term)
    SMALLEQ    reduce using rule 35 (term)
    GREATEQ    reduce using rule 35 (term)
    EQUALS     reduce using rule 35 (term)
    DIFFERENT  reduce using rule 35 (term)
    IN         reduce using rule 35 (term)
    PARENR     reduce using rule 35 (term)


State 181

   35 term: ID •

    IN  reduce using rule 35 (term)


State 182

   39 term: STRING •

    IN  reduce using rule 39 (term)


State 183

   38 term: CHAR •

    IN  reduce using rule 38 (term)


State 184

   40 term: EMPTY •

    IN  reduce using rule 40 (term)


State 185

   36 term: INTEGER •

    IN  reduce using rule 36 (term)


State 186

   37 term: DECIMAL •

    IN  reduce using rule 37 (term)


State 187

   41 term: PARENL • expression PARENR

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 210
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 188

   63 in_set: term IN • expression

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 211
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 189

   67 assign_value: ID ASSIGN • expression

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 212
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 190

   62 func_call: ID PARENL • args_list PARENR

    ID       shift, and go to state 95
    STRING   shift, and go to state 173
    CHAR     shift, and go to state 174
    EMPTY    shift, and go to state 175
    INTEGER  shift, and go to state 176
    DECIMAL  shift, and go to state 177
    PARENL   shift, and go to state 178

    COMMA   reduce using rule 66 (args_list)
    PARENR  reduce using rule 66 (args_list)

    term       go to state 96
    args_list  go to state 213


State 191

   61 operation: NEG expression •

    PARENR  reduce using rule 61 (operation)


State 192

   52 operation: ISTYPE PARENL • expression PARENR

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 214
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 193

   47 set_op: ADDSET PARENL • in_set PARENR

    ID       shift, and go to state 181
    STRING   shift, and go to state 182
    CHAR     shift, and go to state 183
    EMPTY    shift, and go to state 184
    INTEGER  shift, and go to state 185
    DECIMAL  shift, and go to state 186
    PARENL   shift, and go to state 187

    term    go to state 105
    in_set  go to state 215


State 194

   48 set_op: REMOVE PARENL • in_set PARENR

    ID       shift, and go to state 181
    STRING   shift, and go to state 182
    CHAR     shift, and go to state 183
    EMPTY    shift, and go to state 184
    INTEGER  shift, and go to state 185
    DECIMAL  shift, and go to state 186
    PARENL   shift, and go to state 187

    term    go to state 105
    in_set  go to state 216


State 195

   49 set_op: EXISTS PARENL • in_set PARENR

    ID       shift, and go to state 181
    STRING   shift, and go to state 182
    CHAR     shift, and go to state 183
    EMPTY    shift, and go to state 184
    INTEGER  shift, and go to state 185
    DECIMAL  shift, and go to state 186
    PARENL   shift, and go to state 187

    term    go to state 105
    in_set  go to state 217


State 196

   41 term: PARENL expression • PARENR

    PARENR  shift, and go to state 218


State 197

   44 math_op: term ADD • expression

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 219
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 198

   45 math_op: term SUB • expression

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 220
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 199

   43 math_op: term MULT • expression

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 221
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 200

   42 math_op: term DIV • expression

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 222
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 201

   59 operation: term OR • expression

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 223
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 202

   60 operation: term AND • expression

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 224
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 203

   53 operation: term SMALLER • expression

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 225
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 204

   54 operation: term GREATER • expression

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 226
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 205

   55 operation: term SMALLEQ • expression

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 227
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 206

   56 operation: term GREATEQ • expression

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 228
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 207

   57 operation: term EQUALS • expression

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 229
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 208

   58 operation: term DIFFERENT • expression

    ID       shift, and go to state 154
    STRING   shift, and go to state 155
    CHAR     shift, and go to state 156
    EMPTY    shift, and go to state 157
    INTEGER  shift, and go to state 158
    DECIMAL  shift, and go to state 159
    NEG      shift, and go to state 160
    ISTYPE   shift, and go to state 161
    ADDSET   shift, and go to state 162
    REMOVE   shift, and go to state 163
    EXISTS   shift, and go to state 164
    PARENL   shift, and go to state 165

    expression    go to state 230
    term          go to state 166
    math_op       go to state 167
    set_op        go to state 168
    operation     go to state 169
    func_call     go to state 170
    in_set        go to state 171
    assign_value  go to state 172


State 209

   41 term: PARENL expression • PARENR

    PARENR  shift, and go to state 231


State 210

   41 term: PARENL expression • PARENR

    PARENR  shift, and go to state 232


State 211

   63 in_set: term IN expression •

    PARENR  reduce using rule 63 (in_set)


State 212

   67 assign_value: ID ASSIGN expression •

    PARENR  reduce using rule 67 (assign_value)


State 213

   62 func_call: ID PARENL args_list • PARENR
   64 args_list: args_list • COMMA term

    COMMA   shift, and go to state 124
    PARENR  shift, and go to state 233


State 214

   52 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 234


State 215

   47 set_op: ADDSET PARENL in_set • PARENR

    PARENR  shift, and go to state 235


State 216

   48 set_op: REMOVE PARENL in_set • PARENR

    PARENR  shift, and go to state 236


State 217

   49 set_op: EXISTS PARENL in_set • PARENR

    PARENR  shift, and go to state 237


State 218

   41 term: PARENL expression PARENR •

    ADD        reduce using rule 41 (term)
    SUB        reduce using rule 41 (term)
    MULT       reduce using rule 41 (term)
    DIV        reduce using rule 41 (term)
    OR         reduce using rule 41 (term)
    AND        reduce using rule 41 (term)
    SMALLER    reduce using rule 41 (term)
    GREATER    reduce using rule 41 (term)
    SMALLEQ    reduce using rule 41 (term)
    GREATEQ    reduce using rule 41 (term)
    EQUALS     reduce using rule 41 (term)
    DIFFERENT  reduce using rule 41 (term)
    IN         reduce using rule 41 (term)
    PARENR     reduce using rule 41 (term)


State 219

   44 math_op: term ADD expression •

    PARENR  reduce using rule 44 (math_op)


State 220

   45 math_op: term SUB expression •

    PARENR  reduce using rule 45 (math_op)


State 221

   43 math_op: term MULT expression •

    PARENR  reduce using rule 43 (math_op)


State 222

   42 math_op: term DIV expression •

    PARENR  reduce using rule 42 (math_op)


State 223

   59 operation: term OR expression •

    PARENR  reduce using rule 59 (operation)


State 224

   60 operation: term AND expression •

    PARENR  reduce using rule 60 (operation)


State 225

   53 operation: term SMALLER expression •

    PARENR  reduce using rule 53 (operation)


State 226

   54 operation: term GREATER expression •

    PARENR  reduce using rule 54 (operation)


State 227

   55 operation: term SMALLEQ expression •

    PARENR  reduce using rule 55 (operation)


State 228

   56 operation: term GREATEQ expression •

    PARENR  reduce using rule 56 (operation)


State 229

   57 operation: term EQUALS expression •

    PARENR  reduce using rule 57 (operation)


State 230

   58 operation: term DIFFERENT expression •

    PARENR  reduce using rule 58 (operation)


State 231

   41 term: PARENL expression PARENR •

    COMMA   reduce using rule 41 (term)
    PARENR  reduce using rule 41 (term)


State 232

   41 term: PARENL expression PARENR •

    IN  reduce using rule 41 (term)


State 233

   62 func_call: ID PARENL args_list PARENR •

    PARENR  reduce using rule 62 (func_call)


State 234

   52 operation: ISTYPE PARENL expression PARENR •

    PARENR  reduce using rule 52 (operation)


State 235

   47 set_op: ADDSET PARENL in_set PARENR •

    PARENR  reduce using rule 47 (set_op)


State 236

   48 set_op: REMOVE PARENL in_set PARENR •

    PARENR  reduce using rule 48 (set_op)


State 237

   49 set_op: EXISTS PARENL in_set PARENR •

    PARENR  reduce using rule 49 (set_op)
