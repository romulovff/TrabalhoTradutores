Grammar

    0 $accept: program $end

    1 program: declarations_list

    2 declarations_list: declarations_list declaration
    3                  | declaration
    4                  | error

    5 declaration: var_dec
    6            | func_dec

    7 $@1: %empty

    8 $@2: %empty

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC

   10 $@3: %empty

   11 $@4: %empty

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC

   13 params_list: params_list COMMA parameter
   14            | parameter
   15            | %empty
   16            | error

   17 parameter: TYPE ID

   18 statement_list: statement_list statement
   19               | %empty
   20               | error

   21 statement: expression_statement
   22          | ret_st
   23          | var_dec
   24          | io_ops
   25          | basic_ops

   26 expression_statement: expression SEMIC

   27 basic_ops: if_ops
   28          | FOR PARENL for_body PARENR STFUNC statement_list ENDFUNC
   29          | FORALL PARENL in_set PARENR set_op SEMIC
   30          | FORALL PARENL in_set PARENR STFUNC statement_list ENDFUNC

   31 for_body: expression_statement expression_statement expression
   32         | SEMIC expression_statement expression

   33 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC
   34       | IF PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

   35 ret_st: RETURN expression SEMIC

   36 var_dec: TYPE ID SEMIC

   37 io_ops: READ PARENL PARENR SEMIC
   38       | READ PARENL expression PARENR SEMIC
   39       | WRITE PARENL expression PARENR SEMIC
   40       | WRITELN PARENL expression PARENR SEMIC

   41 expression: set_op
   42           | operation
   43           | func_call
   44           | assign_value

   45 term: ID
   46     | INTEGER
   47     | DECIMAL
   48     | CHAR
   49     | STRING
   50     | EMPTY
   51     | PARENL expression PARENR

   52 math_op: term DIV expression
   53        | term MULT expression
   54        | term ADD expression
   55        | term SUB expression
   56        | term

   57 set_op: ADDSET PARENL in_set PARENR
   58       | REMOVE PARENL in_set PARENR
   59       | EXISTS PARENL in_set PARENR

   60 operation: math_op
   61          | in_set
   62          | ISTYPE PARENL expression PARENR
   63          | term SMALLER expression
   64          | term GREATER expression
   65          | term SMALLEQ expression
   66          | term GREATEQ expression
   67          | term EQUALS expression
   68          | term DIFFERENT expression
   69          | term OR expression
   70          | term AND expression
   71          | NEG expression

   72 func_call: ID PARENL args_list PARENR

   73 in_set: term IN expression

   74 args_list: args_list COMMA term
   75          | term
   76          | %empty

   77 assign_value: ID ASSIGN expression


Terminals, with rules where they appear

    $end (0) 0
    error <tree_node> (256) 4 16 20
    ID <str> (258) 9 17 36 45 72 77
    TYPE <str> (259) 9 12 17 36
    STRING <str> (260) 49
    CHAR <str> (261) 48
    EMPTY <str> (262) 50
    MAIN <str> (263) 12
    INTEGER <integer> (264) 46
    DECIMAL <dec> (265) 47
    ADD <str> (266) 54
    SUB <str> (267) 55
    MULT <str> (268) 53
    DIV <str> (269) 52
    OR <str> (270) 69
    AND <str> (271) 70
    SMALLER <str> (272) 63
    GREATER <str> (273) 64
    SMALLEQ <str> (274) 65
    GREATEQ <str> (275) 66
    EQUALS <str> (276) 67
    DIFFERENT <str> (277) 68
    ASSIGN <str> (278) 77
    NEG <str> (279) 71
    IF <str> (280) 33 34
    ELSE <str> (281) 34
    FOR <str> (282) 28
    READ <str> (283) 37 38
    WRITE <str> (284) 39
    WRITELN <str> (285) 40
    RETURN <str> (286) 35
    IN <str> (287) 73
    ISTYPE <str> (288) 62
    ADDSET <str> (289) 57
    REMOVE <str> (290) 58
    EXISTS <str> (291) 59
    FORALL <str> (292) 29 30
    COMMA <str> (293) 13 74
    STFUNC <str> (294) 9 12 28 30 33 34
    ENDFUNC <str> (295) 9 12 28 30 33 34
    PARENL <str> (296) 9 12 28 29 30 33 34 37 38 39 40 51 57 58 59 62 72
    PARENR <str> (297) 9 12 28 29 30 33 34 37 38 39 40 51 57 58 59 62 72
    SEMIC <str> (298) 26 29 32 35 36 37 38 39 40


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program <tree_node> (45)
        on left: 1
        on right: 0
    declarations_list <tree_node> (46)
        on left: 2 3 4
        on right: 1 2
    declaration <tree_node> (47)
        on left: 5 6
        on right: 2 3
    func_dec <tree_node> (48)
        on left: 9 12
        on right: 6
    $@1 (49)
        on left: 7
        on right: 9
    $@2 (50)
        on left: 8
        on right: 9
    $@3 (51)
        on left: 10
        on right: 12
    $@4 (52)
        on left: 11
        on right: 12
    params_list <tree_node> (53)
        on left: 13 14 15 16
        on right: 9 12 13
    parameter <tree_node> (54)
        on left: 17
        on right: 13 14
    statement_list <tree_node> (55)
        on left: 18 19 20
        on right: 9 12 18 28 30 33 34
    statement <tree_node> (56)
        on left: 21 22 23 24 25
        on right: 18
    expression_statement <tree_node> (57)
        on left: 26
        on right: 21 31 32
    basic_ops <tree_node> (58)
        on left: 27 28 29 30
        on right: 25
    for_body <tree_node> (59)
        on left: 31 32
        on right: 28
    if_ops <tree_node> (60)
        on left: 33 34
        on right: 27
    ret_st <tree_node> (61)
        on left: 35
        on right: 22
    var_dec <tree_node> (62)
        on left: 36
        on right: 5 23
    io_ops <tree_node> (63)
        on left: 37 38 39 40
        on right: 24
    expression <tree_node> (64)
        on left: 41 42 43 44
        on right: 26 31 32 35 38 39 40 51 52 53 54 55 62 63 64 65 66 67 68 69 70 71 73 77
    term <tree_node> (65)
        on left: 45 46 47 48 49 50 51
        on right: 52 53 54 55 56 63 64 65 66 67 68 69 70 73 74 75
    math_op <tree_node> (66)
        on left: 52 53 54 55 56
        on right: 60
    set_op <tree_node> (67)
        on left: 57 58 59
        on right: 29 41
    operation <tree_node> (68)
        on left: 60 61 62 63 64 65 66 67 68 69 70 71
        on right: 33 34 42
    func_call <tree_node> (69)
        on left: 72
        on right: 43
    in_set <tree_node> (70)
        on left: 73
        on right: 29 30 57 58 59 61
    args_list <tree_node> (71)
        on left: 74 75 76
        on right: 72 74
    assign_value <tree_node> (72)
        on left: 77
        on right: 44


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    program            go to state 3
    declarations_list  go to state 4
    declaration        go to state 5
    func_dec           go to state 6
    var_dec            go to state 7


State 1

    4 declarations_list: error •

    $end  reduce using rule 4 (declarations_list)
    TYPE  reduce using rule 4 (declarations_list)


State 2

    9 func_dec: TYPE • ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC
   12         | TYPE • MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC
   36 var_dec: TYPE • ID SEMIC

    ID    shift, and go to state 8
    MAIN  shift, and go to state 9


State 3

    0 $accept: program • $end

    $end  shift, and go to state 10


State 4

    1 program: declarations_list •
    2 declarations_list: declarations_list • declaration

    TYPE  shift, and go to state 2

    $end  reduce using rule 1 (program)

    declaration  go to state 11
    func_dec     go to state 6
    var_dec      go to state 7


State 5

    3 declarations_list: declaration •

    $end  reduce using rule 3 (declarations_list)
    TYPE  reduce using rule 3 (declarations_list)


State 6

    6 declaration: func_dec •

    $end  reduce using rule 6 (declaration)
    TYPE  reduce using rule 6 (declaration)


State 7

    5 declaration: var_dec •

    $end  reduce using rule 5 (declaration)
    TYPE  reduce using rule 5 (declaration)


State 8

    9 func_dec: TYPE ID • PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC
   36 var_dec: TYPE ID • SEMIC

    PARENL  shift, and go to state 12
    SEMIC   shift, and go to state 13


State 9

   12 func_dec: TYPE MAIN • PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC

    PARENL  shift, and go to state 14


State 10

    0 $accept: program $end •

    $default  accept


State 11

    2 declarations_list: declarations_list declaration •

    $end  reduce using rule 2 (declarations_list)
    TYPE  reduce using rule 2 (declarations_list)


State 12

    9 func_dec: TYPE ID PARENL • $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC

    error   reduce using rule 7 ($@1)
    TYPE    reduce using rule 7 ($@1)
    COMMA   reduce using rule 7 ($@1)
    PARENR  reduce using rule 7 ($@1)

    $@1  go to state 15


State 13

   36 var_dec: TYPE ID SEMIC •

    $end  reduce using rule 36 (var_dec)
    TYPE  reduce using rule 36 (var_dec)


State 14

   12 func_dec: TYPE MAIN PARENL • $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC

    error   reduce using rule 10 ($@3)
    TYPE    reduce using rule 10 ($@3)
    COMMA   reduce using rule 10 ($@3)
    PARENR  reduce using rule 10 ($@3)

    $@3  go to state 16


State 15

    9 func_dec: TYPE ID PARENL $@1 • params_list PARENR STFUNC $@2 statement_list ENDFUNC

    error  shift, and go to state 17
    TYPE   shift, and go to state 18

    COMMA   reduce using rule 15 (params_list)
    PARENR  reduce using rule 15 (params_list)

    params_list  go to state 19
    parameter    go to state 20


State 16

   12 func_dec: TYPE MAIN PARENL $@3 • params_list PARENR STFUNC $@4 statement_list ENDFUNC

    error  shift, and go to state 17
    TYPE   shift, and go to state 18

    COMMA   reduce using rule 15 (params_list)
    PARENR  reduce using rule 15 (params_list)

    params_list  go to state 21
    parameter    go to state 20


State 17

   16 params_list: error •

    COMMA   reduce using rule 16 (params_list)
    PARENR  reduce using rule 16 (params_list)


State 18

   17 parameter: TYPE • ID

    ID  shift, and go to state 22


State 19

    9 func_dec: TYPE ID PARENL $@1 params_list • PARENR STFUNC $@2 statement_list ENDFUNC
   13 params_list: params_list • COMMA parameter

    COMMA   shift, and go to state 23
    PARENR  shift, and go to state 24


State 20

   14 params_list: parameter •

    COMMA   reduce using rule 14 (params_list)
    PARENR  reduce using rule 14 (params_list)


State 21

   12 func_dec: TYPE MAIN PARENL $@3 params_list • PARENR STFUNC $@4 statement_list ENDFUNC
   13 params_list: params_list • COMMA parameter

    COMMA   shift, and go to state 23
    PARENR  shift, and go to state 25


State 22

   17 parameter: TYPE ID •

    COMMA   reduce using rule 17 (parameter)
    PARENR  reduce using rule 17 (parameter)


State 23

   13 params_list: params_list COMMA • parameter

    TYPE  shift, and go to state 18

    parameter  go to state 26


State 24

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR • STFUNC $@2 statement_list ENDFUNC

    STFUNC  shift, and go to state 27


State 25

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR • STFUNC $@4 statement_list ENDFUNC

    STFUNC  shift, and go to state 28


State 26

   13 params_list: params_list COMMA parameter •

    COMMA   reduce using rule 13 (params_list)
    PARENR  reduce using rule 13 (params_list)


State 27

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC • $@2 statement_list ENDFUNC

    error    reduce using rule 8 ($@2)
    ID       reduce using rule 8 ($@2)
    TYPE     reduce using rule 8 ($@2)
    STRING   reduce using rule 8 ($@2)
    CHAR     reduce using rule 8 ($@2)
    EMPTY    reduce using rule 8 ($@2)
    INTEGER  reduce using rule 8 ($@2)
    DECIMAL  reduce using rule 8 ($@2)
    NEG      reduce using rule 8 ($@2)
    IF       reduce using rule 8 ($@2)
    FOR      reduce using rule 8 ($@2)
    READ     reduce using rule 8 ($@2)
    WRITE    reduce using rule 8 ($@2)
    WRITELN  reduce using rule 8 ($@2)
    RETURN   reduce using rule 8 ($@2)
    ISTYPE   reduce using rule 8 ($@2)
    ADDSET   reduce using rule 8 ($@2)
    REMOVE   reduce using rule 8 ($@2)
    EXISTS   reduce using rule 8 ($@2)
    FORALL   reduce using rule 8 ($@2)
    ENDFUNC  reduce using rule 8 ($@2)
    PARENL   reduce using rule 8 ($@2)

    $@2  go to state 29


State 28

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC • $@4 statement_list ENDFUNC

    error    reduce using rule 11 ($@4)
    ID       reduce using rule 11 ($@4)
    TYPE     reduce using rule 11 ($@4)
    STRING   reduce using rule 11 ($@4)
    CHAR     reduce using rule 11 ($@4)
    EMPTY    reduce using rule 11 ($@4)
    INTEGER  reduce using rule 11 ($@4)
    DECIMAL  reduce using rule 11 ($@4)
    NEG      reduce using rule 11 ($@4)
    IF       reduce using rule 11 ($@4)
    FOR      reduce using rule 11 ($@4)
    READ     reduce using rule 11 ($@4)
    WRITE    reduce using rule 11 ($@4)
    WRITELN  reduce using rule 11 ($@4)
    RETURN   reduce using rule 11 ($@4)
    ISTYPE   reduce using rule 11 ($@4)
    ADDSET   reduce using rule 11 ($@4)
    REMOVE   reduce using rule 11 ($@4)
    EXISTS   reduce using rule 11 ($@4)
    FORALL   reduce using rule 11 ($@4)
    ENDFUNC  reduce using rule 11 ($@4)
    PARENL   reduce using rule 11 ($@4)

    $@4  go to state 30


State 29

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 • statement_list ENDFUNC

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 32


State 30

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 • statement_list ENDFUNC

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 33


State 31

   20 statement_list: error •

    ID       reduce using rule 20 (statement_list)
    TYPE     reduce using rule 20 (statement_list)
    STRING   reduce using rule 20 (statement_list)
    CHAR     reduce using rule 20 (statement_list)
    EMPTY    reduce using rule 20 (statement_list)
    INTEGER  reduce using rule 20 (statement_list)
    DECIMAL  reduce using rule 20 (statement_list)
    NEG      reduce using rule 20 (statement_list)
    IF       reduce using rule 20 (statement_list)
    FOR      reduce using rule 20 (statement_list)
    READ     reduce using rule 20 (statement_list)
    WRITE    reduce using rule 20 (statement_list)
    WRITELN  reduce using rule 20 (statement_list)
    RETURN   reduce using rule 20 (statement_list)
    ISTYPE   reduce using rule 20 (statement_list)
    ADDSET   reduce using rule 20 (statement_list)
    REMOVE   reduce using rule 20 (statement_list)
    EXISTS   reduce using rule 20 (statement_list)
    FORALL   reduce using rule 20 (statement_list)
    ENDFUNC  reduce using rule 20 (statement_list)
    PARENL   reduce using rule 20 (statement_list)


State 32

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list • ENDFUNC
   18 statement_list: statement_list • statement

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 53
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    if_ops                go to state 58
    ret_st                go to state 59
    var_dec               go to state 60
    io_ops                go to state 61
    expression            go to state 62
    term                  go to state 63
    math_op               go to state 64
    set_op                go to state 65
    operation             go to state 66
    func_call             go to state 67
    in_set                go to state 68
    assign_value          go to state 69


State 33

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list • ENDFUNC
   18 statement_list: statement_list • statement

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 70
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    if_ops                go to state 58
    ret_st                go to state 59
    var_dec               go to state 60
    io_ops                go to state 61
    expression            go to state 62
    term                  go to state 63
    math_op               go to state 64
    set_op                go to state 65
    operation             go to state 66
    func_call             go to state 67
    in_set                go to state 68
    assign_value          go to state 69


State 34

   45 term: ID •
   72 func_call: ID • PARENL args_list PARENR
   77 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 71
    PARENL  shift, and go to state 72

    ADD        reduce using rule 45 (term)
    SUB        reduce using rule 45 (term)
    MULT       reduce using rule 45 (term)
    DIV        reduce using rule 45 (term)
    OR         reduce using rule 45 (term)
    AND        reduce using rule 45 (term)
    SMALLER    reduce using rule 45 (term)
    GREATER    reduce using rule 45 (term)
    SMALLEQ    reduce using rule 45 (term)
    GREATEQ    reduce using rule 45 (term)
    EQUALS     reduce using rule 45 (term)
    DIFFERENT  reduce using rule 45 (term)
    IN         reduce using rule 45 (term)
    SEMIC      reduce using rule 45 (term)


State 35

   36 var_dec: TYPE • ID SEMIC

    ID  shift, and go to state 73


State 36

   49 term: STRING •

    ADD        reduce using rule 49 (term)
    SUB        reduce using rule 49 (term)
    MULT       reduce using rule 49 (term)
    DIV        reduce using rule 49 (term)
    OR         reduce using rule 49 (term)
    AND        reduce using rule 49 (term)
    SMALLER    reduce using rule 49 (term)
    GREATER    reduce using rule 49 (term)
    SMALLEQ    reduce using rule 49 (term)
    GREATEQ    reduce using rule 49 (term)
    EQUALS     reduce using rule 49 (term)
    DIFFERENT  reduce using rule 49 (term)
    IN         reduce using rule 49 (term)
    SEMIC      reduce using rule 49 (term)


State 37

   48 term: CHAR •

    ADD        reduce using rule 48 (term)
    SUB        reduce using rule 48 (term)
    MULT       reduce using rule 48 (term)
    DIV        reduce using rule 48 (term)
    OR         reduce using rule 48 (term)
    AND        reduce using rule 48 (term)
    SMALLER    reduce using rule 48 (term)
    GREATER    reduce using rule 48 (term)
    SMALLEQ    reduce using rule 48 (term)
    GREATEQ    reduce using rule 48 (term)
    EQUALS     reduce using rule 48 (term)
    DIFFERENT  reduce using rule 48 (term)
    IN         reduce using rule 48 (term)
    SEMIC      reduce using rule 48 (term)


State 38

   50 term: EMPTY •

    ADD        reduce using rule 50 (term)
    SUB        reduce using rule 50 (term)
    MULT       reduce using rule 50 (term)
    DIV        reduce using rule 50 (term)
    OR         reduce using rule 50 (term)
    AND        reduce using rule 50 (term)
    SMALLER    reduce using rule 50 (term)
    GREATER    reduce using rule 50 (term)
    SMALLEQ    reduce using rule 50 (term)
    GREATEQ    reduce using rule 50 (term)
    EQUALS     reduce using rule 50 (term)
    DIFFERENT  reduce using rule 50 (term)
    IN         reduce using rule 50 (term)
    SEMIC      reduce using rule 50 (term)


State 39

   46 term: INTEGER •

    ADD        reduce using rule 46 (term)
    SUB        reduce using rule 46 (term)
    MULT       reduce using rule 46 (term)
    DIV        reduce using rule 46 (term)
    OR         reduce using rule 46 (term)
    AND        reduce using rule 46 (term)
    SMALLER    reduce using rule 46 (term)
    GREATER    reduce using rule 46 (term)
    SMALLEQ    reduce using rule 46 (term)
    GREATEQ    reduce using rule 46 (term)
    EQUALS     reduce using rule 46 (term)
    DIFFERENT  reduce using rule 46 (term)
    IN         reduce using rule 46 (term)
    SEMIC      reduce using rule 46 (term)


State 40

   47 term: DECIMAL •

    ADD        reduce using rule 47 (term)
    SUB        reduce using rule 47 (term)
    MULT       reduce using rule 47 (term)
    DIV        reduce using rule 47 (term)
    OR         reduce using rule 47 (term)
    AND        reduce using rule 47 (term)
    SMALLER    reduce using rule 47 (term)
    GREATER    reduce using rule 47 (term)
    SMALLEQ    reduce using rule 47 (term)
    GREATEQ    reduce using rule 47 (term)
    EQUALS     reduce using rule 47 (term)
    DIFFERENT  reduce using rule 47 (term)
    IN         reduce using rule 47 (term)
    SEMIC      reduce using rule 47 (term)


State 41

   71 operation: NEG • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 74
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 42

   33 if_ops: IF • PARENL operation PARENR STFUNC statement_list ENDFUNC
   34       | IF • PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    PARENL  shift, and go to state 75


State 43

   28 basic_ops: FOR • PARENL for_body PARENR STFUNC statement_list ENDFUNC

    PARENL  shift, and go to state 76


State 44

   37 io_ops: READ • PARENL PARENR SEMIC
   38       | READ • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 77


State 45

   39 io_ops: WRITE • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 78


State 46

   40 io_ops: WRITELN • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 79


State 47

   35 ret_st: RETURN • expression SEMIC

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 80
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 48

   62 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 81


State 49

   57 set_op: ADDSET • PARENL in_set PARENR

    PARENL  shift, and go to state 82


State 50

   58 set_op: REMOVE • PARENL in_set PARENR

    PARENL  shift, and go to state 83


State 51

   59 set_op: EXISTS • PARENL in_set PARENR

    PARENL  shift, and go to state 84


State 52

   29 basic_ops: FORALL • PARENL in_set PARENR set_op SEMIC
   30          | FORALL • PARENL in_set PARENR STFUNC statement_list ENDFUNC

    PARENL  shift, and go to state 85


State 53

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC •

    $end  reduce using rule 9 (func_dec)
    TYPE  reduce using rule 9 (func_dec)


State 54

   51 term: PARENL • expression PARENR

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 86
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 55

   18 statement_list: statement_list statement •

    ID       reduce using rule 18 (statement_list)
    TYPE     reduce using rule 18 (statement_list)
    STRING   reduce using rule 18 (statement_list)
    CHAR     reduce using rule 18 (statement_list)
    EMPTY    reduce using rule 18 (statement_list)
    INTEGER  reduce using rule 18 (statement_list)
    DECIMAL  reduce using rule 18 (statement_list)
    NEG      reduce using rule 18 (statement_list)
    IF       reduce using rule 18 (statement_list)
    FOR      reduce using rule 18 (statement_list)
    READ     reduce using rule 18 (statement_list)
    WRITE    reduce using rule 18 (statement_list)
    WRITELN  reduce using rule 18 (statement_list)
    RETURN   reduce using rule 18 (statement_list)
    ISTYPE   reduce using rule 18 (statement_list)
    ADDSET   reduce using rule 18 (statement_list)
    REMOVE   reduce using rule 18 (statement_list)
    EXISTS   reduce using rule 18 (statement_list)
    FORALL   reduce using rule 18 (statement_list)
    ENDFUNC  reduce using rule 18 (statement_list)
    PARENL   reduce using rule 18 (statement_list)


State 56

   21 statement: expression_statement •

    ID       reduce using rule 21 (statement)
    TYPE     reduce using rule 21 (statement)
    STRING   reduce using rule 21 (statement)
    CHAR     reduce using rule 21 (statement)
    EMPTY    reduce using rule 21 (statement)
    INTEGER  reduce using rule 21 (statement)
    DECIMAL  reduce using rule 21 (statement)
    NEG      reduce using rule 21 (statement)
    IF       reduce using rule 21 (statement)
    FOR      reduce using rule 21 (statement)
    READ     reduce using rule 21 (statement)
    WRITE    reduce using rule 21 (statement)
    WRITELN  reduce using rule 21 (statement)
    RETURN   reduce using rule 21 (statement)
    ISTYPE   reduce using rule 21 (statement)
    ADDSET   reduce using rule 21 (statement)
    REMOVE   reduce using rule 21 (statement)
    EXISTS   reduce using rule 21 (statement)
    FORALL   reduce using rule 21 (statement)
    ENDFUNC  reduce using rule 21 (statement)
    PARENL   reduce using rule 21 (statement)


State 57

   25 statement: basic_ops •

    ID       reduce using rule 25 (statement)
    TYPE     reduce using rule 25 (statement)
    STRING   reduce using rule 25 (statement)
    CHAR     reduce using rule 25 (statement)
    EMPTY    reduce using rule 25 (statement)
    INTEGER  reduce using rule 25 (statement)
    DECIMAL  reduce using rule 25 (statement)
    NEG      reduce using rule 25 (statement)
    IF       reduce using rule 25 (statement)
    FOR      reduce using rule 25 (statement)
    READ     reduce using rule 25 (statement)
    WRITE    reduce using rule 25 (statement)
    WRITELN  reduce using rule 25 (statement)
    RETURN   reduce using rule 25 (statement)
    ISTYPE   reduce using rule 25 (statement)
    ADDSET   reduce using rule 25 (statement)
    REMOVE   reduce using rule 25 (statement)
    EXISTS   reduce using rule 25 (statement)
    FORALL   reduce using rule 25 (statement)
    ENDFUNC  reduce using rule 25 (statement)
    PARENL   reduce using rule 25 (statement)


State 58

   27 basic_ops: if_ops •

    ID       reduce using rule 27 (basic_ops)
    TYPE     reduce using rule 27 (basic_ops)
    STRING   reduce using rule 27 (basic_ops)
    CHAR     reduce using rule 27 (basic_ops)
    EMPTY    reduce using rule 27 (basic_ops)
    INTEGER  reduce using rule 27 (basic_ops)
    DECIMAL  reduce using rule 27 (basic_ops)
    NEG      reduce using rule 27 (basic_ops)
    IF       reduce using rule 27 (basic_ops)
    FOR      reduce using rule 27 (basic_ops)
    READ     reduce using rule 27 (basic_ops)
    WRITE    reduce using rule 27 (basic_ops)
    WRITELN  reduce using rule 27 (basic_ops)
    RETURN   reduce using rule 27 (basic_ops)
    ISTYPE   reduce using rule 27 (basic_ops)
    ADDSET   reduce using rule 27 (basic_ops)
    REMOVE   reduce using rule 27 (basic_ops)
    EXISTS   reduce using rule 27 (basic_ops)
    FORALL   reduce using rule 27 (basic_ops)
    ENDFUNC  reduce using rule 27 (basic_ops)
    PARENL   reduce using rule 27 (basic_ops)


State 59

   22 statement: ret_st •

    ID       reduce using rule 22 (statement)
    TYPE     reduce using rule 22 (statement)
    STRING   reduce using rule 22 (statement)
    CHAR     reduce using rule 22 (statement)
    EMPTY    reduce using rule 22 (statement)
    INTEGER  reduce using rule 22 (statement)
    DECIMAL  reduce using rule 22 (statement)
    NEG      reduce using rule 22 (statement)
    IF       reduce using rule 22 (statement)
    FOR      reduce using rule 22 (statement)
    READ     reduce using rule 22 (statement)
    WRITE    reduce using rule 22 (statement)
    WRITELN  reduce using rule 22 (statement)
    RETURN   reduce using rule 22 (statement)
    ISTYPE   reduce using rule 22 (statement)
    ADDSET   reduce using rule 22 (statement)
    REMOVE   reduce using rule 22 (statement)
    EXISTS   reduce using rule 22 (statement)
    FORALL   reduce using rule 22 (statement)
    ENDFUNC  reduce using rule 22 (statement)
    PARENL   reduce using rule 22 (statement)


State 60

   23 statement: var_dec •

    ID       reduce using rule 23 (statement)
    TYPE     reduce using rule 23 (statement)
    STRING   reduce using rule 23 (statement)
    CHAR     reduce using rule 23 (statement)
    EMPTY    reduce using rule 23 (statement)
    INTEGER  reduce using rule 23 (statement)
    DECIMAL  reduce using rule 23 (statement)
    NEG      reduce using rule 23 (statement)
    IF       reduce using rule 23 (statement)
    FOR      reduce using rule 23 (statement)
    READ     reduce using rule 23 (statement)
    WRITE    reduce using rule 23 (statement)
    WRITELN  reduce using rule 23 (statement)
    RETURN   reduce using rule 23 (statement)
    ISTYPE   reduce using rule 23 (statement)
    ADDSET   reduce using rule 23 (statement)
    REMOVE   reduce using rule 23 (statement)
    EXISTS   reduce using rule 23 (statement)
    FORALL   reduce using rule 23 (statement)
    ENDFUNC  reduce using rule 23 (statement)
    PARENL   reduce using rule 23 (statement)


State 61

   24 statement: io_ops •

    ID       reduce using rule 24 (statement)
    TYPE     reduce using rule 24 (statement)
    STRING   reduce using rule 24 (statement)
    CHAR     reduce using rule 24 (statement)
    EMPTY    reduce using rule 24 (statement)
    INTEGER  reduce using rule 24 (statement)
    DECIMAL  reduce using rule 24 (statement)
    NEG      reduce using rule 24 (statement)
    IF       reduce using rule 24 (statement)
    FOR      reduce using rule 24 (statement)
    READ     reduce using rule 24 (statement)
    WRITE    reduce using rule 24 (statement)
    WRITELN  reduce using rule 24 (statement)
    RETURN   reduce using rule 24 (statement)
    ISTYPE   reduce using rule 24 (statement)
    ADDSET   reduce using rule 24 (statement)
    REMOVE   reduce using rule 24 (statement)
    EXISTS   reduce using rule 24 (statement)
    FORALL   reduce using rule 24 (statement)
    ENDFUNC  reduce using rule 24 (statement)
    PARENL   reduce using rule 24 (statement)


State 62

   26 expression_statement: expression • SEMIC

    SEMIC  shift, and go to state 87


State 63

   52 math_op: term • DIV expression
   53        | term • MULT expression
   54        | term • ADD expression
   55        | term • SUB expression
   56        | term •
   63 operation: term • SMALLER expression
   64          | term • GREATER expression
   65          | term • SMALLEQ expression
   66          | term • GREATEQ expression
   67          | term • EQUALS expression
   68          | term • DIFFERENT expression
   69          | term • OR expression
   70          | term • AND expression
   73 in_set: term • IN expression

    ADD        shift, and go to state 88
    SUB        shift, and go to state 89
    MULT       shift, and go to state 90
    DIV        shift, and go to state 91
    OR         shift, and go to state 92
    AND        shift, and go to state 93
    SMALLER    shift, and go to state 94
    GREATER    shift, and go to state 95
    SMALLEQ    shift, and go to state 96
    GREATEQ    shift, and go to state 97
    EQUALS     shift, and go to state 98
    DIFFERENT  shift, and go to state 99
    IN         shift, and go to state 100

    SEMIC  reduce using rule 56 (math_op)


State 64

   60 operation: math_op •

    SEMIC  reduce using rule 60 (operation)


State 65

   41 expression: set_op •

    SEMIC  reduce using rule 41 (expression)


State 66

   42 expression: operation •

    SEMIC  reduce using rule 42 (expression)


State 67

   43 expression: func_call •

    SEMIC  reduce using rule 43 (expression)


State 68

   61 operation: in_set •

    SEMIC  reduce using rule 61 (operation)


State 69

   44 expression: assign_value •

    SEMIC  reduce using rule 44 (expression)


State 70

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC •

    $end  reduce using rule 12 (func_dec)
    TYPE  reduce using rule 12 (func_dec)


State 71

   77 assign_value: ID ASSIGN • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 101
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 72

   72 func_call: ID PARENL • args_list PARENR

    ID       shift, and go to state 102
    STRING   shift, and go to state 189
    CHAR     shift, and go to state 190
    EMPTY    shift, and go to state 191
    INTEGER  shift, and go to state 192
    DECIMAL  shift, and go to state 193
    PARENL   shift, and go to state 194

    COMMA   reduce using rule 76 (args_list)
    PARENR  reduce using rule 76 (args_list)

    term       go to state 103
    args_list  go to state 104


State 73

   36 var_dec: TYPE ID • SEMIC

    SEMIC  shift, and go to state 195


State 74

   71 operation: NEG expression •

    SEMIC  reduce using rule 71 (operation)


State 75

   33 if_ops: IF PARENL • operation PARENR STFUNC statement_list ENDFUNC
   34       | IF PARENL • operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    ID       shift, and go to state 196
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    PARENL   shift, and go to state 181

    term       go to state 182
    math_op    go to state 183
    operation  go to state 105
    in_set     go to state 187


State 76

   28 basic_ops: FOR PARENL • for_body PARENR STFUNC statement_list ENDFUNC

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54
    SEMIC    shift, and go to state 106

    expression_statement  go to state 107
    for_body              go to state 108
    expression            go to state 197
    term                  go to state 63
    math_op               go to state 64
    set_op                go to state 65
    operation             go to state 66
    func_call             go to state 67
    in_set                go to state 68
    assign_value          go to state 69


State 77

   37 io_ops: READ PARENL • PARENR SEMIC
   38       | READ PARENL • expression PARENR SEMIC

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181
    PARENR   shift, and go to state 109

    expression    go to state 110
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 78

   39 io_ops: WRITE PARENL • expression PARENR SEMIC

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 111
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 79

   40 io_ops: WRITELN PARENL • expression PARENR SEMIC

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 112
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 80

   35 ret_st: RETURN expression • SEMIC

    SEMIC  shift, and go to state 113


State 81

   62 operation: ISTYPE PARENL • expression PARENR

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 114
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 82

   57 set_op: ADDSET PARENL • in_set PARENR

    ID       shift, and go to state 198
    STRING   shift, and go to state 199
    CHAR     shift, and go to state 200
    EMPTY    shift, and go to state 201
    INTEGER  shift, and go to state 202
    DECIMAL  shift, and go to state 203
    PARENL   shift, and go to state 204

    term    go to state 115
    in_set  go to state 116


State 83

   58 set_op: REMOVE PARENL • in_set PARENR

    ID       shift, and go to state 198
    STRING   shift, and go to state 199
    CHAR     shift, and go to state 200
    EMPTY    shift, and go to state 201
    INTEGER  shift, and go to state 202
    DECIMAL  shift, and go to state 203
    PARENL   shift, and go to state 204

    term    go to state 115
    in_set  go to state 117


State 84

   59 set_op: EXISTS PARENL • in_set PARENR

    ID       shift, and go to state 198
    STRING   shift, and go to state 199
    CHAR     shift, and go to state 200
    EMPTY    shift, and go to state 201
    INTEGER  shift, and go to state 202
    DECIMAL  shift, and go to state 203
    PARENL   shift, and go to state 204

    term    go to state 115
    in_set  go to state 118


State 85

   29 basic_ops: FORALL PARENL • in_set PARENR set_op SEMIC
   30          | FORALL PARENL • in_set PARENR STFUNC statement_list ENDFUNC

    ID       shift, and go to state 198
    STRING   shift, and go to state 199
    CHAR     shift, and go to state 200
    EMPTY    shift, and go to state 201
    INTEGER  shift, and go to state 202
    DECIMAL  shift, and go to state 203
    PARENL   shift, and go to state 204

    term    go to state 115
    in_set  go to state 119


State 86

   51 term: PARENL expression • PARENR

    PARENR  shift, and go to state 120


State 87

   26 expression_statement: expression SEMIC •

    ID       reduce using rule 26 (expression_statement)
    TYPE     reduce using rule 26 (expression_statement)
    STRING   reduce using rule 26 (expression_statement)
    CHAR     reduce using rule 26 (expression_statement)
    EMPTY    reduce using rule 26 (expression_statement)
    INTEGER  reduce using rule 26 (expression_statement)
    DECIMAL  reduce using rule 26 (expression_statement)
    NEG      reduce using rule 26 (expression_statement)
    IF       reduce using rule 26 (expression_statement)
    FOR      reduce using rule 26 (expression_statement)
    READ     reduce using rule 26 (expression_statement)
    WRITE    reduce using rule 26 (expression_statement)
    WRITELN  reduce using rule 26 (expression_statement)
    RETURN   reduce using rule 26 (expression_statement)
    ISTYPE   reduce using rule 26 (expression_statement)
    ADDSET   reduce using rule 26 (expression_statement)
    REMOVE   reduce using rule 26 (expression_statement)
    EXISTS   reduce using rule 26 (expression_statement)
    FORALL   reduce using rule 26 (expression_statement)
    ENDFUNC  reduce using rule 26 (expression_statement)
    PARENL   reduce using rule 26 (expression_statement)


State 88

   54 math_op: term ADD • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 121
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 89

   55 math_op: term SUB • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 122
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 90

   53 math_op: term MULT • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 123
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 91

   52 math_op: term DIV • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 124
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 92

   69 operation: term OR • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 125
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 93

   70 operation: term AND • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 126
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 94

   63 operation: term SMALLER • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 127
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 95

   64 operation: term GREATER • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 128
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 96

   65 operation: term SMALLEQ • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 129
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 97

   66 operation: term GREATEQ • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 130
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 98

   67 operation: term EQUALS • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 131
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 99

   68 operation: term DIFFERENT • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 132
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 100

   73 in_set: term IN • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression    go to state 133
    term          go to state 63
    math_op       go to state 64
    set_op        go to state 65
    operation     go to state 66
    func_call     go to state 67
    in_set        go to state 68
    assign_value  go to state 69


State 101

   77 assign_value: ID ASSIGN expression •

    SEMIC  reduce using rule 77 (assign_value)


State 102

   45 term: ID •

    COMMA   reduce using rule 45 (term)
    PARENR  reduce using rule 45 (term)


State 103

   75 args_list: term •

    COMMA   reduce using rule 75 (args_list)
    PARENR  reduce using rule 75 (args_list)


State 104

   72 func_call: ID PARENL args_list • PARENR
   74 args_list: args_list • COMMA term

    COMMA   shift, and go to state 134
    PARENR  shift, and go to state 135


State 105

   33 if_ops: IF PARENL operation • PARENR STFUNC statement_list ENDFUNC
   34       | IF PARENL operation • PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    PARENR  shift, and go to state 136


State 106

   32 for_body: SEMIC • expression_statement expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression_statement  go to state 137
    expression            go to state 197
    term                  go to state 63
    math_op               go to state 64
    set_op                go to state 65
    operation             go to state 66
    func_call             go to state 67
    in_set                go to state 68
    assign_value          go to state 69


State 107

   31 for_body: expression_statement • expression_statement expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression_statement  go to state 138
    expression            go to state 197
    term                  go to state 63
    math_op               go to state 64
    set_op                go to state 65
    operation             go to state 66
    func_call             go to state 67
    in_set                go to state 68
    assign_value          go to state 69


State 108

   28 basic_ops: FOR PARENL for_body • PARENR STFUNC statement_list ENDFUNC

    PARENR  shift, and go to state 139


State 109

   37 io_ops: READ PARENL PARENR • SEMIC

    SEMIC  shift, and go to state 140


State 110

   38 io_ops: READ PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 141


State 111

   39 io_ops: WRITE PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 142


State 112

   40 io_ops: WRITELN PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 143


State 113

   35 ret_st: RETURN expression SEMIC •

    ID       reduce using rule 35 (ret_st)
    TYPE     reduce using rule 35 (ret_st)
    STRING   reduce using rule 35 (ret_st)
    CHAR     reduce using rule 35 (ret_st)
    EMPTY    reduce using rule 35 (ret_st)
    INTEGER  reduce using rule 35 (ret_st)
    DECIMAL  reduce using rule 35 (ret_st)
    NEG      reduce using rule 35 (ret_st)
    IF       reduce using rule 35 (ret_st)
    FOR      reduce using rule 35 (ret_st)
    READ     reduce using rule 35 (ret_st)
    WRITE    reduce using rule 35 (ret_st)
    WRITELN  reduce using rule 35 (ret_st)
    RETURN   reduce using rule 35 (ret_st)
    ISTYPE   reduce using rule 35 (ret_st)
    ADDSET   reduce using rule 35 (ret_st)
    REMOVE   reduce using rule 35 (ret_st)
    EXISTS   reduce using rule 35 (ret_st)
    FORALL   reduce using rule 35 (ret_st)
    ENDFUNC  reduce using rule 35 (ret_st)
    PARENL   reduce using rule 35 (ret_st)


State 114

   62 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 144


State 115

   73 in_set: term • IN expression

    IN  shift, and go to state 205


State 116

   57 set_op: ADDSET PARENL in_set • PARENR

    PARENR  shift, and go to state 145


State 117

   58 set_op: REMOVE PARENL in_set • PARENR

    PARENR  shift, and go to state 146


State 118

   59 set_op: EXISTS PARENL in_set • PARENR

    PARENR  shift, and go to state 147


State 119

   29 basic_ops: FORALL PARENL in_set • PARENR set_op SEMIC
   30          | FORALL PARENL in_set • PARENR STFUNC statement_list ENDFUNC

    PARENR  shift, and go to state 148


State 120

   51 term: PARENL expression PARENR •

    ADD        reduce using rule 51 (term)
    SUB        reduce using rule 51 (term)
    MULT       reduce using rule 51 (term)
    DIV        reduce using rule 51 (term)
    OR         reduce using rule 51 (term)
    AND        reduce using rule 51 (term)
    SMALLER    reduce using rule 51 (term)
    GREATER    reduce using rule 51 (term)
    SMALLEQ    reduce using rule 51 (term)
    GREATEQ    reduce using rule 51 (term)
    EQUALS     reduce using rule 51 (term)
    DIFFERENT  reduce using rule 51 (term)
    IN         reduce using rule 51 (term)
    SEMIC      reduce using rule 51 (term)


State 121

   54 math_op: term ADD expression •

    SEMIC  reduce using rule 54 (math_op)


State 122

   55 math_op: term SUB expression •

    SEMIC  reduce using rule 55 (math_op)


State 123

   53 math_op: term MULT expression •

    SEMIC  reduce using rule 53 (math_op)


State 124

   52 math_op: term DIV expression •

    SEMIC  reduce using rule 52 (math_op)


State 125

   69 operation: term OR expression •

    SEMIC  reduce using rule 69 (operation)


State 126

   70 operation: term AND expression •

    SEMIC  reduce using rule 70 (operation)


State 127

   63 operation: term SMALLER expression •

    SEMIC  reduce using rule 63 (operation)


State 128

   64 operation: term GREATER expression •

    SEMIC  reduce using rule 64 (operation)


State 129

   65 operation: term SMALLEQ expression •

    SEMIC  reduce using rule 65 (operation)


State 130

   66 operation: term GREATEQ expression •

    SEMIC  reduce using rule 66 (operation)


State 131

   67 operation: term EQUALS expression •

    SEMIC  reduce using rule 67 (operation)


State 132

   68 operation: term DIFFERENT expression •

    SEMIC  reduce using rule 68 (operation)


State 133

   73 in_set: term IN expression •

    SEMIC  reduce using rule 73 (in_set)


State 134

   74 args_list: args_list COMMA • term

    ID       shift, and go to state 102
    STRING   shift, and go to state 189
    CHAR     shift, and go to state 190
    EMPTY    shift, and go to state 191
    INTEGER  shift, and go to state 192
    DECIMAL  shift, and go to state 193
    PARENL   shift, and go to state 194

    term  go to state 149


State 135

   72 func_call: ID PARENL args_list PARENR •

    SEMIC  reduce using rule 72 (func_call)


State 136

   33 if_ops: IF PARENL operation PARENR • STFUNC statement_list ENDFUNC
   34       | IF PARENL operation PARENR • STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 150


State 137

   32 for_body: SEMIC expression_statement • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 151
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 138

   31 for_body: expression_statement expression_statement • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 152
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 139

   28 basic_ops: FOR PARENL for_body PARENR • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 153


State 140

   37 io_ops: READ PARENL PARENR SEMIC •

    ID       reduce using rule 37 (io_ops)
    TYPE     reduce using rule 37 (io_ops)
    STRING   reduce using rule 37 (io_ops)
    CHAR     reduce using rule 37 (io_ops)
    EMPTY    reduce using rule 37 (io_ops)
    INTEGER  reduce using rule 37 (io_ops)
    DECIMAL  reduce using rule 37 (io_ops)
    NEG      reduce using rule 37 (io_ops)
    IF       reduce using rule 37 (io_ops)
    FOR      reduce using rule 37 (io_ops)
    READ     reduce using rule 37 (io_ops)
    WRITE    reduce using rule 37 (io_ops)
    WRITELN  reduce using rule 37 (io_ops)
    RETURN   reduce using rule 37 (io_ops)
    ISTYPE   reduce using rule 37 (io_ops)
    ADDSET   reduce using rule 37 (io_ops)
    REMOVE   reduce using rule 37 (io_ops)
    EXISTS   reduce using rule 37 (io_ops)
    FORALL   reduce using rule 37 (io_ops)
    ENDFUNC  reduce using rule 37 (io_ops)
    PARENL   reduce using rule 37 (io_ops)


State 141

   38 io_ops: READ PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 154


State 142

   39 io_ops: WRITE PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 155


State 143

   40 io_ops: WRITELN PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 156


State 144

   62 operation: ISTYPE PARENL expression PARENR •

    SEMIC  reduce using rule 62 (operation)


State 145

   57 set_op: ADDSET PARENL in_set PARENR •

    SEMIC  reduce using rule 57 (set_op)


State 146

   58 set_op: REMOVE PARENL in_set PARENR •

    SEMIC  reduce using rule 58 (set_op)


State 147

   59 set_op: EXISTS PARENL in_set PARENR •

    SEMIC  reduce using rule 59 (set_op)


State 148

   29 basic_ops: FORALL PARENL in_set PARENR • set_op SEMIC
   30          | FORALL PARENL in_set PARENR • STFUNC statement_list ENDFUNC

    ADDSET  shift, and go to state 49
    REMOVE  shift, and go to state 50
    EXISTS  shift, and go to state 51
    STFUNC  shift, and go to state 157

    set_op  go to state 158


State 149

   74 args_list: args_list COMMA term •

    COMMA   reduce using rule 74 (args_list)
    PARENR  reduce using rule 74 (args_list)


State 150

   33 if_ops: IF PARENL operation PARENR STFUNC • statement_list ENDFUNC
   34       | IF PARENL operation PARENR STFUNC • statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 159


State 151

   32 for_body: SEMIC expression_statement expression •

    PARENR  reduce using rule 32 (for_body)


State 152

   31 for_body: expression_statement expression_statement expression •

    PARENR  reduce using rule 31 (for_body)


State 153

   28 basic_ops: FOR PARENL for_body PARENR STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 160


State 154

   38 io_ops: READ PARENL expression PARENR SEMIC •

    ID       reduce using rule 38 (io_ops)
    TYPE     reduce using rule 38 (io_ops)
    STRING   reduce using rule 38 (io_ops)
    CHAR     reduce using rule 38 (io_ops)
    EMPTY    reduce using rule 38 (io_ops)
    INTEGER  reduce using rule 38 (io_ops)
    DECIMAL  reduce using rule 38 (io_ops)
    NEG      reduce using rule 38 (io_ops)
    IF       reduce using rule 38 (io_ops)
    FOR      reduce using rule 38 (io_ops)
    READ     reduce using rule 38 (io_ops)
    WRITE    reduce using rule 38 (io_ops)
    WRITELN  reduce using rule 38 (io_ops)
    RETURN   reduce using rule 38 (io_ops)
    ISTYPE   reduce using rule 38 (io_ops)
    ADDSET   reduce using rule 38 (io_ops)
    REMOVE   reduce using rule 38 (io_ops)
    EXISTS   reduce using rule 38 (io_ops)
    FORALL   reduce using rule 38 (io_ops)
    ENDFUNC  reduce using rule 38 (io_ops)
    PARENL   reduce using rule 38 (io_ops)


State 155

   39 io_ops: WRITE PARENL expression PARENR SEMIC •

    ID       reduce using rule 39 (io_ops)
    TYPE     reduce using rule 39 (io_ops)
    STRING   reduce using rule 39 (io_ops)
    CHAR     reduce using rule 39 (io_ops)
    EMPTY    reduce using rule 39 (io_ops)
    INTEGER  reduce using rule 39 (io_ops)
    DECIMAL  reduce using rule 39 (io_ops)
    NEG      reduce using rule 39 (io_ops)
    IF       reduce using rule 39 (io_ops)
    FOR      reduce using rule 39 (io_ops)
    READ     reduce using rule 39 (io_ops)
    WRITE    reduce using rule 39 (io_ops)
    WRITELN  reduce using rule 39 (io_ops)
    RETURN   reduce using rule 39 (io_ops)
    ISTYPE   reduce using rule 39 (io_ops)
    ADDSET   reduce using rule 39 (io_ops)
    REMOVE   reduce using rule 39 (io_ops)
    EXISTS   reduce using rule 39 (io_ops)
    FORALL   reduce using rule 39 (io_ops)
    ENDFUNC  reduce using rule 39 (io_ops)
    PARENL   reduce using rule 39 (io_ops)


State 156

   40 io_ops: WRITELN PARENL expression PARENR SEMIC •

    ID       reduce using rule 40 (io_ops)
    TYPE     reduce using rule 40 (io_ops)
    STRING   reduce using rule 40 (io_ops)
    CHAR     reduce using rule 40 (io_ops)
    EMPTY    reduce using rule 40 (io_ops)
    INTEGER  reduce using rule 40 (io_ops)
    DECIMAL  reduce using rule 40 (io_ops)
    NEG      reduce using rule 40 (io_ops)
    IF       reduce using rule 40 (io_ops)
    FOR      reduce using rule 40 (io_ops)
    READ     reduce using rule 40 (io_ops)
    WRITE    reduce using rule 40 (io_ops)
    WRITELN  reduce using rule 40 (io_ops)
    RETURN   reduce using rule 40 (io_ops)
    ISTYPE   reduce using rule 40 (io_ops)
    ADDSET   reduce using rule 40 (io_ops)
    REMOVE   reduce using rule 40 (io_ops)
    EXISTS   reduce using rule 40 (io_ops)
    FORALL   reduce using rule 40 (io_ops)
    ENDFUNC  reduce using rule 40 (io_ops)
    PARENL   reduce using rule 40 (io_ops)


State 157

   30 basic_ops: FORALL PARENL in_set PARENR STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 161


State 158

   29 basic_ops: FORALL PARENL in_set PARENR set_op • SEMIC

    SEMIC  shift, and go to state 162


State 159

   18 statement_list: statement_list • statement
   33 if_ops: IF PARENL operation PARENR STFUNC statement_list • ENDFUNC
   34       | IF PARENL operation PARENR STFUNC statement_list • ENDFUNC ELSE STFUNC statement_list ENDFUNC

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 163
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    if_ops                go to state 58
    ret_st                go to state 59
    var_dec               go to state 60
    io_ops                go to state 61
    expression            go to state 62
    term                  go to state 63
    math_op               go to state 64
    set_op                go to state 65
    operation             go to state 66
    func_call             go to state 67
    in_set                go to state 68
    assign_value          go to state 69


State 160

   18 statement_list: statement_list • statement
   28 basic_ops: FOR PARENL for_body PARENR STFUNC statement_list • ENDFUNC

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 164
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    if_ops                go to state 58
    ret_st                go to state 59
    var_dec               go to state 60
    io_ops                go to state 61
    expression            go to state 62
    term                  go to state 63
    math_op               go to state 64
    set_op                go to state 65
    operation             go to state 66
    func_call             go to state 67
    in_set                go to state 68
    assign_value          go to state 69


State 161

   18 statement_list: statement_list • statement
   30 basic_ops: FORALL PARENL in_set PARENR STFUNC statement_list • ENDFUNC

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 165
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    if_ops                go to state 58
    ret_st                go to state 59
    var_dec               go to state 60
    io_ops                go to state 61
    expression            go to state 62
    term                  go to state 63
    math_op               go to state 64
    set_op                go to state 65
    operation             go to state 66
    func_call             go to state 67
    in_set                go to state 68
    assign_value          go to state 69


State 162

   29 basic_ops: FORALL PARENL in_set PARENR set_op SEMIC •

    ID       reduce using rule 29 (basic_ops)
    TYPE     reduce using rule 29 (basic_ops)
    STRING   reduce using rule 29 (basic_ops)
    CHAR     reduce using rule 29 (basic_ops)
    EMPTY    reduce using rule 29 (basic_ops)
    INTEGER  reduce using rule 29 (basic_ops)
    DECIMAL  reduce using rule 29 (basic_ops)
    NEG      reduce using rule 29 (basic_ops)
    IF       reduce using rule 29 (basic_ops)
    FOR      reduce using rule 29 (basic_ops)
    READ     reduce using rule 29 (basic_ops)
    WRITE    reduce using rule 29 (basic_ops)
    WRITELN  reduce using rule 29 (basic_ops)
    RETURN   reduce using rule 29 (basic_ops)
    ISTYPE   reduce using rule 29 (basic_ops)
    ADDSET   reduce using rule 29 (basic_ops)
    REMOVE   reduce using rule 29 (basic_ops)
    EXISTS   reduce using rule 29 (basic_ops)
    FORALL   reduce using rule 29 (basic_ops)
    ENDFUNC  reduce using rule 29 (basic_ops)
    PARENL   reduce using rule 29 (basic_ops)


State 163

   33 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC •
   34       | IF PARENL operation PARENR STFUNC statement_list ENDFUNC • ELSE STFUNC statement_list ENDFUNC

    ELSE  shift, and go to state 166

    ID       reduce using rule 33 (if_ops)
    TYPE     reduce using rule 33 (if_ops)
    STRING   reduce using rule 33 (if_ops)
    CHAR     reduce using rule 33 (if_ops)
    EMPTY    reduce using rule 33 (if_ops)
    INTEGER  reduce using rule 33 (if_ops)
    DECIMAL  reduce using rule 33 (if_ops)
    NEG      reduce using rule 33 (if_ops)
    IF       reduce using rule 33 (if_ops)
    FOR      reduce using rule 33 (if_ops)
    READ     reduce using rule 33 (if_ops)
    WRITE    reduce using rule 33 (if_ops)
    WRITELN  reduce using rule 33 (if_ops)
    RETURN   reduce using rule 33 (if_ops)
    ISTYPE   reduce using rule 33 (if_ops)
    ADDSET   reduce using rule 33 (if_ops)
    REMOVE   reduce using rule 33 (if_ops)
    EXISTS   reduce using rule 33 (if_ops)
    FORALL   reduce using rule 33 (if_ops)
    ENDFUNC  reduce using rule 33 (if_ops)
    PARENL   reduce using rule 33 (if_ops)


State 164

   28 basic_ops: FOR PARENL for_body PARENR STFUNC statement_list ENDFUNC •

    ID       reduce using rule 28 (basic_ops)
    TYPE     reduce using rule 28 (basic_ops)
    STRING   reduce using rule 28 (basic_ops)
    CHAR     reduce using rule 28 (basic_ops)
    EMPTY    reduce using rule 28 (basic_ops)
    INTEGER  reduce using rule 28 (basic_ops)
    DECIMAL  reduce using rule 28 (basic_ops)
    NEG      reduce using rule 28 (basic_ops)
    IF       reduce using rule 28 (basic_ops)
    FOR      reduce using rule 28 (basic_ops)
    READ     reduce using rule 28 (basic_ops)
    WRITE    reduce using rule 28 (basic_ops)
    WRITELN  reduce using rule 28 (basic_ops)
    RETURN   reduce using rule 28 (basic_ops)
    ISTYPE   reduce using rule 28 (basic_ops)
    ADDSET   reduce using rule 28 (basic_ops)
    REMOVE   reduce using rule 28 (basic_ops)
    EXISTS   reduce using rule 28 (basic_ops)
    FORALL   reduce using rule 28 (basic_ops)
    ENDFUNC  reduce using rule 28 (basic_ops)
    PARENL   reduce using rule 28 (basic_ops)


State 165

   30 basic_ops: FORALL PARENL in_set PARENR STFUNC statement_list ENDFUNC •

    ID       reduce using rule 30 (basic_ops)
    TYPE     reduce using rule 30 (basic_ops)
    STRING   reduce using rule 30 (basic_ops)
    CHAR     reduce using rule 30 (basic_ops)
    EMPTY    reduce using rule 30 (basic_ops)
    INTEGER  reduce using rule 30 (basic_ops)
    DECIMAL  reduce using rule 30 (basic_ops)
    NEG      reduce using rule 30 (basic_ops)
    IF       reduce using rule 30 (basic_ops)
    FOR      reduce using rule 30 (basic_ops)
    READ     reduce using rule 30 (basic_ops)
    WRITE    reduce using rule 30 (basic_ops)
    WRITELN  reduce using rule 30 (basic_ops)
    RETURN   reduce using rule 30 (basic_ops)
    ISTYPE   reduce using rule 30 (basic_ops)
    ADDSET   reduce using rule 30 (basic_ops)
    REMOVE   reduce using rule 30 (basic_ops)
    EXISTS   reduce using rule 30 (basic_ops)
    FORALL   reduce using rule 30 (basic_ops)
    ENDFUNC  reduce using rule 30 (basic_ops)
    PARENL   reduce using rule 30 (basic_ops)


State 166

   34 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 167


State 167

   34 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 168


State 168

   18 statement_list: statement_list • statement
   34 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list • ENDFUNC

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 169
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    if_ops                go to state 58
    ret_st                go to state 59
    var_dec               go to state 60
    io_ops                go to state 61
    expression            go to state 62
    term                  go to state 63
    math_op               go to state 64
    set_op                go to state 65
    operation             go to state 66
    func_call             go to state 67
    in_set                go to state 68
    assign_value          go to state 69


State 169

   34 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC •

    ID       reduce using rule 34 (if_ops)
    TYPE     reduce using rule 34 (if_ops)
    STRING   reduce using rule 34 (if_ops)
    CHAR     reduce using rule 34 (if_ops)
    EMPTY    reduce using rule 34 (if_ops)
    INTEGER  reduce using rule 34 (if_ops)
    DECIMAL  reduce using rule 34 (if_ops)
    NEG      reduce using rule 34 (if_ops)
    IF       reduce using rule 34 (if_ops)
    FOR      reduce using rule 34 (if_ops)
    READ     reduce using rule 34 (if_ops)
    WRITE    reduce using rule 34 (if_ops)
    WRITELN  reduce using rule 34 (if_ops)
    RETURN   reduce using rule 34 (if_ops)
    ISTYPE   reduce using rule 34 (if_ops)
    ADDSET   reduce using rule 34 (if_ops)
    REMOVE   reduce using rule 34 (if_ops)
    EXISTS   reduce using rule 34 (if_ops)
    FORALL   reduce using rule 34 (if_ops)
    ENDFUNC  reduce using rule 34 (if_ops)
    PARENL   reduce using rule 34 (if_ops)


State 170

   45 term: ID •
   72 func_call: ID • PARENL args_list PARENR
   77 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 206
    PARENL  shift, and go to state 207

    ADD        reduce using rule 45 (term)
    SUB        reduce using rule 45 (term)
    MULT       reduce using rule 45 (term)
    DIV        reduce using rule 45 (term)
    OR         reduce using rule 45 (term)
    AND        reduce using rule 45 (term)
    SMALLER    reduce using rule 45 (term)
    GREATER    reduce using rule 45 (term)
    SMALLEQ    reduce using rule 45 (term)
    GREATEQ    reduce using rule 45 (term)
    EQUALS     reduce using rule 45 (term)
    DIFFERENT  reduce using rule 45 (term)
    IN         reduce using rule 45 (term)
    PARENR     reduce using rule 45 (term)


State 171

   49 term: STRING •

    ADD        reduce using rule 49 (term)
    SUB        reduce using rule 49 (term)
    MULT       reduce using rule 49 (term)
    DIV        reduce using rule 49 (term)
    OR         reduce using rule 49 (term)
    AND        reduce using rule 49 (term)
    SMALLER    reduce using rule 49 (term)
    GREATER    reduce using rule 49 (term)
    SMALLEQ    reduce using rule 49 (term)
    GREATEQ    reduce using rule 49 (term)
    EQUALS     reduce using rule 49 (term)
    DIFFERENT  reduce using rule 49 (term)
    IN         reduce using rule 49 (term)
    PARENR     reduce using rule 49 (term)


State 172

   48 term: CHAR •

    ADD        reduce using rule 48 (term)
    SUB        reduce using rule 48 (term)
    MULT       reduce using rule 48 (term)
    DIV        reduce using rule 48 (term)
    OR         reduce using rule 48 (term)
    AND        reduce using rule 48 (term)
    SMALLER    reduce using rule 48 (term)
    GREATER    reduce using rule 48 (term)
    SMALLEQ    reduce using rule 48 (term)
    GREATEQ    reduce using rule 48 (term)
    EQUALS     reduce using rule 48 (term)
    DIFFERENT  reduce using rule 48 (term)
    IN         reduce using rule 48 (term)
    PARENR     reduce using rule 48 (term)


State 173

   50 term: EMPTY •

    ADD        reduce using rule 50 (term)
    SUB        reduce using rule 50 (term)
    MULT       reduce using rule 50 (term)
    DIV        reduce using rule 50 (term)
    OR         reduce using rule 50 (term)
    AND        reduce using rule 50 (term)
    SMALLER    reduce using rule 50 (term)
    GREATER    reduce using rule 50 (term)
    SMALLEQ    reduce using rule 50 (term)
    GREATEQ    reduce using rule 50 (term)
    EQUALS     reduce using rule 50 (term)
    DIFFERENT  reduce using rule 50 (term)
    IN         reduce using rule 50 (term)
    PARENR     reduce using rule 50 (term)


State 174

   46 term: INTEGER •

    ADD        reduce using rule 46 (term)
    SUB        reduce using rule 46 (term)
    MULT       reduce using rule 46 (term)
    DIV        reduce using rule 46 (term)
    OR         reduce using rule 46 (term)
    AND        reduce using rule 46 (term)
    SMALLER    reduce using rule 46 (term)
    GREATER    reduce using rule 46 (term)
    SMALLEQ    reduce using rule 46 (term)
    GREATEQ    reduce using rule 46 (term)
    EQUALS     reduce using rule 46 (term)
    DIFFERENT  reduce using rule 46 (term)
    IN         reduce using rule 46 (term)
    PARENR     reduce using rule 46 (term)


State 175

   47 term: DECIMAL •

    ADD        reduce using rule 47 (term)
    SUB        reduce using rule 47 (term)
    MULT       reduce using rule 47 (term)
    DIV        reduce using rule 47 (term)
    OR         reduce using rule 47 (term)
    AND        reduce using rule 47 (term)
    SMALLER    reduce using rule 47 (term)
    GREATER    reduce using rule 47 (term)
    SMALLEQ    reduce using rule 47 (term)
    GREATEQ    reduce using rule 47 (term)
    EQUALS     reduce using rule 47 (term)
    DIFFERENT  reduce using rule 47 (term)
    IN         reduce using rule 47 (term)
    PARENR     reduce using rule 47 (term)


State 176

   71 operation: NEG • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 208
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 177

   62 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 209


State 178

   57 set_op: ADDSET • PARENL in_set PARENR

    PARENL  shift, and go to state 210


State 179

   58 set_op: REMOVE • PARENL in_set PARENR

    PARENL  shift, and go to state 211


State 180

   59 set_op: EXISTS • PARENL in_set PARENR

    PARENL  shift, and go to state 212


State 181

   51 term: PARENL • expression PARENR

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 213
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 182

   52 math_op: term • DIV expression
   53        | term • MULT expression
   54        | term • ADD expression
   55        | term • SUB expression
   56        | term •
   63 operation: term • SMALLER expression
   64          | term • GREATER expression
   65          | term • SMALLEQ expression
   66          | term • GREATEQ expression
   67          | term • EQUALS expression
   68          | term • DIFFERENT expression
   69          | term • OR expression
   70          | term • AND expression
   73 in_set: term • IN expression

    ADD        shift, and go to state 214
    SUB        shift, and go to state 215
    MULT       shift, and go to state 216
    DIV        shift, and go to state 217
    OR         shift, and go to state 218
    AND        shift, and go to state 219
    SMALLER    shift, and go to state 220
    GREATER    shift, and go to state 221
    SMALLEQ    shift, and go to state 222
    GREATEQ    shift, and go to state 223
    EQUALS     shift, and go to state 224
    DIFFERENT  shift, and go to state 225
    IN         shift, and go to state 205

    PARENR  reduce using rule 56 (math_op)


State 183

   60 operation: math_op •

    PARENR  reduce using rule 60 (operation)


State 184

   41 expression: set_op •

    PARENR  reduce using rule 41 (expression)


State 185

   42 expression: operation •

    PARENR  reduce using rule 42 (expression)


State 186

   43 expression: func_call •

    PARENR  reduce using rule 43 (expression)


State 187

   61 operation: in_set •

    PARENR  reduce using rule 61 (operation)


State 188

   44 expression: assign_value •

    PARENR  reduce using rule 44 (expression)


State 189

   49 term: STRING •

    COMMA   reduce using rule 49 (term)
    PARENR  reduce using rule 49 (term)


State 190

   48 term: CHAR •

    COMMA   reduce using rule 48 (term)
    PARENR  reduce using rule 48 (term)


State 191

   50 term: EMPTY •

    COMMA   reduce using rule 50 (term)
    PARENR  reduce using rule 50 (term)


State 192

   46 term: INTEGER •

    COMMA   reduce using rule 46 (term)
    PARENR  reduce using rule 46 (term)


State 193

   47 term: DECIMAL •

    COMMA   reduce using rule 47 (term)
    PARENR  reduce using rule 47 (term)


State 194

   51 term: PARENL • expression PARENR

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 226
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 195

   36 var_dec: TYPE ID SEMIC •

    ID       reduce using rule 36 (var_dec)
    TYPE     reduce using rule 36 (var_dec)
    STRING   reduce using rule 36 (var_dec)
    CHAR     reduce using rule 36 (var_dec)
    EMPTY    reduce using rule 36 (var_dec)
    INTEGER  reduce using rule 36 (var_dec)
    DECIMAL  reduce using rule 36 (var_dec)
    NEG      reduce using rule 36 (var_dec)
    IF       reduce using rule 36 (var_dec)
    FOR      reduce using rule 36 (var_dec)
    READ     reduce using rule 36 (var_dec)
    WRITE    reduce using rule 36 (var_dec)
    WRITELN  reduce using rule 36 (var_dec)
    RETURN   reduce using rule 36 (var_dec)
    ISTYPE   reduce using rule 36 (var_dec)
    ADDSET   reduce using rule 36 (var_dec)
    REMOVE   reduce using rule 36 (var_dec)
    EXISTS   reduce using rule 36 (var_dec)
    FORALL   reduce using rule 36 (var_dec)
    ENDFUNC  reduce using rule 36 (var_dec)
    PARENL   reduce using rule 36 (var_dec)


State 196

   45 term: ID •

    ADD        reduce using rule 45 (term)
    SUB        reduce using rule 45 (term)
    MULT       reduce using rule 45 (term)
    DIV        reduce using rule 45 (term)
    OR         reduce using rule 45 (term)
    AND        reduce using rule 45 (term)
    SMALLER    reduce using rule 45 (term)
    GREATER    reduce using rule 45 (term)
    SMALLEQ    reduce using rule 45 (term)
    GREATEQ    reduce using rule 45 (term)
    EQUALS     reduce using rule 45 (term)
    DIFFERENT  reduce using rule 45 (term)
    IN         reduce using rule 45 (term)
    PARENR     reduce using rule 45 (term)


State 197

   26 expression_statement: expression • SEMIC

    SEMIC  shift, and go to state 227


State 198

   45 term: ID •

    IN  reduce using rule 45 (term)


State 199

   49 term: STRING •

    IN  reduce using rule 49 (term)


State 200

   48 term: CHAR •

    IN  reduce using rule 48 (term)


State 201

   50 term: EMPTY •

    IN  reduce using rule 50 (term)


State 202

   46 term: INTEGER •

    IN  reduce using rule 46 (term)


State 203

   47 term: DECIMAL •

    IN  reduce using rule 47 (term)


State 204

   51 term: PARENL • expression PARENR

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 228
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 205

   73 in_set: term IN • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 229
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 206

   77 assign_value: ID ASSIGN • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 230
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 207

   72 func_call: ID PARENL • args_list PARENR

    ID       shift, and go to state 102
    STRING   shift, and go to state 189
    CHAR     shift, and go to state 190
    EMPTY    shift, and go to state 191
    INTEGER  shift, and go to state 192
    DECIMAL  shift, and go to state 193
    PARENL   shift, and go to state 194

    COMMA   reduce using rule 76 (args_list)
    PARENR  reduce using rule 76 (args_list)

    term       go to state 103
    args_list  go to state 231


State 208

   71 operation: NEG expression •

    PARENR  reduce using rule 71 (operation)


State 209

   62 operation: ISTYPE PARENL • expression PARENR

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 232
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 210

   57 set_op: ADDSET PARENL • in_set PARENR

    ID       shift, and go to state 198
    STRING   shift, and go to state 199
    CHAR     shift, and go to state 200
    EMPTY    shift, and go to state 201
    INTEGER  shift, and go to state 202
    DECIMAL  shift, and go to state 203
    PARENL   shift, and go to state 204

    term    go to state 115
    in_set  go to state 233


State 211

   58 set_op: REMOVE PARENL • in_set PARENR

    ID       shift, and go to state 198
    STRING   shift, and go to state 199
    CHAR     shift, and go to state 200
    EMPTY    shift, and go to state 201
    INTEGER  shift, and go to state 202
    DECIMAL  shift, and go to state 203
    PARENL   shift, and go to state 204

    term    go to state 115
    in_set  go to state 234


State 212

   59 set_op: EXISTS PARENL • in_set PARENR

    ID       shift, and go to state 198
    STRING   shift, and go to state 199
    CHAR     shift, and go to state 200
    EMPTY    shift, and go to state 201
    INTEGER  shift, and go to state 202
    DECIMAL  shift, and go to state 203
    PARENL   shift, and go to state 204

    term    go to state 115
    in_set  go to state 235


State 213

   51 term: PARENL expression • PARENR

    PARENR  shift, and go to state 236


State 214

   54 math_op: term ADD • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 237
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 215

   55 math_op: term SUB • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 238
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 216

   53 math_op: term MULT • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 239
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 217

   52 math_op: term DIV • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 240
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 218

   69 operation: term OR • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 241
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 219

   70 operation: term AND • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 242
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 220

   63 operation: term SMALLER • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 243
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 221

   64 operation: term GREATER • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 244
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 222

   65 operation: term SMALLEQ • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 245
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 223

   66 operation: term GREATEQ • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 246
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 224

   67 operation: term EQUALS • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 247
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 225

   68 operation: term DIFFERENT • expression

    ID       shift, and go to state 170
    STRING   shift, and go to state 171
    CHAR     shift, and go to state 172
    EMPTY    shift, and go to state 173
    INTEGER  shift, and go to state 174
    DECIMAL  shift, and go to state 175
    NEG      shift, and go to state 176
    ISTYPE   shift, and go to state 177
    ADDSET   shift, and go to state 178
    REMOVE   shift, and go to state 179
    EXISTS   shift, and go to state 180
    PARENL   shift, and go to state 181

    expression    go to state 248
    term          go to state 182
    math_op       go to state 183
    set_op        go to state 184
    operation     go to state 185
    func_call     go to state 186
    in_set        go to state 187
    assign_value  go to state 188


State 226

   51 term: PARENL expression • PARENR

    PARENR  shift, and go to state 249


State 227

   26 expression_statement: expression SEMIC •

    ID       reduce using rule 26 (expression_statement)
    STRING   reduce using rule 26 (expression_statement)
    CHAR     reduce using rule 26 (expression_statement)
    EMPTY    reduce using rule 26 (expression_statement)
    INTEGER  reduce using rule 26 (expression_statement)
    DECIMAL  reduce using rule 26 (expression_statement)
    NEG      reduce using rule 26 (expression_statement)
    ISTYPE   reduce using rule 26 (expression_statement)
    ADDSET   reduce using rule 26 (expression_statement)
    REMOVE   reduce using rule 26 (expression_statement)
    EXISTS   reduce using rule 26 (expression_statement)
    PARENL   reduce using rule 26 (expression_statement)


State 228

   51 term: PARENL expression • PARENR

    PARENR  shift, and go to state 250


State 229

   73 in_set: term IN expression •

    PARENR  reduce using rule 73 (in_set)


State 230

   77 assign_value: ID ASSIGN expression •

    PARENR  reduce using rule 77 (assign_value)


State 231

   72 func_call: ID PARENL args_list • PARENR
   74 args_list: args_list • COMMA term

    COMMA   shift, and go to state 134
    PARENR  shift, and go to state 251


State 232

   62 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 252


State 233

   57 set_op: ADDSET PARENL in_set • PARENR

    PARENR  shift, and go to state 253


State 234

   58 set_op: REMOVE PARENL in_set • PARENR

    PARENR  shift, and go to state 254


State 235

   59 set_op: EXISTS PARENL in_set • PARENR

    PARENR  shift, and go to state 255


State 236

   51 term: PARENL expression PARENR •

    ADD        reduce using rule 51 (term)
    SUB        reduce using rule 51 (term)
    MULT       reduce using rule 51 (term)
    DIV        reduce using rule 51 (term)
    OR         reduce using rule 51 (term)
    AND        reduce using rule 51 (term)
    SMALLER    reduce using rule 51 (term)
    GREATER    reduce using rule 51 (term)
    SMALLEQ    reduce using rule 51 (term)
    GREATEQ    reduce using rule 51 (term)
    EQUALS     reduce using rule 51 (term)
    DIFFERENT  reduce using rule 51 (term)
    IN         reduce using rule 51 (term)
    PARENR     reduce using rule 51 (term)


State 237

   54 math_op: term ADD expression •

    PARENR  reduce using rule 54 (math_op)


State 238

   55 math_op: term SUB expression •

    PARENR  reduce using rule 55 (math_op)


State 239

   53 math_op: term MULT expression •

    PARENR  reduce using rule 53 (math_op)


State 240

   52 math_op: term DIV expression •

    PARENR  reduce using rule 52 (math_op)


State 241

   69 operation: term OR expression •

    PARENR  reduce using rule 69 (operation)


State 242

   70 operation: term AND expression •

    PARENR  reduce using rule 70 (operation)


State 243

   63 operation: term SMALLER expression •

    PARENR  reduce using rule 63 (operation)


State 244

   64 operation: term GREATER expression •

    PARENR  reduce using rule 64 (operation)


State 245

   65 operation: term SMALLEQ expression •

    PARENR  reduce using rule 65 (operation)


State 246

   66 operation: term GREATEQ expression •

    PARENR  reduce using rule 66 (operation)


State 247

   67 operation: term EQUALS expression •

    PARENR  reduce using rule 67 (operation)


State 248

   68 operation: term DIFFERENT expression •

    PARENR  reduce using rule 68 (operation)


State 249

   51 term: PARENL expression PARENR •

    COMMA   reduce using rule 51 (term)
    PARENR  reduce using rule 51 (term)


State 250

   51 term: PARENL expression PARENR •

    IN  reduce using rule 51 (term)


State 251

   72 func_call: ID PARENL args_list PARENR •

    PARENR  reduce using rule 72 (func_call)


State 252

   62 operation: ISTYPE PARENL expression PARENR •

    PARENR  reduce using rule 62 (operation)


State 253

   57 set_op: ADDSET PARENL in_set PARENR •

    PARENR  reduce using rule 57 (set_op)


State 254

   58 set_op: REMOVE PARENL in_set PARENR •

    PARENR  reduce using rule 58 (set_op)


State 255

   59 set_op: EXISTS PARENL in_set PARENR •

    PARENR  reduce using rule 59 (set_op)
