Grammar

    0 $accept: program $end

    1 program: declarations_list

    2 declarations_list: declarations_list declaration
    3                  | declaration
    4                  | error

    5 declaration: var_dec
    6            | func_dec

    7 $@1: %empty

    8 $@2: %empty

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC

   10 $@3: %empty

   11 $@4: %empty

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC

   13 params_list: params_list COMMA parameter
   14            | parameter
   15            | %empty
   16            | error

   17 parameter: TYPE ID

   18 statement_list: statement_list statement
   19               | %empty
   20               | error

   21 statement: expression_statement
   22          | ret_st
   23          | var_dec
   24          | io_ops
   25          | basic_ops

   26 expression_statement: expression SEMIC

   27 basic_ops: if_ops
   28          | for_statement STFUNC statement_list ENDFUNC
   29          | forall_statement set_op SEMIC
   30          | forall_statement STFUNC statement_list ENDFUNC

   31 for_statement: FOR PARENL for_body PARENR

   32 forall_statement: FORALL PARENL in_set PARENR

   33 for_body: expression_statement expression_statement expression
   34         | SEMIC expression_statement expression

   35 if_ops: if_statement statement
   36       | if_statement statement else_statement
   37       | if_statement STFUNC statement_list ENDFUNC
   38       | if_statement STFUNC statement_list ENDFUNC else_statement

   39 if_statement: IF PARENL operation PARENR

   40 $@5: %empty

   41 else_statement: ELSE $@5 statement

   42 $@6: %empty

   43 else_statement: ELSE $@6 STFUNC statement_list ENDFUNC

   44 ret_st: RETURN expression SEMIC

   45 var_dec: TYPE ID SEMIC

   46 io_ops: READ PARENL ID PARENR SEMIC
   47       | WRITE PARENL expression PARENR SEMIC
   48       | WRITELN PARENL expression PARENR SEMIC

   49 expression: set_op
   50           | func_call
   51           | assign_value

   52 term: math_term
   53     | str_term

   54 math_term: ID
   55          | INTEGER
   56          | DECIMAL
   57          | PARENL expression PARENR

   58 str_term: CHAR
   59         | STRING
   60         | EMPTY
   61         | ERRORTOKEN

   62 math_op: math_op ADD math_op_muldiv
   63        | math_op SUB math_op_muldiv
   64        | math_op_muldiv

   65 math_op_muldiv: math_op_muldiv DIV math_term
   66               | math_op_muldiv MULT math_term
   67               | math_term

   68 set_op: ADDSET PARENL set_op PARENR
   69       | REMOVE PARENL set_op PARENR
   70       | EXISTS PARENL set_op PARENR
   71       | operation

   72 operation: in_set
   73          | ISTYPE PARENL expression PARENR
   74          | or_operation

   75 or_operation: or_operation OR and_operation
   76             | and_operation

   77 and_operation: and_operation AND equality_operation
   78              | equality_operation

   79 equality_operation: equality_operation EQUALS relational_operation
   80                   | equality_operation DIFFERENT relational_operation
   81                   | relational_operation

   82 relational_operation: relational_operation SMALLER negation_operation
   83                     | relational_operation GREATER negation_operation
   84                     | relational_operation SMALLEQ negation_operation
   85                     | relational_operation GREATEQ negation_operation
   86                     | negation_operation

   87 negation_operation: NEG math_op
   88                   | math_op

   89 func_call: ID PARENL args_list PARENR
   90          | str_term

   91 in_set: term IN expression

   92 args_list: args_list COMMA term
   93          | term
   94          | %empty

   95 assign_value: ID ASSIGN expression


Terminals, with rules where they appear

    $end (0) 0
    error <tree_node> (256) 4 16 20
    ID <str> (258) 9 17 45 46 54 89 95
    TYPE <str> (259) 9 12 17 45
    STRING <str> (260) 59
    CHAR <str> (261) 58
    EMPTY <str> (262) 60
    MAIN <str> (263) 12
    ERRORTOKEN <str> (264) 61
    INTEGER <integer> (265) 55
    DECIMAL <dec> (266) 56
    ADD <str> (267) 62
    SUB <str> (268) 63
    MULT <str> (269) 66
    DIV <str> (270) 65
    OR <str> (271) 75
    AND <str> (272) 77
    SMALLER <str> (273) 82
    GREATER <str> (274) 83
    SMALLEQ <str> (275) 84
    GREATEQ <str> (276) 85
    EQUALS <str> (277) 79
    DIFFERENT <str> (278) 80
    ASSIGN <str> (279) 95
    NEG <str> (280) 87
    IF <str> (281) 39
    ELSE <str> (282) 41 43
    FOR <str> (283) 31
    READ <str> (284) 46
    WRITE <str> (285) 47
    WRITELN <str> (286) 48
    RETURN <str> (287) 44
    IN <str> (288) 91
    ISTYPE <str> (289) 73
    ADDSET <str> (290) 68
    REMOVE <str> (291) 69
    EXISTS <str> (292) 70
    FORALL <str> (293) 32
    COMMA <str> (294) 13 92
    STFUNC <str> (295) 9 12 28 30 37 38 43
    ENDFUNC <str> (296) 9 12 28 30 37 38 43
    PARENL <str> (297) 9 12 31 32 39 46 47 48 57 68 69 70 73 89
    PARENR <str> (298) 9 12 31 32 39 46 47 48 57 68 69 70 73 89
    SEMIC <str> (299) 26 29 34 44 45 46 47 48
    OUTERTHEN (300)


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    program <tree_node> (47)
        on left: 1
        on right: 0
    declarations_list <tree_node> (48)
        on left: 2 3 4
        on right: 1 2
    declaration <tree_node> (49)
        on left: 5 6
        on right: 2 3
    func_dec <tree_node> (50)
        on left: 9 12
        on right: 6
    $@1 (51)
        on left: 7
        on right: 9
    $@2 (52)
        on left: 8
        on right: 9
    $@3 (53)
        on left: 10
        on right: 12
    $@4 (54)
        on left: 11
        on right: 12
    params_list <tree_node> (55)
        on left: 13 14 15 16
        on right: 9 12 13
    parameter <tree_node> (56)
        on left: 17
        on right: 13 14
    statement_list <tree_node> (57)
        on left: 18 19 20
        on right: 9 12 18 28 30 37 38 43
    statement <tree_node> (58)
        on left: 21 22 23 24 25
        on right: 18 35 36 41
    expression_statement <tree_node> (59)
        on left: 26
        on right: 21 33 34
    basic_ops <tree_node> (60)
        on left: 27 28 29 30
        on right: 25
    for_statement <tree_node> (61)
        on left: 31
        on right: 28
    forall_statement <tree_node> (62)
        on left: 32
        on right: 29 30
    for_body <tree_node> (63)
        on left: 33 34
        on right: 31
    if_ops <tree_node> (64)
        on left: 35 36 37 38
        on right: 27
    if_statement <tree_node> (65)
        on left: 39
        on right: 35 36 37 38
    else_statement <tree_node> (66)
        on left: 41 43
        on right: 36 38
    $@5 (67)
        on left: 40
        on right: 41
    $@6 (68)
        on left: 42
        on right: 43
    ret_st <tree_node> (69)
        on left: 44
        on right: 22
    var_dec <tree_node> (70)
        on left: 45
        on right: 5 23
    io_ops <tree_node> (71)
        on left: 46 47 48
        on right: 24
    expression <tree_node> (72)
        on left: 49 50 51
        on right: 26 33 34 44 47 48 57 73 91 95
    term <tree_node> (73)
        on left: 52 53
        on right: 91 92 93
    math_term <tree_node> (74)
        on left: 54 55 56 57
        on right: 52 65 66 67
    str_term <tree_node> (75)
        on left: 58 59 60 61
        on right: 53 90
    math_op <tree_node> (76)
        on left: 62 63 64
        on right: 62 63 87 88
    math_op_muldiv <tree_node> (77)
        on left: 65 66 67
        on right: 62 63 64 65 66
    set_op <tree_node> (78)
        on left: 68 69 70 71
        on right: 29 49 68 69 70
    operation <tree_node> (79)
        on left: 72 73 74
        on right: 39 71
    or_operation <tree_node> (80)
        on left: 75 76
        on right: 74 75
    and_operation <tree_node> (81)
        on left: 77 78
        on right: 75 76 77
    equality_operation <tree_node> (82)
        on left: 79 80 81
        on right: 77 78 79 80
    relational_operation <tree_node> (83)
        on left: 82 83 84 85 86
        on right: 79 80 81 82 83 84 85
    negation_operation <tree_node> (84)
        on left: 87 88
        on right: 82 83 84 85 86
    func_call <tree_node> (85)
        on left: 89 90
        on right: 50
    in_set <tree_node> (86)
        on left: 91
        on right: 32 72
    args_list <tree_node> (87)
        on left: 92 93 94
        on right: 89 92
    assign_value <tree_node> (88)
        on left: 95
        on right: 51


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    program            go to state 3
    declarations_list  go to state 4
    declaration        go to state 5
    func_dec           go to state 6
    var_dec            go to state 7


State 1

    4 declarations_list: error •

    $end  reduce using rule 4 (declarations_list)
    TYPE  reduce using rule 4 (declarations_list)


State 2

    9 func_dec: TYPE • ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC
   12         | TYPE • MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC
   45 var_dec: TYPE • ID SEMIC

    ID    shift, and go to state 8
    MAIN  shift, and go to state 9


State 3

    0 $accept: program • $end

    $end  shift, and go to state 10


State 4

    1 program: declarations_list •
    2 declarations_list: declarations_list • declaration

    TYPE  shift, and go to state 2

    $end  reduce using rule 1 (program)

    declaration  go to state 11
    func_dec     go to state 6
    var_dec      go to state 7


State 5

    3 declarations_list: declaration •

    $end  reduce using rule 3 (declarations_list)
    TYPE  reduce using rule 3 (declarations_list)


State 6

    6 declaration: func_dec •

    $end  reduce using rule 6 (declaration)
    TYPE  reduce using rule 6 (declaration)


State 7

    5 declaration: var_dec •

    $end  reduce using rule 5 (declaration)
    TYPE  reduce using rule 5 (declaration)


State 8

    9 func_dec: TYPE ID • PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC
   45 var_dec: TYPE ID • SEMIC

    PARENL  shift, and go to state 12
    SEMIC   shift, and go to state 13


State 9

   12 func_dec: TYPE MAIN • PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC

    PARENL  shift, and go to state 14


State 10

    0 $accept: program $end •

    $default  accept


State 11

    2 declarations_list: declarations_list declaration •

    $end  reduce using rule 2 (declarations_list)
    TYPE  reduce using rule 2 (declarations_list)


State 12

    9 func_dec: TYPE ID PARENL • $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC

    error   reduce using rule 7 ($@1)
    TYPE    reduce using rule 7 ($@1)
    COMMA   reduce using rule 7 ($@1)
    PARENR  reduce using rule 7 ($@1)

    $@1  go to state 15


State 13

   45 var_dec: TYPE ID SEMIC •

    $end  reduce using rule 45 (var_dec)
    TYPE  reduce using rule 45 (var_dec)


State 14

   12 func_dec: TYPE MAIN PARENL • $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC

    error   reduce using rule 10 ($@3)
    TYPE    reduce using rule 10 ($@3)
    COMMA   reduce using rule 10 ($@3)
    PARENR  reduce using rule 10 ($@3)

    $@3  go to state 16


State 15

    9 func_dec: TYPE ID PARENL $@1 • params_list PARENR STFUNC $@2 statement_list ENDFUNC

    error  shift, and go to state 17
    TYPE   shift, and go to state 18

    COMMA   reduce using rule 15 (params_list)
    PARENR  reduce using rule 15 (params_list)

    params_list  go to state 19
    parameter    go to state 20


State 16

   12 func_dec: TYPE MAIN PARENL $@3 • params_list PARENR STFUNC $@4 statement_list ENDFUNC

    error  shift, and go to state 17
    TYPE   shift, and go to state 18

    COMMA   reduce using rule 15 (params_list)
    PARENR  reduce using rule 15 (params_list)

    params_list  go to state 21
    parameter    go to state 20


State 17

   16 params_list: error •

    COMMA   reduce using rule 16 (params_list)
    PARENR  reduce using rule 16 (params_list)


State 18

   17 parameter: TYPE • ID

    ID  shift, and go to state 22


State 19

    9 func_dec: TYPE ID PARENL $@1 params_list • PARENR STFUNC $@2 statement_list ENDFUNC
   13 params_list: params_list • COMMA parameter

    COMMA   shift, and go to state 23
    PARENR  shift, and go to state 24


State 20

   14 params_list: parameter •

    COMMA   reduce using rule 14 (params_list)
    PARENR  reduce using rule 14 (params_list)


State 21

   12 func_dec: TYPE MAIN PARENL $@3 params_list • PARENR STFUNC $@4 statement_list ENDFUNC
   13 params_list: params_list • COMMA parameter

    COMMA   shift, and go to state 23
    PARENR  shift, and go to state 25


State 22

   17 parameter: TYPE ID •

    COMMA   reduce using rule 17 (parameter)
    PARENR  reduce using rule 17 (parameter)


State 23

   13 params_list: params_list COMMA • parameter

    TYPE  shift, and go to state 18

    parameter  go to state 26


State 24

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR • STFUNC $@2 statement_list ENDFUNC

    STFUNC  shift, and go to state 27


State 25

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR • STFUNC $@4 statement_list ENDFUNC

    STFUNC  shift, and go to state 28


State 26

   13 params_list: params_list COMMA parameter •

    COMMA   reduce using rule 13 (params_list)
    PARENR  reduce using rule 13 (params_list)


State 27

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC • $@2 statement_list ENDFUNC

    error       reduce using rule 8 ($@2)
    ID          reduce using rule 8 ($@2)
    TYPE        reduce using rule 8 ($@2)
    STRING      reduce using rule 8 ($@2)
    CHAR        reduce using rule 8 ($@2)
    EMPTY       reduce using rule 8 ($@2)
    ERRORTOKEN  reduce using rule 8 ($@2)
    INTEGER     reduce using rule 8 ($@2)
    DECIMAL     reduce using rule 8 ($@2)
    NEG         reduce using rule 8 ($@2)
    IF          reduce using rule 8 ($@2)
    FOR         reduce using rule 8 ($@2)
    READ        reduce using rule 8 ($@2)
    WRITE       reduce using rule 8 ($@2)
    WRITELN     reduce using rule 8 ($@2)
    RETURN      reduce using rule 8 ($@2)
    ISTYPE      reduce using rule 8 ($@2)
    ADDSET      reduce using rule 8 ($@2)
    REMOVE      reduce using rule 8 ($@2)
    EXISTS      reduce using rule 8 ($@2)
    FORALL      reduce using rule 8 ($@2)
    ENDFUNC     reduce using rule 8 ($@2)
    PARENL      reduce using rule 8 ($@2)

    $@2  go to state 29


State 28

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC • $@4 statement_list ENDFUNC

    error       reduce using rule 11 ($@4)
    ID          reduce using rule 11 ($@4)
    TYPE        reduce using rule 11 ($@4)
    STRING      reduce using rule 11 ($@4)
    CHAR        reduce using rule 11 ($@4)
    EMPTY       reduce using rule 11 ($@4)
    ERRORTOKEN  reduce using rule 11 ($@4)
    INTEGER     reduce using rule 11 ($@4)
    DECIMAL     reduce using rule 11 ($@4)
    NEG         reduce using rule 11 ($@4)
    IF          reduce using rule 11 ($@4)
    FOR         reduce using rule 11 ($@4)
    READ        reduce using rule 11 ($@4)
    WRITE       reduce using rule 11 ($@4)
    WRITELN     reduce using rule 11 ($@4)
    RETURN      reduce using rule 11 ($@4)
    ISTYPE      reduce using rule 11 ($@4)
    ADDSET      reduce using rule 11 ($@4)
    REMOVE      reduce using rule 11 ($@4)
    EXISTS      reduce using rule 11 ($@4)
    FORALL      reduce using rule 11 ($@4)
    ENDFUNC     reduce using rule 11 ($@4)
    PARENL      reduce using rule 11 ($@4)

    $@4  go to state 30


State 29

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 32


State 30

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 33


State 31

   20 statement_list: error •

    ID          reduce using rule 20 (statement_list)
    TYPE        reduce using rule 20 (statement_list)
    STRING      reduce using rule 20 (statement_list)
    CHAR        reduce using rule 20 (statement_list)
    EMPTY       reduce using rule 20 (statement_list)
    ERRORTOKEN  reduce using rule 20 (statement_list)
    INTEGER     reduce using rule 20 (statement_list)
    DECIMAL     reduce using rule 20 (statement_list)
    NEG         reduce using rule 20 (statement_list)
    IF          reduce using rule 20 (statement_list)
    FOR         reduce using rule 20 (statement_list)
    READ        reduce using rule 20 (statement_list)
    WRITE       reduce using rule 20 (statement_list)
    WRITELN     reduce using rule 20 (statement_list)
    RETURN      reduce using rule 20 (statement_list)
    ISTYPE      reduce using rule 20 (statement_list)
    ADDSET      reduce using rule 20 (statement_list)
    REMOVE      reduce using rule 20 (statement_list)
    EXISTS      reduce using rule 20 (statement_list)
    FORALL      reduce using rule 20 (statement_list)
    ENDFUNC     reduce using rule 20 (statement_list)
    PARENL      reduce using rule 20 (statement_list)


State 32

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list • ENDFUNC
   18 statement_list: statement_list • statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 54
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 33

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list • ENDFUNC
   18 statement_list: statement_list • statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 82
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 34

   54 math_term: ID •
   89 func_call: ID • PARENL args_list PARENR
   95 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 83
    PARENL  shift, and go to state 84

    ADD        reduce using rule 54 (math_term)
    SUB        reduce using rule 54 (math_term)
    MULT       reduce using rule 54 (math_term)
    DIV        reduce using rule 54 (math_term)
    OR         reduce using rule 54 (math_term)
    AND        reduce using rule 54 (math_term)
    SMALLER    reduce using rule 54 (math_term)
    GREATER    reduce using rule 54 (math_term)
    SMALLEQ    reduce using rule 54 (math_term)
    GREATEQ    reduce using rule 54 (math_term)
    EQUALS     reduce using rule 54 (math_term)
    DIFFERENT  reduce using rule 54 (math_term)
    IN         reduce using rule 54 (math_term)
    SEMIC      reduce using rule 54 (math_term)


State 35

   45 var_dec: TYPE • ID SEMIC

    ID  shift, and go to state 85


State 36

   59 str_term: STRING •

    IN     reduce using rule 59 (str_term)
    SEMIC  reduce using rule 59 (str_term)


State 37

   58 str_term: CHAR •

    IN     reduce using rule 58 (str_term)
    SEMIC  reduce using rule 58 (str_term)


State 38

   60 str_term: EMPTY •

    IN     reduce using rule 60 (str_term)
    SEMIC  reduce using rule 60 (str_term)


State 39

   61 str_term: ERRORTOKEN •

    IN     reduce using rule 61 (str_term)
    SEMIC  reduce using rule 61 (str_term)


State 40

   55 math_term: INTEGER •

    ADD        reduce using rule 55 (math_term)
    SUB        reduce using rule 55 (math_term)
    MULT       reduce using rule 55 (math_term)
    DIV        reduce using rule 55 (math_term)
    OR         reduce using rule 55 (math_term)
    AND        reduce using rule 55 (math_term)
    SMALLER    reduce using rule 55 (math_term)
    GREATER    reduce using rule 55 (math_term)
    SMALLEQ    reduce using rule 55 (math_term)
    GREATEQ    reduce using rule 55 (math_term)
    EQUALS     reduce using rule 55 (math_term)
    DIFFERENT  reduce using rule 55 (math_term)
    IN         reduce using rule 55 (math_term)
    SEMIC      reduce using rule 55 (math_term)


State 41

   56 math_term: DECIMAL •

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    IN         reduce using rule 56 (math_term)
    SEMIC      reduce using rule 56 (math_term)


State 42

   87 negation_operation: NEG • math_op

    ID       shift, and go to state 86
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    math_term       go to state 87
    math_op         go to state 88
    math_op_muldiv  go to state 71


State 43

   39 if_statement: IF • PARENL operation PARENR

    PARENL  shift, and go to state 89


State 44

   31 for_statement: FOR • PARENL for_body PARENR

    PARENL  shift, and go to state 90


State 45

   46 io_ops: READ • PARENL ID PARENR SEMIC

    PARENL  shift, and go to state 91


State 46

   47 io_ops: WRITE • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 92


State 47

   48 io_ops: WRITELN • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 93


State 48

   44 ret_st: RETURN • expression SEMIC

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression            go to state 94
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 49

   73 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 95


State 50

   68 set_op: ADDSET • PARENL set_op PARENR

    PARENL  shift, and go to state 96


State 51

   69 set_op: REMOVE • PARENL set_op PARENR

    PARENL  shift, and go to state 97


State 52

   70 set_op: EXISTS • PARENL set_op PARENR

    PARENL  shift, and go to state 98


State 53

   32 forall_statement: FORALL • PARENL in_set PARENR

    PARENL  shift, and go to state 99


State 54

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC •

    $end  reduce using rule 9 (func_dec)
    TYPE  reduce using rule 9 (func_dec)


State 55

   57 math_term: PARENL • expression PARENR

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 100
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 56

   18 statement_list: statement_list statement •

    ID          reduce using rule 18 (statement_list)
    TYPE        reduce using rule 18 (statement_list)
    STRING      reduce using rule 18 (statement_list)
    CHAR        reduce using rule 18 (statement_list)
    EMPTY       reduce using rule 18 (statement_list)
    ERRORTOKEN  reduce using rule 18 (statement_list)
    INTEGER     reduce using rule 18 (statement_list)
    DECIMAL     reduce using rule 18 (statement_list)
    NEG         reduce using rule 18 (statement_list)
    IF          reduce using rule 18 (statement_list)
    FOR         reduce using rule 18 (statement_list)
    READ        reduce using rule 18 (statement_list)
    WRITE       reduce using rule 18 (statement_list)
    WRITELN     reduce using rule 18 (statement_list)
    RETURN      reduce using rule 18 (statement_list)
    ISTYPE      reduce using rule 18 (statement_list)
    ADDSET      reduce using rule 18 (statement_list)
    REMOVE      reduce using rule 18 (statement_list)
    EXISTS      reduce using rule 18 (statement_list)
    FORALL      reduce using rule 18 (statement_list)
    ENDFUNC     reduce using rule 18 (statement_list)
    PARENL      reduce using rule 18 (statement_list)


State 57

   21 statement: expression_statement •

    ID          reduce using rule 21 (statement)
    TYPE        reduce using rule 21 (statement)
    STRING      reduce using rule 21 (statement)
    CHAR        reduce using rule 21 (statement)
    EMPTY       reduce using rule 21 (statement)
    ERRORTOKEN  reduce using rule 21 (statement)
    INTEGER     reduce using rule 21 (statement)
    DECIMAL     reduce using rule 21 (statement)
    NEG         reduce using rule 21 (statement)
    IF          reduce using rule 21 (statement)
    FOR         reduce using rule 21 (statement)
    READ        reduce using rule 21 (statement)
    WRITE       reduce using rule 21 (statement)
    WRITELN     reduce using rule 21 (statement)
    RETURN      reduce using rule 21 (statement)
    ISTYPE      reduce using rule 21 (statement)
    ADDSET      reduce using rule 21 (statement)
    REMOVE      reduce using rule 21 (statement)
    EXISTS      reduce using rule 21 (statement)
    FORALL      reduce using rule 21 (statement)
    ENDFUNC     reduce using rule 21 (statement)
    PARENL      reduce using rule 21 (statement)


State 58

   25 statement: basic_ops •

    ID          reduce using rule 25 (statement)
    TYPE        reduce using rule 25 (statement)
    STRING      reduce using rule 25 (statement)
    CHAR        reduce using rule 25 (statement)
    EMPTY       reduce using rule 25 (statement)
    ERRORTOKEN  reduce using rule 25 (statement)
    INTEGER     reduce using rule 25 (statement)
    DECIMAL     reduce using rule 25 (statement)
    NEG         reduce using rule 25 (statement)
    IF          reduce using rule 25 (statement)
    FOR         reduce using rule 25 (statement)
    READ        reduce using rule 25 (statement)
    WRITE       reduce using rule 25 (statement)
    WRITELN     reduce using rule 25 (statement)
    RETURN      reduce using rule 25 (statement)
    ISTYPE      reduce using rule 25 (statement)
    ADDSET      reduce using rule 25 (statement)
    REMOVE      reduce using rule 25 (statement)
    EXISTS      reduce using rule 25 (statement)
    FORALL      reduce using rule 25 (statement)
    ENDFUNC     reduce using rule 25 (statement)
    PARENL      reduce using rule 25 (statement)


State 59

   28 basic_ops: for_statement • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 101


State 60

   29 basic_ops: forall_statement • set_op SEMIC
   30          | forall_statement • STFUNC statement_list ENDFUNC

    ID          shift, and go to state 219
    STRING      shift, and go to state 220
    CHAR        shift, and go to state 221
    EMPTY       shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    STFUNC      shift, and go to state 102
    PARENL      shift, and go to state 55

    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 103
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 104
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    in_set                go to state 80


State 61

   27 basic_ops: if_ops •

    ID          reduce using rule 27 (basic_ops)
    TYPE        reduce using rule 27 (basic_ops)
    STRING      reduce using rule 27 (basic_ops)
    CHAR        reduce using rule 27 (basic_ops)
    EMPTY       reduce using rule 27 (basic_ops)
    ERRORTOKEN  reduce using rule 27 (basic_ops)
    INTEGER     reduce using rule 27 (basic_ops)
    DECIMAL     reduce using rule 27 (basic_ops)
    NEG         reduce using rule 27 (basic_ops)
    IF          reduce using rule 27 (basic_ops)
    FOR         reduce using rule 27 (basic_ops)
    READ        reduce using rule 27 (basic_ops)
    WRITE       reduce using rule 27 (basic_ops)
    WRITELN     reduce using rule 27 (basic_ops)
    RETURN      reduce using rule 27 (basic_ops)
    ISTYPE      reduce using rule 27 (basic_ops)
    ADDSET      reduce using rule 27 (basic_ops)
    REMOVE      reduce using rule 27 (basic_ops)
    EXISTS      reduce using rule 27 (basic_ops)
    FORALL      reduce using rule 27 (basic_ops)
    ENDFUNC     reduce using rule 27 (basic_ops)
    PARENL      reduce using rule 27 (basic_ops)


State 62

   35 if_ops: if_statement • statement
   36       | if_statement • statement else_statement
   37       | if_statement • STFUNC statement_list ENDFUNC
   38       | if_statement • STFUNC statement_list ENDFUNC else_statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 224
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 225
    WRITE       shift, and go to state 226
    WRITELN     shift, and go to state 227
    RETURN      shift, and go to state 228
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    STFUNC      shift, and go to state 105
    PARENL      shift, and go to state 55

    statement             go to state 106
    expression_statement  go to state 229
    basic_ops             go to state 230
    for_statement         go to state 231
    forall_statement      go to state 232
    if_ops                go to state 233
    if_statement          go to state 234
    ret_st                go to state 235
    var_dec               go to state 236
    io_ops                go to state 237
    expression            go to state 238
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 63

   22 statement: ret_st •

    ID          reduce using rule 22 (statement)
    TYPE        reduce using rule 22 (statement)
    STRING      reduce using rule 22 (statement)
    CHAR        reduce using rule 22 (statement)
    EMPTY       reduce using rule 22 (statement)
    ERRORTOKEN  reduce using rule 22 (statement)
    INTEGER     reduce using rule 22 (statement)
    DECIMAL     reduce using rule 22 (statement)
    NEG         reduce using rule 22 (statement)
    IF          reduce using rule 22 (statement)
    FOR         reduce using rule 22 (statement)
    READ        reduce using rule 22 (statement)
    WRITE       reduce using rule 22 (statement)
    WRITELN     reduce using rule 22 (statement)
    RETURN      reduce using rule 22 (statement)
    ISTYPE      reduce using rule 22 (statement)
    ADDSET      reduce using rule 22 (statement)
    REMOVE      reduce using rule 22 (statement)
    EXISTS      reduce using rule 22 (statement)
    FORALL      reduce using rule 22 (statement)
    ENDFUNC     reduce using rule 22 (statement)
    PARENL      reduce using rule 22 (statement)


State 64

   23 statement: var_dec •

    ID          reduce using rule 23 (statement)
    TYPE        reduce using rule 23 (statement)
    STRING      reduce using rule 23 (statement)
    CHAR        reduce using rule 23 (statement)
    EMPTY       reduce using rule 23 (statement)
    ERRORTOKEN  reduce using rule 23 (statement)
    INTEGER     reduce using rule 23 (statement)
    DECIMAL     reduce using rule 23 (statement)
    NEG         reduce using rule 23 (statement)
    IF          reduce using rule 23 (statement)
    FOR         reduce using rule 23 (statement)
    READ        reduce using rule 23 (statement)
    WRITE       reduce using rule 23 (statement)
    WRITELN     reduce using rule 23 (statement)
    RETURN      reduce using rule 23 (statement)
    ISTYPE      reduce using rule 23 (statement)
    ADDSET      reduce using rule 23 (statement)
    REMOVE      reduce using rule 23 (statement)
    EXISTS      reduce using rule 23 (statement)
    FORALL      reduce using rule 23 (statement)
    ENDFUNC     reduce using rule 23 (statement)
    PARENL      reduce using rule 23 (statement)


State 65

   24 statement: io_ops •

    ID          reduce using rule 24 (statement)
    TYPE        reduce using rule 24 (statement)
    STRING      reduce using rule 24 (statement)
    CHAR        reduce using rule 24 (statement)
    EMPTY       reduce using rule 24 (statement)
    ERRORTOKEN  reduce using rule 24 (statement)
    INTEGER     reduce using rule 24 (statement)
    DECIMAL     reduce using rule 24 (statement)
    NEG         reduce using rule 24 (statement)
    IF          reduce using rule 24 (statement)
    FOR         reduce using rule 24 (statement)
    READ        reduce using rule 24 (statement)
    WRITE       reduce using rule 24 (statement)
    WRITELN     reduce using rule 24 (statement)
    RETURN      reduce using rule 24 (statement)
    ISTYPE      reduce using rule 24 (statement)
    ADDSET      reduce using rule 24 (statement)
    REMOVE      reduce using rule 24 (statement)
    EXISTS      reduce using rule 24 (statement)
    FORALL      reduce using rule 24 (statement)
    ENDFUNC     reduce using rule 24 (statement)
    PARENL      reduce using rule 24 (statement)


State 66

   26 expression_statement: expression • SEMIC

    SEMIC  shift, and go to state 107


State 67

   91 in_set: term • IN expression

    IN  shift, and go to state 108


State 68

   52 term: math_term •
   67 math_op_muldiv: math_term •

    ADD        reduce using rule 67 (math_op_muldiv)
    SUB        reduce using rule 67 (math_op_muldiv)
    MULT       reduce using rule 67 (math_op_muldiv)
    DIV        reduce using rule 67 (math_op_muldiv)
    OR         reduce using rule 67 (math_op_muldiv)
    AND        reduce using rule 67 (math_op_muldiv)
    SMALLER    reduce using rule 67 (math_op_muldiv)
    GREATER    reduce using rule 67 (math_op_muldiv)
    SMALLEQ    reduce using rule 67 (math_op_muldiv)
    GREATEQ    reduce using rule 67 (math_op_muldiv)
    EQUALS     reduce using rule 67 (math_op_muldiv)
    DIFFERENT  reduce using rule 67 (math_op_muldiv)
    IN         reduce using rule 52 (term)
    SEMIC      reduce using rule 67 (math_op_muldiv)


State 69

   53 term: str_term •
   90 func_call: str_term •

    IN     reduce using rule 53 (term)
    SEMIC  reduce using rule 90 (func_call)


State 70

   62 math_op: math_op • ADD math_op_muldiv
   63        | math_op • SUB math_op_muldiv
   88 negation_operation: math_op •

    ADD  shift, and go to state 109
    SUB  shift, and go to state 110

    OR         reduce using rule 88 (negation_operation)
    AND        reduce using rule 88 (negation_operation)
    SMALLER    reduce using rule 88 (negation_operation)
    GREATER    reduce using rule 88 (negation_operation)
    SMALLEQ    reduce using rule 88 (negation_operation)
    GREATEQ    reduce using rule 88 (negation_operation)
    EQUALS     reduce using rule 88 (negation_operation)
    DIFFERENT  reduce using rule 88 (negation_operation)
    SEMIC      reduce using rule 88 (negation_operation)


State 71

   64 math_op: math_op_muldiv •
   65 math_op_muldiv: math_op_muldiv • DIV math_term
   66               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 111
    DIV   shift, and go to state 112

    ADD        reduce using rule 64 (math_op)
    SUB        reduce using rule 64 (math_op)
    OR         reduce using rule 64 (math_op)
    AND        reduce using rule 64 (math_op)
    SMALLER    reduce using rule 64 (math_op)
    GREATER    reduce using rule 64 (math_op)
    SMALLEQ    reduce using rule 64 (math_op)
    GREATEQ    reduce using rule 64 (math_op)
    EQUALS     reduce using rule 64 (math_op)
    DIFFERENT  reduce using rule 64 (math_op)
    SEMIC      reduce using rule 64 (math_op)


State 72

   49 expression: set_op •

    SEMIC  reduce using rule 49 (expression)


State 73

   71 set_op: operation •

    SEMIC  reduce using rule 71 (set_op)


State 74

   74 operation: or_operation •
   75 or_operation: or_operation • OR and_operation

    OR  shift, and go to state 113

    SEMIC  reduce using rule 74 (operation)


State 75

   76 or_operation: and_operation •
   77 and_operation: and_operation • AND equality_operation

    AND  shift, and go to state 114

    OR     reduce using rule 76 (or_operation)
    SEMIC  reduce using rule 76 (or_operation)


State 76

   78 and_operation: equality_operation •
   79 equality_operation: equality_operation • EQUALS relational_operation
   80                   | equality_operation • DIFFERENT relational_operation

    EQUALS     shift, and go to state 115
    DIFFERENT  shift, and go to state 116

    OR     reduce using rule 78 (and_operation)
    AND    reduce using rule 78 (and_operation)
    SEMIC  reduce using rule 78 (and_operation)


State 77

   81 equality_operation: relational_operation •
   82 relational_operation: relational_operation • SMALLER negation_operation
   83                     | relational_operation • GREATER negation_operation
   84                     | relational_operation • SMALLEQ negation_operation
   85                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 117
    GREATER  shift, and go to state 118
    SMALLEQ  shift, and go to state 119
    GREATEQ  shift, and go to state 120

    OR         reduce using rule 81 (equality_operation)
    AND        reduce using rule 81 (equality_operation)
    EQUALS     reduce using rule 81 (equality_operation)
    DIFFERENT  reduce using rule 81 (equality_operation)
    SEMIC      reduce using rule 81 (equality_operation)


State 78

   86 relational_operation: negation_operation •

    OR         reduce using rule 86 (relational_operation)
    AND        reduce using rule 86 (relational_operation)
    SMALLER    reduce using rule 86 (relational_operation)
    GREATER    reduce using rule 86 (relational_operation)
    SMALLEQ    reduce using rule 86 (relational_operation)
    GREATEQ    reduce using rule 86 (relational_operation)
    EQUALS     reduce using rule 86 (relational_operation)
    DIFFERENT  reduce using rule 86 (relational_operation)
    SEMIC      reduce using rule 86 (relational_operation)


State 79

   50 expression: func_call •

    SEMIC  reduce using rule 50 (expression)


State 80

   72 operation: in_set •

    SEMIC  reduce using rule 72 (operation)


State 81

   51 expression: assign_value •

    SEMIC  reduce using rule 51 (expression)


State 82

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC •

    $end  reduce using rule 12 (func_dec)
    TYPE  reduce using rule 12 (func_dec)


State 83

   95 assign_value: ID ASSIGN • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression            go to state 121
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 84

   89 func_call: ID PARENL • args_list PARENR

    ID          shift, and go to state 239
    STRING      shift, and go to state 240
    CHAR        shift, and go to state 241
    EMPTY       shift, and go to state 242
    ERRORTOKEN  shift, and go to state 243
    INTEGER     shift, and go to state 244
    DECIMAL     shift, and go to state 245
    PARENL      shift, and go to state 246

    COMMA   reduce using rule 94 (args_list)
    PARENR  reduce using rule 94 (args_list)

    term       go to state 122
    math_term  go to state 123
    str_term   go to state 247
    args_list  go to state 124


State 85

   45 var_dec: TYPE ID • SEMIC

    SEMIC  shift, and go to state 248


State 86

   54 math_term: ID •

    ADD        reduce using rule 54 (math_term)
    SUB        reduce using rule 54 (math_term)
    MULT       reduce using rule 54 (math_term)
    DIV        reduce using rule 54 (math_term)
    OR         reduce using rule 54 (math_term)
    AND        reduce using rule 54 (math_term)
    SMALLER    reduce using rule 54 (math_term)
    GREATER    reduce using rule 54 (math_term)
    SMALLEQ    reduce using rule 54 (math_term)
    GREATEQ    reduce using rule 54 (math_term)
    EQUALS     reduce using rule 54 (math_term)
    DIFFERENT  reduce using rule 54 (math_term)
    SEMIC      reduce using rule 54 (math_term)


State 87

   67 math_op_muldiv: math_term •

    ADD        reduce using rule 67 (math_op_muldiv)
    SUB        reduce using rule 67 (math_op_muldiv)
    MULT       reduce using rule 67 (math_op_muldiv)
    DIV        reduce using rule 67 (math_op_muldiv)
    OR         reduce using rule 67 (math_op_muldiv)
    AND        reduce using rule 67 (math_op_muldiv)
    SMALLER    reduce using rule 67 (math_op_muldiv)
    GREATER    reduce using rule 67 (math_op_muldiv)
    SMALLEQ    reduce using rule 67 (math_op_muldiv)
    GREATEQ    reduce using rule 67 (math_op_muldiv)
    EQUALS     reduce using rule 67 (math_op_muldiv)
    DIFFERENT  reduce using rule 67 (math_op_muldiv)
    SEMIC      reduce using rule 67 (math_op_muldiv)


State 88

   62 math_op: math_op • ADD math_op_muldiv
   63        | math_op • SUB math_op_muldiv
   87 negation_operation: NEG math_op •

    ADD  shift, and go to state 109
    SUB  shift, and go to state 110

    OR         reduce using rule 87 (negation_operation)
    AND        reduce using rule 87 (negation_operation)
    SMALLER    reduce using rule 87 (negation_operation)
    GREATER    reduce using rule 87 (negation_operation)
    SMALLEQ    reduce using rule 87 (negation_operation)
    GREATEQ    reduce using rule 87 (negation_operation)
    EQUALS     reduce using rule 87 (negation_operation)
    DIFFERENT  reduce using rule 87 (negation_operation)
    SEMIC      reduce using rule 87 (negation_operation)


State 89

   39 if_statement: IF PARENL • operation PARENR

    ID          shift, and go to state 249
    STRING      shift, and go to state 220
    CHAR        shift, and go to state 221
    EMPTY       shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    PARENL      shift, and go to state 203

    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 103
    math_op               go to state 207
    math_op_muldiv        go to state 208
    operation             go to state 125
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    in_set                go to state 217


State 90

   31 for_statement: FOR PARENL • for_body PARENR

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55
    SEMIC       shift, and go to state 126

    expression_statement  go to state 127
    for_body              go to state 128
    expression            go to state 250
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 91

   46 io_ops: READ PARENL • ID PARENR SEMIC

    ID  shift, and go to state 129


State 92

   47 io_ops: WRITE PARENL • expression PARENR SEMIC

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 130
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 93

   48 io_ops: WRITELN PARENL • expression PARENR SEMIC

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 131
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 94

   44 ret_st: RETURN expression • SEMIC

    SEMIC  shift, and go to state 132


State 95

   73 operation: ISTYPE PARENL • expression PARENR

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 133
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 96

   68 set_op: ADDSET PARENL • set_op PARENR

    ID          shift, and go to state 249
    STRING      shift, and go to state 220
    CHAR        shift, and go to state 221
    EMPTY       shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 103
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 134
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    in_set                go to state 217


State 97

   69 set_op: REMOVE PARENL • set_op PARENR

    ID          shift, and go to state 249
    STRING      shift, and go to state 220
    CHAR        shift, and go to state 221
    EMPTY       shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 103
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 135
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    in_set                go to state 217


State 98

   70 set_op: EXISTS PARENL • set_op PARENR

    ID          shift, and go to state 249
    STRING      shift, and go to state 220
    CHAR        shift, and go to state 221
    EMPTY       shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 103
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 136
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    in_set                go to state 217


State 99

   32 forall_statement: FORALL PARENL • in_set PARENR

    ID          shift, and go to state 251
    STRING      shift, and go to state 220
    CHAR        shift, and go to state 221
    EMPTY       shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    INTEGER     shift, and go to state 252
    DECIMAL     shift, and go to state 253
    PARENL      shift, and go to state 254

    term       go to state 204
    math_term  go to state 255
    str_term   go to state 103
    in_set     go to state 137


State 100

   57 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 138


State 101

   28 basic_ops: for_statement STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 139


State 102

   30 basic_ops: forall_statement STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 140


State 103

   53 term: str_term •

    IN  reduce using rule 53 (term)


State 104

   29 basic_ops: forall_statement set_op • SEMIC

    SEMIC  shift, and go to state 141


State 105

   37 if_ops: if_statement STFUNC • statement_list ENDFUNC
   38       | if_statement STFUNC • statement_list ENDFUNC else_statement

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 142


State 106

   35 if_ops: if_statement statement •
   36       | if_statement statement • else_statement

    ELSE  shift, and go to state 143

    ID          reduce using rule 35 (if_ops)
    TYPE        reduce using rule 35 (if_ops)
    STRING      reduce using rule 35 (if_ops)
    CHAR        reduce using rule 35 (if_ops)
    EMPTY       reduce using rule 35 (if_ops)
    ERRORTOKEN  reduce using rule 35 (if_ops)
    INTEGER     reduce using rule 35 (if_ops)
    DECIMAL     reduce using rule 35 (if_ops)
    NEG         reduce using rule 35 (if_ops)
    IF          reduce using rule 35 (if_ops)
    FOR         reduce using rule 35 (if_ops)
    READ        reduce using rule 35 (if_ops)
    WRITE       reduce using rule 35 (if_ops)
    WRITELN     reduce using rule 35 (if_ops)
    RETURN      reduce using rule 35 (if_ops)
    ISTYPE      reduce using rule 35 (if_ops)
    ADDSET      reduce using rule 35 (if_ops)
    REMOVE      reduce using rule 35 (if_ops)
    EXISTS      reduce using rule 35 (if_ops)
    FORALL      reduce using rule 35 (if_ops)
    ENDFUNC     reduce using rule 35 (if_ops)
    PARENL      reduce using rule 35 (if_ops)

    else_statement  go to state 144


State 107

   26 expression_statement: expression SEMIC •

    ID          reduce using rule 26 (expression_statement)
    TYPE        reduce using rule 26 (expression_statement)
    STRING      reduce using rule 26 (expression_statement)
    CHAR        reduce using rule 26 (expression_statement)
    EMPTY       reduce using rule 26 (expression_statement)
    ERRORTOKEN  reduce using rule 26 (expression_statement)
    INTEGER     reduce using rule 26 (expression_statement)
    DECIMAL     reduce using rule 26 (expression_statement)
    NEG         reduce using rule 26 (expression_statement)
    IF          reduce using rule 26 (expression_statement)
    FOR         reduce using rule 26 (expression_statement)
    READ        reduce using rule 26 (expression_statement)
    WRITE       reduce using rule 26 (expression_statement)
    WRITELN     reduce using rule 26 (expression_statement)
    RETURN      reduce using rule 26 (expression_statement)
    ISTYPE      reduce using rule 26 (expression_statement)
    ADDSET      reduce using rule 26 (expression_statement)
    REMOVE      reduce using rule 26 (expression_statement)
    EXISTS      reduce using rule 26 (expression_statement)
    FORALL      reduce using rule 26 (expression_statement)
    ENDFUNC     reduce using rule 26 (expression_statement)
    PARENL      reduce using rule 26 (expression_statement)


State 108

   91 in_set: term IN • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression            go to state 145
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 109

   62 math_op: math_op ADD • math_op_muldiv

    ID       shift, and go to state 86
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    math_term       go to state 87
    math_op_muldiv  go to state 146


State 110

   63 math_op: math_op SUB • math_op_muldiv

    ID       shift, and go to state 86
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    math_term       go to state 87
    math_op_muldiv  go to state 147


State 111

   66 math_op_muldiv: math_op_muldiv MULT • math_term

    ID       shift, and go to state 86
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    math_term  go to state 148


State 112

   65 math_op_muldiv: math_op_muldiv DIV • math_term

    ID       shift, and go to state 86
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    math_term  go to state 149


State 113

   75 or_operation: or_operation OR • and_operation

    ID       shift, and go to state 86
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 42
    PARENL   shift, and go to state 190

    math_term             go to state 87
    math_op               go to state 70
    math_op_muldiv        go to state 71
    and_operation         go to state 150
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78


State 114

   77 and_operation: and_operation AND • equality_operation

    ID       shift, and go to state 86
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 42
    PARENL   shift, and go to state 190

    math_term             go to state 87
    math_op               go to state 70
    math_op_muldiv        go to state 71
    equality_operation    go to state 151
    relational_operation  go to state 77
    negation_operation    go to state 78


State 115

   79 equality_operation: equality_operation EQUALS • relational_operation

    ID       shift, and go to state 86
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 42
    PARENL   shift, and go to state 190

    math_term             go to state 87
    math_op               go to state 70
    math_op_muldiv        go to state 71
    relational_operation  go to state 152
    negation_operation    go to state 78


State 116

   80 equality_operation: equality_operation DIFFERENT • relational_operation

    ID       shift, and go to state 86
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 42
    PARENL   shift, and go to state 190

    math_term             go to state 87
    math_op               go to state 70
    math_op_muldiv        go to state 71
    relational_operation  go to state 153
    negation_operation    go to state 78


State 117

   82 relational_operation: relational_operation SMALLER • negation_operation

    ID       shift, and go to state 86
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 42
    PARENL   shift, and go to state 190

    math_term           go to state 87
    math_op             go to state 70
    math_op_muldiv      go to state 71
    negation_operation  go to state 154


State 118

   83 relational_operation: relational_operation GREATER • negation_operation

    ID       shift, and go to state 86
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 42
    PARENL   shift, and go to state 190

    math_term           go to state 87
    math_op             go to state 70
    math_op_muldiv      go to state 71
    negation_operation  go to state 155


State 119

   84 relational_operation: relational_operation SMALLEQ • negation_operation

    ID       shift, and go to state 86
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 42
    PARENL   shift, and go to state 190

    math_term           go to state 87
    math_op             go to state 70
    math_op_muldiv      go to state 71
    negation_operation  go to state 156


State 120

   85 relational_operation: relational_operation GREATEQ • negation_operation

    ID       shift, and go to state 86
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 42
    PARENL   shift, and go to state 190

    math_term           go to state 87
    math_op             go to state 70
    math_op_muldiv      go to state 71
    negation_operation  go to state 157


State 121

   95 assign_value: ID ASSIGN expression •

    SEMIC  reduce using rule 95 (assign_value)


State 122

   93 args_list: term •

    COMMA   reduce using rule 93 (args_list)
    PARENR  reduce using rule 93 (args_list)


State 123

   52 term: math_term •

    COMMA   reduce using rule 52 (term)
    PARENR  reduce using rule 52 (term)


State 124

   89 func_call: ID PARENL args_list • PARENR
   92 args_list: args_list • COMMA term

    COMMA   shift, and go to state 158
    PARENR  shift, and go to state 159


State 125

   39 if_statement: IF PARENL operation • PARENR

    PARENR  shift, and go to state 160


State 126

   34 for_body: SEMIC • expression_statement expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression_statement  go to state 161
    expression            go to state 250
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 127

   33 for_body: expression_statement • expression_statement expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression_statement  go to state 162
    expression            go to state 250
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 128

   31 for_statement: FOR PARENL for_body • PARENR

    PARENR  shift, and go to state 163


State 129

   46 io_ops: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 164


State 130

   47 io_ops: WRITE PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 165


State 131

   48 io_ops: WRITELN PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 166


State 132

   44 ret_st: RETURN expression SEMIC •

    ID          reduce using rule 44 (ret_st)
    TYPE        reduce using rule 44 (ret_st)
    STRING      reduce using rule 44 (ret_st)
    CHAR        reduce using rule 44 (ret_st)
    EMPTY       reduce using rule 44 (ret_st)
    ERRORTOKEN  reduce using rule 44 (ret_st)
    INTEGER     reduce using rule 44 (ret_st)
    DECIMAL     reduce using rule 44 (ret_st)
    NEG         reduce using rule 44 (ret_st)
    IF          reduce using rule 44 (ret_st)
    FOR         reduce using rule 44 (ret_st)
    READ        reduce using rule 44 (ret_st)
    WRITE       reduce using rule 44 (ret_st)
    WRITELN     reduce using rule 44 (ret_st)
    RETURN      reduce using rule 44 (ret_st)
    ISTYPE      reduce using rule 44 (ret_st)
    ADDSET      reduce using rule 44 (ret_st)
    REMOVE      reduce using rule 44 (ret_st)
    EXISTS      reduce using rule 44 (ret_st)
    FORALL      reduce using rule 44 (ret_st)
    ENDFUNC     reduce using rule 44 (ret_st)
    PARENL      reduce using rule 44 (ret_st)


State 133

   73 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 167


State 134

   68 set_op: ADDSET PARENL set_op • PARENR

    PARENR  shift, and go to state 168


State 135

   69 set_op: REMOVE PARENL set_op • PARENR

    PARENR  shift, and go to state 169


State 136

   70 set_op: EXISTS PARENL set_op • PARENR

    PARENR  shift, and go to state 170


State 137

   32 forall_statement: FORALL PARENL in_set • PARENR

    PARENR  shift, and go to state 171


State 138

   57 math_term: PARENL expression PARENR •

    ADD        reduce using rule 57 (math_term)
    SUB        reduce using rule 57 (math_term)
    MULT       reduce using rule 57 (math_term)
    DIV        reduce using rule 57 (math_term)
    OR         reduce using rule 57 (math_term)
    AND        reduce using rule 57 (math_term)
    SMALLER    reduce using rule 57 (math_term)
    GREATER    reduce using rule 57 (math_term)
    SMALLEQ    reduce using rule 57 (math_term)
    GREATEQ    reduce using rule 57 (math_term)
    EQUALS     reduce using rule 57 (math_term)
    DIFFERENT  reduce using rule 57 (math_term)
    IN         reduce using rule 57 (math_term)
    SEMIC      reduce using rule 57 (math_term)


State 139

   18 statement_list: statement_list • statement
   28 basic_ops: for_statement STFUNC statement_list • ENDFUNC

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 172
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 140

   18 statement_list: statement_list • statement
   30 basic_ops: forall_statement STFUNC statement_list • ENDFUNC

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 173
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 141

   29 basic_ops: forall_statement set_op SEMIC •

    ID          reduce using rule 29 (basic_ops)
    TYPE        reduce using rule 29 (basic_ops)
    STRING      reduce using rule 29 (basic_ops)
    CHAR        reduce using rule 29 (basic_ops)
    EMPTY       reduce using rule 29 (basic_ops)
    ERRORTOKEN  reduce using rule 29 (basic_ops)
    INTEGER     reduce using rule 29 (basic_ops)
    DECIMAL     reduce using rule 29 (basic_ops)
    NEG         reduce using rule 29 (basic_ops)
    IF          reduce using rule 29 (basic_ops)
    FOR         reduce using rule 29 (basic_ops)
    READ        reduce using rule 29 (basic_ops)
    WRITE       reduce using rule 29 (basic_ops)
    WRITELN     reduce using rule 29 (basic_ops)
    RETURN      reduce using rule 29 (basic_ops)
    ISTYPE      reduce using rule 29 (basic_ops)
    ADDSET      reduce using rule 29 (basic_ops)
    REMOVE      reduce using rule 29 (basic_ops)
    EXISTS      reduce using rule 29 (basic_ops)
    FORALL      reduce using rule 29 (basic_ops)
    ENDFUNC     reduce using rule 29 (basic_ops)
    PARENL      reduce using rule 29 (basic_ops)


State 142

   18 statement_list: statement_list • statement
   37 if_ops: if_statement STFUNC statement_list • ENDFUNC
   38       | if_statement STFUNC statement_list • ENDFUNC else_statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 174
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 143

   41 else_statement: ELSE • $@5 statement
   43               | ELSE • $@6 STFUNC statement_list ENDFUNC

    ID          reduce using rule 40 ($@5)
    TYPE        reduce using rule 40 ($@5)
    STRING      reduce using rule 40 ($@5)
    CHAR        reduce using rule 40 ($@5)
    EMPTY       reduce using rule 40 ($@5)
    ERRORTOKEN  reduce using rule 40 ($@5)
    INTEGER     reduce using rule 40 ($@5)
    DECIMAL     reduce using rule 40 ($@5)
    NEG         reduce using rule 40 ($@5)
    IF          reduce using rule 40 ($@5)
    FOR         reduce using rule 40 ($@5)
    READ        reduce using rule 40 ($@5)
    WRITE       reduce using rule 40 ($@5)
    WRITELN     reduce using rule 40 ($@5)
    RETURN      reduce using rule 40 ($@5)
    ISTYPE      reduce using rule 40 ($@5)
    ADDSET      reduce using rule 40 ($@5)
    REMOVE      reduce using rule 40 ($@5)
    EXISTS      reduce using rule 40 ($@5)
    FORALL      reduce using rule 40 ($@5)
    STFUNC      reduce using rule 42 ($@6)
    PARENL      reduce using rule 40 ($@5)

    $@5  go to state 175
    $@6  go to state 176


State 144

   36 if_ops: if_statement statement else_statement •

    ID          reduce using rule 36 (if_ops)
    TYPE        reduce using rule 36 (if_ops)
    STRING      reduce using rule 36 (if_ops)
    CHAR        reduce using rule 36 (if_ops)
    EMPTY       reduce using rule 36 (if_ops)
    ERRORTOKEN  reduce using rule 36 (if_ops)
    INTEGER     reduce using rule 36 (if_ops)
    DECIMAL     reduce using rule 36 (if_ops)
    NEG         reduce using rule 36 (if_ops)
    IF          reduce using rule 36 (if_ops)
    FOR         reduce using rule 36 (if_ops)
    READ        reduce using rule 36 (if_ops)
    WRITE       reduce using rule 36 (if_ops)
    WRITELN     reduce using rule 36 (if_ops)
    RETURN      reduce using rule 36 (if_ops)
    ISTYPE      reduce using rule 36 (if_ops)
    ADDSET      reduce using rule 36 (if_ops)
    REMOVE      reduce using rule 36 (if_ops)
    EXISTS      reduce using rule 36 (if_ops)
    FORALL      reduce using rule 36 (if_ops)
    ENDFUNC     reduce using rule 36 (if_ops)
    PARENL      reduce using rule 36 (if_ops)


State 145

   91 in_set: term IN expression •

    SEMIC  reduce using rule 91 (in_set)


State 146

   62 math_op: math_op ADD math_op_muldiv •
   65 math_op_muldiv: math_op_muldiv • DIV math_term
   66               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 111
    DIV   shift, and go to state 112

    ADD        reduce using rule 62 (math_op)
    SUB        reduce using rule 62 (math_op)
    OR         reduce using rule 62 (math_op)
    AND        reduce using rule 62 (math_op)
    SMALLER    reduce using rule 62 (math_op)
    GREATER    reduce using rule 62 (math_op)
    SMALLEQ    reduce using rule 62 (math_op)
    GREATEQ    reduce using rule 62 (math_op)
    EQUALS     reduce using rule 62 (math_op)
    DIFFERENT  reduce using rule 62 (math_op)
    SEMIC      reduce using rule 62 (math_op)


State 147

   63 math_op: math_op SUB math_op_muldiv •
   65 math_op_muldiv: math_op_muldiv • DIV math_term
   66               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 111
    DIV   shift, and go to state 112

    ADD        reduce using rule 63 (math_op)
    SUB        reduce using rule 63 (math_op)
    OR         reduce using rule 63 (math_op)
    AND        reduce using rule 63 (math_op)
    SMALLER    reduce using rule 63 (math_op)
    GREATER    reduce using rule 63 (math_op)
    SMALLEQ    reduce using rule 63 (math_op)
    GREATEQ    reduce using rule 63 (math_op)
    EQUALS     reduce using rule 63 (math_op)
    DIFFERENT  reduce using rule 63 (math_op)
    SEMIC      reduce using rule 63 (math_op)


State 148

   66 math_op_muldiv: math_op_muldiv MULT math_term •

    ADD        reduce using rule 66 (math_op_muldiv)
    SUB        reduce using rule 66 (math_op_muldiv)
    MULT       reduce using rule 66 (math_op_muldiv)
    DIV        reduce using rule 66 (math_op_muldiv)
    OR         reduce using rule 66 (math_op_muldiv)
    AND        reduce using rule 66 (math_op_muldiv)
    SMALLER    reduce using rule 66 (math_op_muldiv)
    GREATER    reduce using rule 66 (math_op_muldiv)
    SMALLEQ    reduce using rule 66 (math_op_muldiv)
    GREATEQ    reduce using rule 66 (math_op_muldiv)
    EQUALS     reduce using rule 66 (math_op_muldiv)
    DIFFERENT  reduce using rule 66 (math_op_muldiv)
    SEMIC      reduce using rule 66 (math_op_muldiv)


State 149

   65 math_op_muldiv: math_op_muldiv DIV math_term •

    ADD        reduce using rule 65 (math_op_muldiv)
    SUB        reduce using rule 65 (math_op_muldiv)
    MULT       reduce using rule 65 (math_op_muldiv)
    DIV        reduce using rule 65 (math_op_muldiv)
    OR         reduce using rule 65 (math_op_muldiv)
    AND        reduce using rule 65 (math_op_muldiv)
    SMALLER    reduce using rule 65 (math_op_muldiv)
    GREATER    reduce using rule 65 (math_op_muldiv)
    SMALLEQ    reduce using rule 65 (math_op_muldiv)
    GREATEQ    reduce using rule 65 (math_op_muldiv)
    EQUALS     reduce using rule 65 (math_op_muldiv)
    DIFFERENT  reduce using rule 65 (math_op_muldiv)
    SEMIC      reduce using rule 65 (math_op_muldiv)


State 150

   75 or_operation: or_operation OR and_operation •
   77 and_operation: and_operation • AND equality_operation

    AND  shift, and go to state 114

    OR     reduce using rule 75 (or_operation)
    SEMIC  reduce using rule 75 (or_operation)


State 151

   77 and_operation: and_operation AND equality_operation •
   79 equality_operation: equality_operation • EQUALS relational_operation
   80                   | equality_operation • DIFFERENT relational_operation

    EQUALS     shift, and go to state 115
    DIFFERENT  shift, and go to state 116

    OR     reduce using rule 77 (and_operation)
    AND    reduce using rule 77 (and_operation)
    SEMIC  reduce using rule 77 (and_operation)


State 152

   79 equality_operation: equality_operation EQUALS relational_operation •
   82 relational_operation: relational_operation • SMALLER negation_operation
   83                     | relational_operation • GREATER negation_operation
   84                     | relational_operation • SMALLEQ negation_operation
   85                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 117
    GREATER  shift, and go to state 118
    SMALLEQ  shift, and go to state 119
    GREATEQ  shift, and go to state 120

    OR         reduce using rule 79 (equality_operation)
    AND        reduce using rule 79 (equality_operation)
    EQUALS     reduce using rule 79 (equality_operation)
    DIFFERENT  reduce using rule 79 (equality_operation)
    SEMIC      reduce using rule 79 (equality_operation)


State 153

   80 equality_operation: equality_operation DIFFERENT relational_operation •
   82 relational_operation: relational_operation • SMALLER negation_operation
   83                     | relational_operation • GREATER negation_operation
   84                     | relational_operation • SMALLEQ negation_operation
   85                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 117
    GREATER  shift, and go to state 118
    SMALLEQ  shift, and go to state 119
    GREATEQ  shift, and go to state 120

    OR         reduce using rule 80 (equality_operation)
    AND        reduce using rule 80 (equality_operation)
    EQUALS     reduce using rule 80 (equality_operation)
    DIFFERENT  reduce using rule 80 (equality_operation)
    SEMIC      reduce using rule 80 (equality_operation)


State 154

   82 relational_operation: relational_operation SMALLER negation_operation •

    OR         reduce using rule 82 (relational_operation)
    AND        reduce using rule 82 (relational_operation)
    SMALLER    reduce using rule 82 (relational_operation)
    GREATER    reduce using rule 82 (relational_operation)
    SMALLEQ    reduce using rule 82 (relational_operation)
    GREATEQ    reduce using rule 82 (relational_operation)
    EQUALS     reduce using rule 82 (relational_operation)
    DIFFERENT  reduce using rule 82 (relational_operation)
    SEMIC      reduce using rule 82 (relational_operation)


State 155

   83 relational_operation: relational_operation GREATER negation_operation •

    OR         reduce using rule 83 (relational_operation)
    AND        reduce using rule 83 (relational_operation)
    SMALLER    reduce using rule 83 (relational_operation)
    GREATER    reduce using rule 83 (relational_operation)
    SMALLEQ    reduce using rule 83 (relational_operation)
    GREATEQ    reduce using rule 83 (relational_operation)
    EQUALS     reduce using rule 83 (relational_operation)
    DIFFERENT  reduce using rule 83 (relational_operation)
    SEMIC      reduce using rule 83 (relational_operation)


State 156

   84 relational_operation: relational_operation SMALLEQ negation_operation •

    OR         reduce using rule 84 (relational_operation)
    AND        reduce using rule 84 (relational_operation)
    SMALLER    reduce using rule 84 (relational_operation)
    GREATER    reduce using rule 84 (relational_operation)
    SMALLEQ    reduce using rule 84 (relational_operation)
    GREATEQ    reduce using rule 84 (relational_operation)
    EQUALS     reduce using rule 84 (relational_operation)
    DIFFERENT  reduce using rule 84 (relational_operation)
    SEMIC      reduce using rule 84 (relational_operation)


State 157

   85 relational_operation: relational_operation GREATEQ negation_operation •

    OR         reduce using rule 85 (relational_operation)
    AND        reduce using rule 85 (relational_operation)
    SMALLER    reduce using rule 85 (relational_operation)
    GREATER    reduce using rule 85 (relational_operation)
    SMALLEQ    reduce using rule 85 (relational_operation)
    GREATEQ    reduce using rule 85 (relational_operation)
    EQUALS     reduce using rule 85 (relational_operation)
    DIFFERENT  reduce using rule 85 (relational_operation)
    SEMIC      reduce using rule 85 (relational_operation)


State 158

   92 args_list: args_list COMMA • term

    ID          shift, and go to state 239
    STRING      shift, and go to state 240
    CHAR        shift, and go to state 241
    EMPTY       shift, and go to state 242
    ERRORTOKEN  shift, and go to state 243
    INTEGER     shift, and go to state 244
    DECIMAL     shift, and go to state 245
    PARENL      shift, and go to state 246

    term       go to state 177
    math_term  go to state 123
    str_term   go to state 247


State 159

   89 func_call: ID PARENL args_list PARENR •

    SEMIC  reduce using rule 89 (func_call)


State 160

   39 if_statement: IF PARENL operation PARENR •

    ID          reduce using rule 39 (if_statement)
    TYPE        reduce using rule 39 (if_statement)
    STRING      reduce using rule 39 (if_statement)
    CHAR        reduce using rule 39 (if_statement)
    EMPTY       reduce using rule 39 (if_statement)
    ERRORTOKEN  reduce using rule 39 (if_statement)
    INTEGER     reduce using rule 39 (if_statement)
    DECIMAL     reduce using rule 39 (if_statement)
    NEG         reduce using rule 39 (if_statement)
    IF          reduce using rule 39 (if_statement)
    FOR         reduce using rule 39 (if_statement)
    READ        reduce using rule 39 (if_statement)
    WRITE       reduce using rule 39 (if_statement)
    WRITELN     reduce using rule 39 (if_statement)
    RETURN      reduce using rule 39 (if_statement)
    ISTYPE      reduce using rule 39 (if_statement)
    ADDSET      reduce using rule 39 (if_statement)
    REMOVE      reduce using rule 39 (if_statement)
    EXISTS      reduce using rule 39 (if_statement)
    FORALL      reduce using rule 39 (if_statement)
    STFUNC      reduce using rule 39 (if_statement)
    PARENL      reduce using rule 39 (if_statement)


State 161

   34 for_body: SEMIC expression_statement • expression

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 178
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 162

   33 for_body: expression_statement expression_statement • expression

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 179
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 163

   31 for_statement: FOR PARENL for_body PARENR •

    STFUNC  reduce using rule 31 (for_statement)


State 164

   46 io_ops: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 180


State 165

   47 io_ops: WRITE PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 181


State 166

   48 io_ops: WRITELN PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 182


State 167

   73 operation: ISTYPE PARENL expression PARENR •

    SEMIC  reduce using rule 73 (operation)


State 168

   68 set_op: ADDSET PARENL set_op PARENR •

    SEMIC  reduce using rule 68 (set_op)


State 169

   69 set_op: REMOVE PARENL set_op PARENR •

    SEMIC  reduce using rule 69 (set_op)


State 170

   70 set_op: EXISTS PARENL set_op PARENR •

    SEMIC  reduce using rule 70 (set_op)


State 171

   32 forall_statement: FORALL PARENL in_set PARENR •

    ID          reduce using rule 32 (forall_statement)
    STRING      reduce using rule 32 (forall_statement)
    CHAR        reduce using rule 32 (forall_statement)
    EMPTY       reduce using rule 32 (forall_statement)
    ERRORTOKEN  reduce using rule 32 (forall_statement)
    INTEGER     reduce using rule 32 (forall_statement)
    DECIMAL     reduce using rule 32 (forall_statement)
    NEG         reduce using rule 32 (forall_statement)
    ISTYPE      reduce using rule 32 (forall_statement)
    ADDSET      reduce using rule 32 (forall_statement)
    REMOVE      reduce using rule 32 (forall_statement)
    EXISTS      reduce using rule 32 (forall_statement)
    STFUNC      reduce using rule 32 (forall_statement)
    PARENL      reduce using rule 32 (forall_statement)


State 172

   28 basic_ops: for_statement STFUNC statement_list ENDFUNC •

    ID          reduce using rule 28 (basic_ops)
    TYPE        reduce using rule 28 (basic_ops)
    STRING      reduce using rule 28 (basic_ops)
    CHAR        reduce using rule 28 (basic_ops)
    EMPTY       reduce using rule 28 (basic_ops)
    ERRORTOKEN  reduce using rule 28 (basic_ops)
    INTEGER     reduce using rule 28 (basic_ops)
    DECIMAL     reduce using rule 28 (basic_ops)
    NEG         reduce using rule 28 (basic_ops)
    IF          reduce using rule 28 (basic_ops)
    FOR         reduce using rule 28 (basic_ops)
    READ        reduce using rule 28 (basic_ops)
    WRITE       reduce using rule 28 (basic_ops)
    WRITELN     reduce using rule 28 (basic_ops)
    RETURN      reduce using rule 28 (basic_ops)
    ISTYPE      reduce using rule 28 (basic_ops)
    ADDSET      reduce using rule 28 (basic_ops)
    REMOVE      reduce using rule 28 (basic_ops)
    EXISTS      reduce using rule 28 (basic_ops)
    FORALL      reduce using rule 28 (basic_ops)
    ENDFUNC     reduce using rule 28 (basic_ops)
    PARENL      reduce using rule 28 (basic_ops)


State 173

   30 basic_ops: forall_statement STFUNC statement_list ENDFUNC •

    ID          reduce using rule 30 (basic_ops)
    TYPE        reduce using rule 30 (basic_ops)
    STRING      reduce using rule 30 (basic_ops)
    CHAR        reduce using rule 30 (basic_ops)
    EMPTY       reduce using rule 30 (basic_ops)
    ERRORTOKEN  reduce using rule 30 (basic_ops)
    INTEGER     reduce using rule 30 (basic_ops)
    DECIMAL     reduce using rule 30 (basic_ops)
    NEG         reduce using rule 30 (basic_ops)
    IF          reduce using rule 30 (basic_ops)
    FOR         reduce using rule 30 (basic_ops)
    READ        reduce using rule 30 (basic_ops)
    WRITE       reduce using rule 30 (basic_ops)
    WRITELN     reduce using rule 30 (basic_ops)
    RETURN      reduce using rule 30 (basic_ops)
    ISTYPE      reduce using rule 30 (basic_ops)
    ADDSET      reduce using rule 30 (basic_ops)
    REMOVE      reduce using rule 30 (basic_ops)
    EXISTS      reduce using rule 30 (basic_ops)
    FORALL      reduce using rule 30 (basic_ops)
    ENDFUNC     reduce using rule 30 (basic_ops)
    PARENL      reduce using rule 30 (basic_ops)


State 174

   37 if_ops: if_statement STFUNC statement_list ENDFUNC •
   38       | if_statement STFUNC statement_list ENDFUNC • else_statement

    ELSE  shift, and go to state 143

    ID          reduce using rule 37 (if_ops)
    TYPE        reduce using rule 37 (if_ops)
    STRING      reduce using rule 37 (if_ops)
    CHAR        reduce using rule 37 (if_ops)
    EMPTY       reduce using rule 37 (if_ops)
    ERRORTOKEN  reduce using rule 37 (if_ops)
    INTEGER     reduce using rule 37 (if_ops)
    DECIMAL     reduce using rule 37 (if_ops)
    NEG         reduce using rule 37 (if_ops)
    IF          reduce using rule 37 (if_ops)
    FOR         reduce using rule 37 (if_ops)
    READ        reduce using rule 37 (if_ops)
    WRITE       reduce using rule 37 (if_ops)
    WRITELN     reduce using rule 37 (if_ops)
    RETURN      reduce using rule 37 (if_ops)
    ISTYPE      reduce using rule 37 (if_ops)
    ADDSET      reduce using rule 37 (if_ops)
    REMOVE      reduce using rule 37 (if_ops)
    EXISTS      reduce using rule 37 (if_ops)
    FORALL      reduce using rule 37 (if_ops)
    ENDFUNC     reduce using rule 37 (if_ops)
    PARENL      reduce using rule 37 (if_ops)

    else_statement  go to state 183


State 175

   41 else_statement: ELSE $@5 • statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    PARENL      shift, and go to state 55

    statement             go to state 184
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 176

   43 else_statement: ELSE $@6 • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 185


State 177

   92 args_list: args_list COMMA term •

    COMMA   reduce using rule 92 (args_list)
    PARENR  reduce using rule 92 (args_list)


State 178

   34 for_body: SEMIC expression_statement expression •

    PARENR  reduce using rule 34 (for_body)


State 179

   33 for_body: expression_statement expression_statement expression •

    PARENR  reduce using rule 33 (for_body)


State 180

   46 io_ops: READ PARENL ID PARENR SEMIC •

    ID          reduce using rule 46 (io_ops)
    TYPE        reduce using rule 46 (io_ops)
    STRING      reduce using rule 46 (io_ops)
    CHAR        reduce using rule 46 (io_ops)
    EMPTY       reduce using rule 46 (io_ops)
    ERRORTOKEN  reduce using rule 46 (io_ops)
    INTEGER     reduce using rule 46 (io_ops)
    DECIMAL     reduce using rule 46 (io_ops)
    NEG         reduce using rule 46 (io_ops)
    IF          reduce using rule 46 (io_ops)
    FOR         reduce using rule 46 (io_ops)
    READ        reduce using rule 46 (io_ops)
    WRITE       reduce using rule 46 (io_ops)
    WRITELN     reduce using rule 46 (io_ops)
    RETURN      reduce using rule 46 (io_ops)
    ISTYPE      reduce using rule 46 (io_ops)
    ADDSET      reduce using rule 46 (io_ops)
    REMOVE      reduce using rule 46 (io_ops)
    EXISTS      reduce using rule 46 (io_ops)
    FORALL      reduce using rule 46 (io_ops)
    ENDFUNC     reduce using rule 46 (io_ops)
    PARENL      reduce using rule 46 (io_ops)


State 181

   47 io_ops: WRITE PARENL expression PARENR SEMIC •

    ID          reduce using rule 47 (io_ops)
    TYPE        reduce using rule 47 (io_ops)
    STRING      reduce using rule 47 (io_ops)
    CHAR        reduce using rule 47 (io_ops)
    EMPTY       reduce using rule 47 (io_ops)
    ERRORTOKEN  reduce using rule 47 (io_ops)
    INTEGER     reduce using rule 47 (io_ops)
    DECIMAL     reduce using rule 47 (io_ops)
    NEG         reduce using rule 47 (io_ops)
    IF          reduce using rule 47 (io_ops)
    FOR         reduce using rule 47 (io_ops)
    READ        reduce using rule 47 (io_ops)
    WRITE       reduce using rule 47 (io_ops)
    WRITELN     reduce using rule 47 (io_ops)
    RETURN      reduce using rule 47 (io_ops)
    ISTYPE      reduce using rule 47 (io_ops)
    ADDSET      reduce using rule 47 (io_ops)
    REMOVE      reduce using rule 47 (io_ops)
    EXISTS      reduce using rule 47 (io_ops)
    FORALL      reduce using rule 47 (io_ops)
    ENDFUNC     reduce using rule 47 (io_ops)
    PARENL      reduce using rule 47 (io_ops)


State 182

   48 io_ops: WRITELN PARENL expression PARENR SEMIC •

    ID          reduce using rule 48 (io_ops)
    TYPE        reduce using rule 48 (io_ops)
    STRING      reduce using rule 48 (io_ops)
    CHAR        reduce using rule 48 (io_ops)
    EMPTY       reduce using rule 48 (io_ops)
    ERRORTOKEN  reduce using rule 48 (io_ops)
    INTEGER     reduce using rule 48 (io_ops)
    DECIMAL     reduce using rule 48 (io_ops)
    NEG         reduce using rule 48 (io_ops)
    IF          reduce using rule 48 (io_ops)
    FOR         reduce using rule 48 (io_ops)
    READ        reduce using rule 48 (io_ops)
    WRITE       reduce using rule 48 (io_ops)
    WRITELN     reduce using rule 48 (io_ops)
    RETURN      reduce using rule 48 (io_ops)
    ISTYPE      reduce using rule 48 (io_ops)
    ADDSET      reduce using rule 48 (io_ops)
    REMOVE      reduce using rule 48 (io_ops)
    EXISTS      reduce using rule 48 (io_ops)
    FORALL      reduce using rule 48 (io_ops)
    ENDFUNC     reduce using rule 48 (io_ops)
    PARENL      reduce using rule 48 (io_ops)


State 183

   38 if_ops: if_statement STFUNC statement_list ENDFUNC else_statement •

    ID          reduce using rule 38 (if_ops)
    TYPE        reduce using rule 38 (if_ops)
    STRING      reduce using rule 38 (if_ops)
    CHAR        reduce using rule 38 (if_ops)
    EMPTY       reduce using rule 38 (if_ops)
    ERRORTOKEN  reduce using rule 38 (if_ops)
    INTEGER     reduce using rule 38 (if_ops)
    DECIMAL     reduce using rule 38 (if_ops)
    NEG         reduce using rule 38 (if_ops)
    IF          reduce using rule 38 (if_ops)
    FOR         reduce using rule 38 (if_ops)
    READ        reduce using rule 38 (if_ops)
    WRITE       reduce using rule 38 (if_ops)
    WRITELN     reduce using rule 38 (if_ops)
    RETURN      reduce using rule 38 (if_ops)
    ISTYPE      reduce using rule 38 (if_ops)
    ADDSET      reduce using rule 38 (if_ops)
    REMOVE      reduce using rule 38 (if_ops)
    EXISTS      reduce using rule 38 (if_ops)
    FORALL      reduce using rule 38 (if_ops)
    ENDFUNC     reduce using rule 38 (if_ops)
    PARENL      reduce using rule 38 (if_ops)


State 184

   41 else_statement: ELSE $@5 statement •

    ID          reduce using rule 41 (else_statement)
    TYPE        reduce using rule 41 (else_statement)
    STRING      reduce using rule 41 (else_statement)
    CHAR        reduce using rule 41 (else_statement)
    EMPTY       reduce using rule 41 (else_statement)
    ERRORTOKEN  reduce using rule 41 (else_statement)
    INTEGER     reduce using rule 41 (else_statement)
    DECIMAL     reduce using rule 41 (else_statement)
    NEG         reduce using rule 41 (else_statement)
    IF          reduce using rule 41 (else_statement)
    FOR         reduce using rule 41 (else_statement)
    READ        reduce using rule 41 (else_statement)
    WRITE       reduce using rule 41 (else_statement)
    WRITELN     reduce using rule 41 (else_statement)
    RETURN      reduce using rule 41 (else_statement)
    ISTYPE      reduce using rule 41 (else_statement)
    ADDSET      reduce using rule 41 (else_statement)
    REMOVE      reduce using rule 41 (else_statement)
    EXISTS      reduce using rule 41 (else_statement)
    FORALL      reduce using rule 41 (else_statement)
    ENDFUNC     reduce using rule 41 (else_statement)
    PARENL      reduce using rule 41 (else_statement)


State 185

   43 else_statement: ELSE $@6 STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 186


State 186

   18 statement_list: statement_list • statement
   43 else_statement: ELSE $@6 STFUNC statement_list • ENDFUNC

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 187
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 187

   43 else_statement: ELSE $@6 STFUNC statement_list ENDFUNC •

    ID          reduce using rule 43 (else_statement)
    TYPE        reduce using rule 43 (else_statement)
    STRING      reduce using rule 43 (else_statement)
    CHAR        reduce using rule 43 (else_statement)
    EMPTY       reduce using rule 43 (else_statement)
    ERRORTOKEN  reduce using rule 43 (else_statement)
    INTEGER     reduce using rule 43 (else_statement)
    DECIMAL     reduce using rule 43 (else_statement)
    NEG         reduce using rule 43 (else_statement)
    IF          reduce using rule 43 (else_statement)
    FOR         reduce using rule 43 (else_statement)
    READ        reduce using rule 43 (else_statement)
    WRITE       reduce using rule 43 (else_statement)
    WRITELN     reduce using rule 43 (else_statement)
    RETURN      reduce using rule 43 (else_statement)
    ISTYPE      reduce using rule 43 (else_statement)
    ADDSET      reduce using rule 43 (else_statement)
    REMOVE      reduce using rule 43 (else_statement)
    EXISTS      reduce using rule 43 (else_statement)
    FORALL      reduce using rule 43 (else_statement)
    ENDFUNC     reduce using rule 43 (else_statement)
    PARENL      reduce using rule 43 (else_statement)


State 188

   55 math_term: INTEGER •

    ADD        reduce using rule 55 (math_term)
    SUB        reduce using rule 55 (math_term)
    MULT       reduce using rule 55 (math_term)
    DIV        reduce using rule 55 (math_term)
    OR         reduce using rule 55 (math_term)
    AND        reduce using rule 55 (math_term)
    SMALLER    reduce using rule 55 (math_term)
    GREATER    reduce using rule 55 (math_term)
    SMALLEQ    reduce using rule 55 (math_term)
    GREATEQ    reduce using rule 55 (math_term)
    EQUALS     reduce using rule 55 (math_term)
    DIFFERENT  reduce using rule 55 (math_term)
    SEMIC      reduce using rule 55 (math_term)


State 189

   56 math_term: DECIMAL •

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    SEMIC      reduce using rule 56 (math_term)


State 190

   57 math_term: PARENL • expression PARENR

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 256
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 191

   54 math_term: ID •
   89 func_call: ID • PARENL args_list PARENR
   95 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 257
    PARENL  shift, and go to state 258

    ADD        reduce using rule 54 (math_term)
    SUB        reduce using rule 54 (math_term)
    MULT       reduce using rule 54 (math_term)
    DIV        reduce using rule 54 (math_term)
    OR         reduce using rule 54 (math_term)
    AND        reduce using rule 54 (math_term)
    SMALLER    reduce using rule 54 (math_term)
    GREATER    reduce using rule 54 (math_term)
    SMALLEQ    reduce using rule 54 (math_term)
    GREATEQ    reduce using rule 54 (math_term)
    EQUALS     reduce using rule 54 (math_term)
    DIFFERENT  reduce using rule 54 (math_term)
    IN         reduce using rule 54 (math_term)
    PARENR     reduce using rule 54 (math_term)


State 192

   59 str_term: STRING •

    IN      reduce using rule 59 (str_term)
    PARENR  reduce using rule 59 (str_term)


State 193

   58 str_term: CHAR •

    IN      reduce using rule 58 (str_term)
    PARENR  reduce using rule 58 (str_term)


State 194

   60 str_term: EMPTY •

    IN      reduce using rule 60 (str_term)
    PARENR  reduce using rule 60 (str_term)


State 195

   61 str_term: ERRORTOKEN •

    IN      reduce using rule 61 (str_term)
    PARENR  reduce using rule 61 (str_term)


State 196

   55 math_term: INTEGER •

    ADD        reduce using rule 55 (math_term)
    SUB        reduce using rule 55 (math_term)
    MULT       reduce using rule 55 (math_term)
    DIV        reduce using rule 55 (math_term)
    OR         reduce using rule 55 (math_term)
    AND        reduce using rule 55 (math_term)
    SMALLER    reduce using rule 55 (math_term)
    GREATER    reduce using rule 55 (math_term)
    SMALLEQ    reduce using rule 55 (math_term)
    GREATEQ    reduce using rule 55 (math_term)
    EQUALS     reduce using rule 55 (math_term)
    DIFFERENT  reduce using rule 55 (math_term)
    IN         reduce using rule 55 (math_term)
    PARENR     reduce using rule 55 (math_term)


State 197

   56 math_term: DECIMAL •

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    IN         reduce using rule 56 (math_term)
    PARENR     reduce using rule 56 (math_term)


State 198

   87 negation_operation: NEG • math_op

    ID       shift, and go to state 259
    INTEGER  shift, and go to state 260
    DECIMAL  shift, and go to state 261
    PARENL   shift, and go to state 262

    math_term       go to state 263
    math_op         go to state 264
    math_op_muldiv  go to state 208


State 199

   73 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 265


State 200

   68 set_op: ADDSET • PARENL set_op PARENR

    PARENL  shift, and go to state 266


State 201

   69 set_op: REMOVE • PARENL set_op PARENR

    PARENL  shift, and go to state 267


State 202

   70 set_op: EXISTS • PARENL set_op PARENR

    PARENL  shift, and go to state 268


State 203

   57 math_term: PARENL • expression PARENR

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 269
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 204

   91 in_set: term • IN expression

    IN  shift, and go to state 270


State 205

   52 term: math_term •
   67 math_op_muldiv: math_term •

    ADD        reduce using rule 67 (math_op_muldiv)
    SUB        reduce using rule 67 (math_op_muldiv)
    MULT       reduce using rule 67 (math_op_muldiv)
    DIV        reduce using rule 67 (math_op_muldiv)
    OR         reduce using rule 67 (math_op_muldiv)
    AND        reduce using rule 67 (math_op_muldiv)
    SMALLER    reduce using rule 67 (math_op_muldiv)
    GREATER    reduce using rule 67 (math_op_muldiv)
    SMALLEQ    reduce using rule 67 (math_op_muldiv)
    GREATEQ    reduce using rule 67 (math_op_muldiv)
    EQUALS     reduce using rule 67 (math_op_muldiv)
    DIFFERENT  reduce using rule 67 (math_op_muldiv)
    IN         reduce using rule 52 (term)
    PARENR     reduce using rule 67 (math_op_muldiv)


State 206

   53 term: str_term •
   90 func_call: str_term •

    IN      reduce using rule 53 (term)
    PARENR  reduce using rule 90 (func_call)


State 207

   62 math_op: math_op • ADD math_op_muldiv
   63        | math_op • SUB math_op_muldiv
   88 negation_operation: math_op •

    ADD  shift, and go to state 271
    SUB  shift, and go to state 272

    OR         reduce using rule 88 (negation_operation)
    AND        reduce using rule 88 (negation_operation)
    SMALLER    reduce using rule 88 (negation_operation)
    GREATER    reduce using rule 88 (negation_operation)
    SMALLEQ    reduce using rule 88 (negation_operation)
    GREATEQ    reduce using rule 88 (negation_operation)
    EQUALS     reduce using rule 88 (negation_operation)
    DIFFERENT  reduce using rule 88 (negation_operation)
    PARENR     reduce using rule 88 (negation_operation)


State 208

   64 math_op: math_op_muldiv •
   65 math_op_muldiv: math_op_muldiv • DIV math_term
   66               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 273
    DIV   shift, and go to state 274

    ADD        reduce using rule 64 (math_op)
    SUB        reduce using rule 64 (math_op)
    OR         reduce using rule 64 (math_op)
    AND        reduce using rule 64 (math_op)
    SMALLER    reduce using rule 64 (math_op)
    GREATER    reduce using rule 64 (math_op)
    SMALLEQ    reduce using rule 64 (math_op)
    GREATEQ    reduce using rule 64 (math_op)
    EQUALS     reduce using rule 64 (math_op)
    DIFFERENT  reduce using rule 64 (math_op)
    PARENR     reduce using rule 64 (math_op)


State 209

   49 expression: set_op •

    PARENR  reduce using rule 49 (expression)


State 210

   71 set_op: operation •

    PARENR  reduce using rule 71 (set_op)


State 211

   74 operation: or_operation •
   75 or_operation: or_operation • OR and_operation

    OR  shift, and go to state 275

    PARENR  reduce using rule 74 (operation)


State 212

   76 or_operation: and_operation •
   77 and_operation: and_operation • AND equality_operation

    AND  shift, and go to state 276

    OR      reduce using rule 76 (or_operation)
    PARENR  reduce using rule 76 (or_operation)


State 213

   78 and_operation: equality_operation •
   79 equality_operation: equality_operation • EQUALS relational_operation
   80                   | equality_operation • DIFFERENT relational_operation

    EQUALS     shift, and go to state 277
    DIFFERENT  shift, and go to state 278

    OR      reduce using rule 78 (and_operation)
    AND     reduce using rule 78 (and_operation)
    PARENR  reduce using rule 78 (and_operation)


State 214

   81 equality_operation: relational_operation •
   82 relational_operation: relational_operation • SMALLER negation_operation
   83                     | relational_operation • GREATER negation_operation
   84                     | relational_operation • SMALLEQ negation_operation
   85                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 279
    GREATER  shift, and go to state 280
    SMALLEQ  shift, and go to state 281
    GREATEQ  shift, and go to state 282

    OR         reduce using rule 81 (equality_operation)
    AND        reduce using rule 81 (equality_operation)
    EQUALS     reduce using rule 81 (equality_operation)
    DIFFERENT  reduce using rule 81 (equality_operation)
    PARENR     reduce using rule 81 (equality_operation)


State 215

   86 relational_operation: negation_operation •

    OR         reduce using rule 86 (relational_operation)
    AND        reduce using rule 86 (relational_operation)
    SMALLER    reduce using rule 86 (relational_operation)
    GREATER    reduce using rule 86 (relational_operation)
    SMALLEQ    reduce using rule 86 (relational_operation)
    GREATEQ    reduce using rule 86 (relational_operation)
    EQUALS     reduce using rule 86 (relational_operation)
    DIFFERENT  reduce using rule 86 (relational_operation)
    PARENR     reduce using rule 86 (relational_operation)


State 216

   50 expression: func_call •

    PARENR  reduce using rule 50 (expression)


State 217

   72 operation: in_set •

    PARENR  reduce using rule 72 (operation)


State 218

   51 expression: assign_value •

    PARENR  reduce using rule 51 (expression)


State 219

   54 math_term: ID •

    ADD        reduce using rule 54 (math_term)
    SUB        reduce using rule 54 (math_term)
    MULT       reduce using rule 54 (math_term)
    DIV        reduce using rule 54 (math_term)
    OR         reduce using rule 54 (math_term)
    AND        reduce using rule 54 (math_term)
    SMALLER    reduce using rule 54 (math_term)
    GREATER    reduce using rule 54 (math_term)
    SMALLEQ    reduce using rule 54 (math_term)
    GREATEQ    reduce using rule 54 (math_term)
    EQUALS     reduce using rule 54 (math_term)
    DIFFERENT  reduce using rule 54 (math_term)
    IN         reduce using rule 54 (math_term)
    SEMIC      reduce using rule 54 (math_term)


State 220

   59 str_term: STRING •

    IN  reduce using rule 59 (str_term)


State 221

   58 str_term: CHAR •

    IN  reduce using rule 58 (str_term)


State 222

   60 str_term: EMPTY •

    IN  reduce using rule 60 (str_term)


State 223

   61 str_term: ERRORTOKEN •

    IN  reduce using rule 61 (str_term)


State 224

   45 var_dec: TYPE • ID SEMIC

    ID  shift, and go to state 283


State 225

   46 io_ops: READ • PARENL ID PARENR SEMIC

    PARENL  shift, and go to state 284


State 226

   47 io_ops: WRITE • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 285


State 227

   48 io_ops: WRITELN • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 286


State 228

   44 ret_st: RETURN • expression SEMIC

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression            go to state 287
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 229

   21 statement: expression_statement •

    ID          reduce using rule 21 (statement)
    TYPE        reduce using rule 21 (statement)
    STRING      reduce using rule 21 (statement)
    CHAR        reduce using rule 21 (statement)
    EMPTY       reduce using rule 21 (statement)
    ERRORTOKEN  reduce using rule 21 (statement)
    INTEGER     reduce using rule 21 (statement)
    DECIMAL     reduce using rule 21 (statement)
    NEG         reduce using rule 21 (statement)
    IF          reduce using rule 21 (statement)
    ELSE        reduce using rule 21 (statement)
    FOR         reduce using rule 21 (statement)
    READ        reduce using rule 21 (statement)
    WRITE       reduce using rule 21 (statement)
    WRITELN     reduce using rule 21 (statement)
    RETURN      reduce using rule 21 (statement)
    ISTYPE      reduce using rule 21 (statement)
    ADDSET      reduce using rule 21 (statement)
    REMOVE      reduce using rule 21 (statement)
    EXISTS      reduce using rule 21 (statement)
    FORALL      reduce using rule 21 (statement)
    ENDFUNC     reduce using rule 21 (statement)
    PARENL      reduce using rule 21 (statement)


State 230

   25 statement: basic_ops •

    ID          reduce using rule 25 (statement)
    TYPE        reduce using rule 25 (statement)
    STRING      reduce using rule 25 (statement)
    CHAR        reduce using rule 25 (statement)
    EMPTY       reduce using rule 25 (statement)
    ERRORTOKEN  reduce using rule 25 (statement)
    INTEGER     reduce using rule 25 (statement)
    DECIMAL     reduce using rule 25 (statement)
    NEG         reduce using rule 25 (statement)
    IF          reduce using rule 25 (statement)
    ELSE        reduce using rule 25 (statement)
    FOR         reduce using rule 25 (statement)
    READ        reduce using rule 25 (statement)
    WRITE       reduce using rule 25 (statement)
    WRITELN     reduce using rule 25 (statement)
    RETURN      reduce using rule 25 (statement)
    ISTYPE      reduce using rule 25 (statement)
    ADDSET      reduce using rule 25 (statement)
    REMOVE      reduce using rule 25 (statement)
    EXISTS      reduce using rule 25 (statement)
    FORALL      reduce using rule 25 (statement)
    ENDFUNC     reduce using rule 25 (statement)
    PARENL      reduce using rule 25 (statement)


State 231

   28 basic_ops: for_statement • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 288


State 232

   29 basic_ops: forall_statement • set_op SEMIC
   30          | forall_statement • STFUNC statement_list ENDFUNC

    ID          shift, and go to state 219
    STRING      shift, and go to state 220
    CHAR        shift, and go to state 221
    EMPTY       shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    STFUNC      shift, and go to state 289
    PARENL      shift, and go to state 55

    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 103
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 290
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    in_set                go to state 80


State 233

   27 basic_ops: if_ops •

    ID          reduce using rule 27 (basic_ops)
    TYPE        reduce using rule 27 (basic_ops)
    STRING      reduce using rule 27 (basic_ops)
    CHAR        reduce using rule 27 (basic_ops)
    EMPTY       reduce using rule 27 (basic_ops)
    ERRORTOKEN  reduce using rule 27 (basic_ops)
    INTEGER     reduce using rule 27 (basic_ops)
    DECIMAL     reduce using rule 27 (basic_ops)
    NEG         reduce using rule 27 (basic_ops)
    IF          reduce using rule 27 (basic_ops)
    ELSE        reduce using rule 27 (basic_ops)
    FOR         reduce using rule 27 (basic_ops)
    READ        reduce using rule 27 (basic_ops)
    WRITE       reduce using rule 27 (basic_ops)
    WRITELN     reduce using rule 27 (basic_ops)
    RETURN      reduce using rule 27 (basic_ops)
    ISTYPE      reduce using rule 27 (basic_ops)
    ADDSET      reduce using rule 27 (basic_ops)
    REMOVE      reduce using rule 27 (basic_ops)
    EXISTS      reduce using rule 27 (basic_ops)
    FORALL      reduce using rule 27 (basic_ops)
    ENDFUNC     reduce using rule 27 (basic_ops)
    PARENL      reduce using rule 27 (basic_ops)


State 234

   35 if_ops: if_statement • statement
   36       | if_statement • statement else_statement
   37       | if_statement • STFUNC statement_list ENDFUNC
   38       | if_statement • STFUNC statement_list ENDFUNC else_statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 224
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 225
    WRITE       shift, and go to state 226
    WRITELN     shift, and go to state 227
    RETURN      shift, and go to state 228
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    STFUNC      shift, and go to state 291
    PARENL      shift, and go to state 55

    statement             go to state 292
    expression_statement  go to state 229
    basic_ops             go to state 230
    for_statement         go to state 231
    forall_statement      go to state 232
    if_ops                go to state 233
    if_statement          go to state 234
    ret_st                go to state 235
    var_dec               go to state 236
    io_ops                go to state 237
    expression            go to state 238
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 235

   22 statement: ret_st •

    ID          reduce using rule 22 (statement)
    TYPE        reduce using rule 22 (statement)
    STRING      reduce using rule 22 (statement)
    CHAR        reduce using rule 22 (statement)
    EMPTY       reduce using rule 22 (statement)
    ERRORTOKEN  reduce using rule 22 (statement)
    INTEGER     reduce using rule 22 (statement)
    DECIMAL     reduce using rule 22 (statement)
    NEG         reduce using rule 22 (statement)
    IF          reduce using rule 22 (statement)
    ELSE        reduce using rule 22 (statement)
    FOR         reduce using rule 22 (statement)
    READ        reduce using rule 22 (statement)
    WRITE       reduce using rule 22 (statement)
    WRITELN     reduce using rule 22 (statement)
    RETURN      reduce using rule 22 (statement)
    ISTYPE      reduce using rule 22 (statement)
    ADDSET      reduce using rule 22 (statement)
    REMOVE      reduce using rule 22 (statement)
    EXISTS      reduce using rule 22 (statement)
    FORALL      reduce using rule 22 (statement)
    ENDFUNC     reduce using rule 22 (statement)
    PARENL      reduce using rule 22 (statement)


State 236

   23 statement: var_dec •

    ID          reduce using rule 23 (statement)
    TYPE        reduce using rule 23 (statement)
    STRING      reduce using rule 23 (statement)
    CHAR        reduce using rule 23 (statement)
    EMPTY       reduce using rule 23 (statement)
    ERRORTOKEN  reduce using rule 23 (statement)
    INTEGER     reduce using rule 23 (statement)
    DECIMAL     reduce using rule 23 (statement)
    NEG         reduce using rule 23 (statement)
    IF          reduce using rule 23 (statement)
    ELSE        reduce using rule 23 (statement)
    FOR         reduce using rule 23 (statement)
    READ        reduce using rule 23 (statement)
    WRITE       reduce using rule 23 (statement)
    WRITELN     reduce using rule 23 (statement)
    RETURN      reduce using rule 23 (statement)
    ISTYPE      reduce using rule 23 (statement)
    ADDSET      reduce using rule 23 (statement)
    REMOVE      reduce using rule 23 (statement)
    EXISTS      reduce using rule 23 (statement)
    FORALL      reduce using rule 23 (statement)
    ENDFUNC     reduce using rule 23 (statement)
    PARENL      reduce using rule 23 (statement)


State 237

   24 statement: io_ops •

    ID          reduce using rule 24 (statement)
    TYPE        reduce using rule 24 (statement)
    STRING      reduce using rule 24 (statement)
    CHAR        reduce using rule 24 (statement)
    EMPTY       reduce using rule 24 (statement)
    ERRORTOKEN  reduce using rule 24 (statement)
    INTEGER     reduce using rule 24 (statement)
    DECIMAL     reduce using rule 24 (statement)
    NEG         reduce using rule 24 (statement)
    IF          reduce using rule 24 (statement)
    ELSE        reduce using rule 24 (statement)
    FOR         reduce using rule 24 (statement)
    READ        reduce using rule 24 (statement)
    WRITE       reduce using rule 24 (statement)
    WRITELN     reduce using rule 24 (statement)
    RETURN      reduce using rule 24 (statement)
    ISTYPE      reduce using rule 24 (statement)
    ADDSET      reduce using rule 24 (statement)
    REMOVE      reduce using rule 24 (statement)
    EXISTS      reduce using rule 24 (statement)
    FORALL      reduce using rule 24 (statement)
    ENDFUNC     reduce using rule 24 (statement)
    PARENL      reduce using rule 24 (statement)


State 238

   26 expression_statement: expression • SEMIC

    SEMIC  shift, and go to state 293


State 239

   54 math_term: ID •

    COMMA   reduce using rule 54 (math_term)
    PARENR  reduce using rule 54 (math_term)


State 240

   59 str_term: STRING •

    COMMA   reduce using rule 59 (str_term)
    PARENR  reduce using rule 59 (str_term)


State 241

   58 str_term: CHAR •

    COMMA   reduce using rule 58 (str_term)
    PARENR  reduce using rule 58 (str_term)


State 242

   60 str_term: EMPTY •

    COMMA   reduce using rule 60 (str_term)
    PARENR  reduce using rule 60 (str_term)


State 243

   61 str_term: ERRORTOKEN •

    COMMA   reduce using rule 61 (str_term)
    PARENR  reduce using rule 61 (str_term)


State 244

   55 math_term: INTEGER •

    COMMA   reduce using rule 55 (math_term)
    PARENR  reduce using rule 55 (math_term)


State 245

   56 math_term: DECIMAL •

    COMMA   reduce using rule 56 (math_term)
    PARENR  reduce using rule 56 (math_term)


State 246

   57 math_term: PARENL • expression PARENR

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 294
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 247

   53 term: str_term •

    COMMA   reduce using rule 53 (term)
    PARENR  reduce using rule 53 (term)


State 248

   45 var_dec: TYPE ID SEMIC •

    ID          reduce using rule 45 (var_dec)
    TYPE        reduce using rule 45 (var_dec)
    STRING      reduce using rule 45 (var_dec)
    CHAR        reduce using rule 45 (var_dec)
    EMPTY       reduce using rule 45 (var_dec)
    ERRORTOKEN  reduce using rule 45 (var_dec)
    INTEGER     reduce using rule 45 (var_dec)
    DECIMAL     reduce using rule 45 (var_dec)
    NEG         reduce using rule 45 (var_dec)
    IF          reduce using rule 45 (var_dec)
    FOR         reduce using rule 45 (var_dec)
    READ        reduce using rule 45 (var_dec)
    WRITE       reduce using rule 45 (var_dec)
    WRITELN     reduce using rule 45 (var_dec)
    RETURN      reduce using rule 45 (var_dec)
    ISTYPE      reduce using rule 45 (var_dec)
    ADDSET      reduce using rule 45 (var_dec)
    REMOVE      reduce using rule 45 (var_dec)
    EXISTS      reduce using rule 45 (var_dec)
    FORALL      reduce using rule 45 (var_dec)
    ENDFUNC     reduce using rule 45 (var_dec)
    PARENL      reduce using rule 45 (var_dec)


State 249

   54 math_term: ID •

    ADD        reduce using rule 54 (math_term)
    SUB        reduce using rule 54 (math_term)
    MULT       reduce using rule 54 (math_term)
    DIV        reduce using rule 54 (math_term)
    OR         reduce using rule 54 (math_term)
    AND        reduce using rule 54 (math_term)
    SMALLER    reduce using rule 54 (math_term)
    GREATER    reduce using rule 54 (math_term)
    SMALLEQ    reduce using rule 54 (math_term)
    GREATEQ    reduce using rule 54 (math_term)
    EQUALS     reduce using rule 54 (math_term)
    DIFFERENT  reduce using rule 54 (math_term)
    IN         reduce using rule 54 (math_term)
    PARENR     reduce using rule 54 (math_term)


State 250

   26 expression_statement: expression • SEMIC

    SEMIC  shift, and go to state 295


State 251

   54 math_term: ID •

    IN  reduce using rule 54 (math_term)


State 252

   55 math_term: INTEGER •

    IN  reduce using rule 55 (math_term)


State 253

   56 math_term: DECIMAL •

    IN  reduce using rule 56 (math_term)


State 254

   57 math_term: PARENL • expression PARENR

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 296
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 255

   52 term: math_term •

    IN  reduce using rule 52 (term)


State 256

   57 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 297


State 257

   95 assign_value: ID ASSIGN • expression

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 298
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 258

   89 func_call: ID PARENL • args_list PARENR

    ID          shift, and go to state 239
    STRING      shift, and go to state 240
    CHAR        shift, and go to state 241
    EMPTY       shift, and go to state 242
    ERRORTOKEN  shift, and go to state 243
    INTEGER     shift, and go to state 244
    DECIMAL     shift, and go to state 245
    PARENL      shift, and go to state 246

    COMMA   reduce using rule 94 (args_list)
    PARENR  reduce using rule 94 (args_list)

    term       go to state 122
    math_term  go to state 123
    str_term   go to state 247
    args_list  go to state 299


State 259

   54 math_term: ID •

    ADD        reduce using rule 54 (math_term)
    SUB        reduce using rule 54 (math_term)
    MULT       reduce using rule 54 (math_term)
    DIV        reduce using rule 54 (math_term)
    OR         reduce using rule 54 (math_term)
    AND        reduce using rule 54 (math_term)
    SMALLER    reduce using rule 54 (math_term)
    GREATER    reduce using rule 54 (math_term)
    SMALLEQ    reduce using rule 54 (math_term)
    GREATEQ    reduce using rule 54 (math_term)
    EQUALS     reduce using rule 54 (math_term)
    DIFFERENT  reduce using rule 54 (math_term)
    PARENR     reduce using rule 54 (math_term)


State 260

   55 math_term: INTEGER •

    ADD        reduce using rule 55 (math_term)
    SUB        reduce using rule 55 (math_term)
    MULT       reduce using rule 55 (math_term)
    DIV        reduce using rule 55 (math_term)
    OR         reduce using rule 55 (math_term)
    AND        reduce using rule 55 (math_term)
    SMALLER    reduce using rule 55 (math_term)
    GREATER    reduce using rule 55 (math_term)
    SMALLEQ    reduce using rule 55 (math_term)
    GREATEQ    reduce using rule 55 (math_term)
    EQUALS     reduce using rule 55 (math_term)
    DIFFERENT  reduce using rule 55 (math_term)
    PARENR     reduce using rule 55 (math_term)


State 261

   56 math_term: DECIMAL •

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    PARENR     reduce using rule 56 (math_term)


State 262

   57 math_term: PARENL • expression PARENR

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 300
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 263

   67 math_op_muldiv: math_term •

    ADD        reduce using rule 67 (math_op_muldiv)
    SUB        reduce using rule 67 (math_op_muldiv)
    MULT       reduce using rule 67 (math_op_muldiv)
    DIV        reduce using rule 67 (math_op_muldiv)
    OR         reduce using rule 67 (math_op_muldiv)
    AND        reduce using rule 67 (math_op_muldiv)
    SMALLER    reduce using rule 67 (math_op_muldiv)
    GREATER    reduce using rule 67 (math_op_muldiv)
    SMALLEQ    reduce using rule 67 (math_op_muldiv)
    GREATEQ    reduce using rule 67 (math_op_muldiv)
    EQUALS     reduce using rule 67 (math_op_muldiv)
    DIFFERENT  reduce using rule 67 (math_op_muldiv)
    PARENR     reduce using rule 67 (math_op_muldiv)


State 264

   62 math_op: math_op • ADD math_op_muldiv
   63        | math_op • SUB math_op_muldiv
   87 negation_operation: NEG math_op •

    ADD  shift, and go to state 271
    SUB  shift, and go to state 272

    OR         reduce using rule 87 (negation_operation)
    AND        reduce using rule 87 (negation_operation)
    SMALLER    reduce using rule 87 (negation_operation)
    GREATER    reduce using rule 87 (negation_operation)
    SMALLEQ    reduce using rule 87 (negation_operation)
    GREATEQ    reduce using rule 87 (negation_operation)
    EQUALS     reduce using rule 87 (negation_operation)
    DIFFERENT  reduce using rule 87 (negation_operation)
    PARENR     reduce using rule 87 (negation_operation)


State 265

   73 operation: ISTYPE PARENL • expression PARENR

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 301
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 266

   68 set_op: ADDSET PARENL • set_op PARENR

    ID          shift, and go to state 249
    STRING      shift, and go to state 220
    CHAR        shift, and go to state 221
    EMPTY       shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 103
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 302
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    in_set                go to state 217


State 267

   69 set_op: REMOVE PARENL • set_op PARENR

    ID          shift, and go to state 249
    STRING      shift, and go to state 220
    CHAR        shift, and go to state 221
    EMPTY       shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 103
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 303
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    in_set                go to state 217


State 268

   70 set_op: EXISTS PARENL • set_op PARENR

    ID          shift, and go to state 249
    STRING      shift, and go to state 220
    CHAR        shift, and go to state 221
    EMPTY       shift, and go to state 222
    ERRORTOKEN  shift, and go to state 223
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 103
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 304
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    in_set                go to state 217


State 269

   57 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 305


State 270

   91 in_set: term IN • expression

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 306
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 271

   62 math_op: math_op ADD • math_op_muldiv

    ID       shift, and go to state 259
    INTEGER  shift, and go to state 260
    DECIMAL  shift, and go to state 261
    PARENL   shift, and go to state 262

    math_term       go to state 263
    math_op_muldiv  go to state 307


State 272

   63 math_op: math_op SUB • math_op_muldiv

    ID       shift, and go to state 259
    INTEGER  shift, and go to state 260
    DECIMAL  shift, and go to state 261
    PARENL   shift, and go to state 262

    math_term       go to state 263
    math_op_muldiv  go to state 308


State 273

   66 math_op_muldiv: math_op_muldiv MULT • math_term

    ID       shift, and go to state 259
    INTEGER  shift, and go to state 260
    DECIMAL  shift, and go to state 261
    PARENL   shift, and go to state 262

    math_term  go to state 309


State 274

   65 math_op_muldiv: math_op_muldiv DIV • math_term

    ID       shift, and go to state 259
    INTEGER  shift, and go to state 260
    DECIMAL  shift, and go to state 261
    PARENL   shift, and go to state 262

    math_term  go to state 310


State 275

   75 or_operation: or_operation OR • and_operation

    ID       shift, and go to state 259
    INTEGER  shift, and go to state 260
    DECIMAL  shift, and go to state 261
    NEG      shift, and go to state 198
    PARENL   shift, and go to state 262

    math_term             go to state 263
    math_op               go to state 207
    math_op_muldiv        go to state 208
    and_operation         go to state 311
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215


State 276

   77 and_operation: and_operation AND • equality_operation

    ID       shift, and go to state 259
    INTEGER  shift, and go to state 260
    DECIMAL  shift, and go to state 261
    NEG      shift, and go to state 198
    PARENL   shift, and go to state 262

    math_term             go to state 263
    math_op               go to state 207
    math_op_muldiv        go to state 208
    equality_operation    go to state 312
    relational_operation  go to state 214
    negation_operation    go to state 215


State 277

   79 equality_operation: equality_operation EQUALS • relational_operation

    ID       shift, and go to state 259
    INTEGER  shift, and go to state 260
    DECIMAL  shift, and go to state 261
    NEG      shift, and go to state 198
    PARENL   shift, and go to state 262

    math_term             go to state 263
    math_op               go to state 207
    math_op_muldiv        go to state 208
    relational_operation  go to state 313
    negation_operation    go to state 215


State 278

   80 equality_operation: equality_operation DIFFERENT • relational_operation

    ID       shift, and go to state 259
    INTEGER  shift, and go to state 260
    DECIMAL  shift, and go to state 261
    NEG      shift, and go to state 198
    PARENL   shift, and go to state 262

    math_term             go to state 263
    math_op               go to state 207
    math_op_muldiv        go to state 208
    relational_operation  go to state 314
    negation_operation    go to state 215


State 279

   82 relational_operation: relational_operation SMALLER • negation_operation

    ID       shift, and go to state 259
    INTEGER  shift, and go to state 260
    DECIMAL  shift, and go to state 261
    NEG      shift, and go to state 198
    PARENL   shift, and go to state 262

    math_term           go to state 263
    math_op             go to state 207
    math_op_muldiv      go to state 208
    negation_operation  go to state 315


State 280

   83 relational_operation: relational_operation GREATER • negation_operation

    ID       shift, and go to state 259
    INTEGER  shift, and go to state 260
    DECIMAL  shift, and go to state 261
    NEG      shift, and go to state 198
    PARENL   shift, and go to state 262

    math_term           go to state 263
    math_op             go to state 207
    math_op_muldiv      go to state 208
    negation_operation  go to state 316


State 281

   84 relational_operation: relational_operation SMALLEQ • negation_operation

    ID       shift, and go to state 259
    INTEGER  shift, and go to state 260
    DECIMAL  shift, and go to state 261
    NEG      shift, and go to state 198
    PARENL   shift, and go to state 262

    math_term           go to state 263
    math_op             go to state 207
    math_op_muldiv      go to state 208
    negation_operation  go to state 317


State 282

   85 relational_operation: relational_operation GREATEQ • negation_operation

    ID       shift, and go to state 259
    INTEGER  shift, and go to state 260
    DECIMAL  shift, and go to state 261
    NEG      shift, and go to state 198
    PARENL   shift, and go to state 262

    math_term           go to state 263
    math_op             go to state 207
    math_op_muldiv      go to state 208
    negation_operation  go to state 318


State 283

   45 var_dec: TYPE ID • SEMIC

    SEMIC  shift, and go to state 319


State 284

   46 io_ops: READ PARENL • ID PARENR SEMIC

    ID  shift, and go to state 320


State 285

   47 io_ops: WRITE PARENL • expression PARENR SEMIC

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 321
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 286

   48 io_ops: WRITELN PARENL • expression PARENR SEMIC

    ID          shift, and go to state 191
    STRING      shift, and go to state 192
    CHAR        shift, and go to state 193
    EMPTY       shift, and go to state 194
    ERRORTOKEN  shift, and go to state 195
    INTEGER     shift, and go to state 196
    DECIMAL     shift, and go to state 197
    NEG         shift, and go to state 198
    ISTYPE      shift, and go to state 199
    ADDSET      shift, and go to state 200
    REMOVE      shift, and go to state 201
    EXISTS      shift, and go to state 202
    PARENL      shift, and go to state 203

    expression            go to state 322
    term                  go to state 204
    math_term             go to state 205
    str_term              go to state 206
    math_op               go to state 207
    math_op_muldiv        go to state 208
    set_op                go to state 209
    operation             go to state 210
    or_operation          go to state 211
    and_operation         go to state 212
    equality_operation    go to state 213
    relational_operation  go to state 214
    negation_operation    go to state 215
    func_call             go to state 216
    in_set                go to state 217
    assign_value          go to state 218


State 287

   44 ret_st: RETURN expression • SEMIC

    SEMIC  shift, and go to state 323


State 288

   28 basic_ops: for_statement STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 324


State 289

   30 basic_ops: forall_statement STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 325


State 290

   29 basic_ops: forall_statement set_op • SEMIC

    SEMIC  shift, and go to state 326


State 291

   37 if_ops: if_statement STFUNC • statement_list ENDFUNC
   38       | if_statement STFUNC • statement_list ENDFUNC else_statement

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 327


State 292

   35 if_ops: if_statement statement •
   36       | if_statement statement • else_statement

    ELSE  shift, and go to state 328

    ID          reduce using rule 35 (if_ops)
    TYPE        reduce using rule 35 (if_ops)
    STRING      reduce using rule 35 (if_ops)
    CHAR        reduce using rule 35 (if_ops)
    EMPTY       reduce using rule 35 (if_ops)
    ERRORTOKEN  reduce using rule 35 (if_ops)
    INTEGER     reduce using rule 35 (if_ops)
    DECIMAL     reduce using rule 35 (if_ops)
    NEG         reduce using rule 35 (if_ops)
    IF          reduce using rule 35 (if_ops)
    FOR         reduce using rule 35 (if_ops)
    READ        reduce using rule 35 (if_ops)
    WRITE       reduce using rule 35 (if_ops)
    WRITELN     reduce using rule 35 (if_ops)
    RETURN      reduce using rule 35 (if_ops)
    ISTYPE      reduce using rule 35 (if_ops)
    ADDSET      reduce using rule 35 (if_ops)
    REMOVE      reduce using rule 35 (if_ops)
    EXISTS      reduce using rule 35 (if_ops)
    FORALL      reduce using rule 35 (if_ops)
    ENDFUNC     reduce using rule 35 (if_ops)
    PARENL      reduce using rule 35 (if_ops)

    else_statement  go to state 329


State 293

   26 expression_statement: expression SEMIC •

    ID          reduce using rule 26 (expression_statement)
    TYPE        reduce using rule 26 (expression_statement)
    STRING      reduce using rule 26 (expression_statement)
    CHAR        reduce using rule 26 (expression_statement)
    EMPTY       reduce using rule 26 (expression_statement)
    ERRORTOKEN  reduce using rule 26 (expression_statement)
    INTEGER     reduce using rule 26 (expression_statement)
    DECIMAL     reduce using rule 26 (expression_statement)
    NEG         reduce using rule 26 (expression_statement)
    IF          reduce using rule 26 (expression_statement)
    ELSE        reduce using rule 26 (expression_statement)
    FOR         reduce using rule 26 (expression_statement)
    READ        reduce using rule 26 (expression_statement)
    WRITE       reduce using rule 26 (expression_statement)
    WRITELN     reduce using rule 26 (expression_statement)
    RETURN      reduce using rule 26 (expression_statement)
    ISTYPE      reduce using rule 26 (expression_statement)
    ADDSET      reduce using rule 26 (expression_statement)
    REMOVE      reduce using rule 26 (expression_statement)
    EXISTS      reduce using rule 26 (expression_statement)
    FORALL      reduce using rule 26 (expression_statement)
    ENDFUNC     reduce using rule 26 (expression_statement)
    PARENL      reduce using rule 26 (expression_statement)


State 294

   57 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 330


State 295

   26 expression_statement: expression SEMIC •

    ID          reduce using rule 26 (expression_statement)
    STRING      reduce using rule 26 (expression_statement)
    CHAR        reduce using rule 26 (expression_statement)
    EMPTY       reduce using rule 26 (expression_statement)
    ERRORTOKEN  reduce using rule 26 (expression_statement)
    INTEGER     reduce using rule 26 (expression_statement)
    DECIMAL     reduce using rule 26 (expression_statement)
    NEG         reduce using rule 26 (expression_statement)
    ISTYPE      reduce using rule 26 (expression_statement)
    ADDSET      reduce using rule 26 (expression_statement)
    REMOVE      reduce using rule 26 (expression_statement)
    EXISTS      reduce using rule 26 (expression_statement)
    PARENL      reduce using rule 26 (expression_statement)


State 296

   57 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 331


State 297

   57 math_term: PARENL expression PARENR •

    ADD        reduce using rule 57 (math_term)
    SUB        reduce using rule 57 (math_term)
    MULT       reduce using rule 57 (math_term)
    DIV        reduce using rule 57 (math_term)
    OR         reduce using rule 57 (math_term)
    AND        reduce using rule 57 (math_term)
    SMALLER    reduce using rule 57 (math_term)
    GREATER    reduce using rule 57 (math_term)
    SMALLEQ    reduce using rule 57 (math_term)
    GREATEQ    reduce using rule 57 (math_term)
    EQUALS     reduce using rule 57 (math_term)
    DIFFERENT  reduce using rule 57 (math_term)
    SEMIC      reduce using rule 57 (math_term)


State 298

   95 assign_value: ID ASSIGN expression •

    PARENR  reduce using rule 95 (assign_value)


State 299

   89 func_call: ID PARENL args_list • PARENR
   92 args_list: args_list • COMMA term

    COMMA   shift, and go to state 158
    PARENR  shift, and go to state 332


State 300

   57 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 333


State 301

   73 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 334


State 302

   68 set_op: ADDSET PARENL set_op • PARENR

    PARENR  shift, and go to state 335


State 303

   69 set_op: REMOVE PARENL set_op • PARENR

    PARENR  shift, and go to state 336


State 304

   70 set_op: EXISTS PARENL set_op • PARENR

    PARENR  shift, and go to state 337


State 305

   57 math_term: PARENL expression PARENR •

    ADD        reduce using rule 57 (math_term)
    SUB        reduce using rule 57 (math_term)
    MULT       reduce using rule 57 (math_term)
    DIV        reduce using rule 57 (math_term)
    OR         reduce using rule 57 (math_term)
    AND        reduce using rule 57 (math_term)
    SMALLER    reduce using rule 57 (math_term)
    GREATER    reduce using rule 57 (math_term)
    SMALLEQ    reduce using rule 57 (math_term)
    GREATEQ    reduce using rule 57 (math_term)
    EQUALS     reduce using rule 57 (math_term)
    DIFFERENT  reduce using rule 57 (math_term)
    IN         reduce using rule 57 (math_term)
    PARENR     reduce using rule 57 (math_term)


State 306

   91 in_set: term IN expression •

    PARENR  reduce using rule 91 (in_set)


State 307

   62 math_op: math_op ADD math_op_muldiv •
   65 math_op_muldiv: math_op_muldiv • DIV math_term
   66               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 273
    DIV   shift, and go to state 274

    ADD        reduce using rule 62 (math_op)
    SUB        reduce using rule 62 (math_op)
    OR         reduce using rule 62 (math_op)
    AND        reduce using rule 62 (math_op)
    SMALLER    reduce using rule 62 (math_op)
    GREATER    reduce using rule 62 (math_op)
    SMALLEQ    reduce using rule 62 (math_op)
    GREATEQ    reduce using rule 62 (math_op)
    EQUALS     reduce using rule 62 (math_op)
    DIFFERENT  reduce using rule 62 (math_op)
    PARENR     reduce using rule 62 (math_op)


State 308

   63 math_op: math_op SUB math_op_muldiv •
   65 math_op_muldiv: math_op_muldiv • DIV math_term
   66               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 273
    DIV   shift, and go to state 274

    ADD        reduce using rule 63 (math_op)
    SUB        reduce using rule 63 (math_op)
    OR         reduce using rule 63 (math_op)
    AND        reduce using rule 63 (math_op)
    SMALLER    reduce using rule 63 (math_op)
    GREATER    reduce using rule 63 (math_op)
    SMALLEQ    reduce using rule 63 (math_op)
    GREATEQ    reduce using rule 63 (math_op)
    EQUALS     reduce using rule 63 (math_op)
    DIFFERENT  reduce using rule 63 (math_op)
    PARENR     reduce using rule 63 (math_op)


State 309

   66 math_op_muldiv: math_op_muldiv MULT math_term •

    ADD        reduce using rule 66 (math_op_muldiv)
    SUB        reduce using rule 66 (math_op_muldiv)
    MULT       reduce using rule 66 (math_op_muldiv)
    DIV        reduce using rule 66 (math_op_muldiv)
    OR         reduce using rule 66 (math_op_muldiv)
    AND        reduce using rule 66 (math_op_muldiv)
    SMALLER    reduce using rule 66 (math_op_muldiv)
    GREATER    reduce using rule 66 (math_op_muldiv)
    SMALLEQ    reduce using rule 66 (math_op_muldiv)
    GREATEQ    reduce using rule 66 (math_op_muldiv)
    EQUALS     reduce using rule 66 (math_op_muldiv)
    DIFFERENT  reduce using rule 66 (math_op_muldiv)
    PARENR     reduce using rule 66 (math_op_muldiv)


State 310

   65 math_op_muldiv: math_op_muldiv DIV math_term •

    ADD        reduce using rule 65 (math_op_muldiv)
    SUB        reduce using rule 65 (math_op_muldiv)
    MULT       reduce using rule 65 (math_op_muldiv)
    DIV        reduce using rule 65 (math_op_muldiv)
    OR         reduce using rule 65 (math_op_muldiv)
    AND        reduce using rule 65 (math_op_muldiv)
    SMALLER    reduce using rule 65 (math_op_muldiv)
    GREATER    reduce using rule 65 (math_op_muldiv)
    SMALLEQ    reduce using rule 65 (math_op_muldiv)
    GREATEQ    reduce using rule 65 (math_op_muldiv)
    EQUALS     reduce using rule 65 (math_op_muldiv)
    DIFFERENT  reduce using rule 65 (math_op_muldiv)
    PARENR     reduce using rule 65 (math_op_muldiv)


State 311

   75 or_operation: or_operation OR and_operation •
   77 and_operation: and_operation • AND equality_operation

    AND  shift, and go to state 276

    OR      reduce using rule 75 (or_operation)
    PARENR  reduce using rule 75 (or_operation)


State 312

   77 and_operation: and_operation AND equality_operation •
   79 equality_operation: equality_operation • EQUALS relational_operation
   80                   | equality_operation • DIFFERENT relational_operation

    EQUALS     shift, and go to state 277
    DIFFERENT  shift, and go to state 278

    OR      reduce using rule 77 (and_operation)
    AND     reduce using rule 77 (and_operation)
    PARENR  reduce using rule 77 (and_operation)


State 313

   79 equality_operation: equality_operation EQUALS relational_operation •
   82 relational_operation: relational_operation • SMALLER negation_operation
   83                     | relational_operation • GREATER negation_operation
   84                     | relational_operation • SMALLEQ negation_operation
   85                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 279
    GREATER  shift, and go to state 280
    SMALLEQ  shift, and go to state 281
    GREATEQ  shift, and go to state 282

    OR         reduce using rule 79 (equality_operation)
    AND        reduce using rule 79 (equality_operation)
    EQUALS     reduce using rule 79 (equality_operation)
    DIFFERENT  reduce using rule 79 (equality_operation)
    PARENR     reduce using rule 79 (equality_operation)


State 314

   80 equality_operation: equality_operation DIFFERENT relational_operation •
   82 relational_operation: relational_operation • SMALLER negation_operation
   83                     | relational_operation • GREATER negation_operation
   84                     | relational_operation • SMALLEQ negation_operation
   85                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 279
    GREATER  shift, and go to state 280
    SMALLEQ  shift, and go to state 281
    GREATEQ  shift, and go to state 282

    OR         reduce using rule 80 (equality_operation)
    AND        reduce using rule 80 (equality_operation)
    EQUALS     reduce using rule 80 (equality_operation)
    DIFFERENT  reduce using rule 80 (equality_operation)
    PARENR     reduce using rule 80 (equality_operation)


State 315

   82 relational_operation: relational_operation SMALLER negation_operation •

    OR         reduce using rule 82 (relational_operation)
    AND        reduce using rule 82 (relational_operation)
    SMALLER    reduce using rule 82 (relational_operation)
    GREATER    reduce using rule 82 (relational_operation)
    SMALLEQ    reduce using rule 82 (relational_operation)
    GREATEQ    reduce using rule 82 (relational_operation)
    EQUALS     reduce using rule 82 (relational_operation)
    DIFFERENT  reduce using rule 82 (relational_operation)
    PARENR     reduce using rule 82 (relational_operation)


State 316

   83 relational_operation: relational_operation GREATER negation_operation •

    OR         reduce using rule 83 (relational_operation)
    AND        reduce using rule 83 (relational_operation)
    SMALLER    reduce using rule 83 (relational_operation)
    GREATER    reduce using rule 83 (relational_operation)
    SMALLEQ    reduce using rule 83 (relational_operation)
    GREATEQ    reduce using rule 83 (relational_operation)
    EQUALS     reduce using rule 83 (relational_operation)
    DIFFERENT  reduce using rule 83 (relational_operation)
    PARENR     reduce using rule 83 (relational_operation)


State 317

   84 relational_operation: relational_operation SMALLEQ negation_operation •

    OR         reduce using rule 84 (relational_operation)
    AND        reduce using rule 84 (relational_operation)
    SMALLER    reduce using rule 84 (relational_operation)
    GREATER    reduce using rule 84 (relational_operation)
    SMALLEQ    reduce using rule 84 (relational_operation)
    GREATEQ    reduce using rule 84 (relational_operation)
    EQUALS     reduce using rule 84 (relational_operation)
    DIFFERENT  reduce using rule 84 (relational_operation)
    PARENR     reduce using rule 84 (relational_operation)


State 318

   85 relational_operation: relational_operation GREATEQ negation_operation •

    OR         reduce using rule 85 (relational_operation)
    AND        reduce using rule 85 (relational_operation)
    SMALLER    reduce using rule 85 (relational_operation)
    GREATER    reduce using rule 85 (relational_operation)
    SMALLEQ    reduce using rule 85 (relational_operation)
    GREATEQ    reduce using rule 85 (relational_operation)
    EQUALS     reduce using rule 85 (relational_operation)
    DIFFERENT  reduce using rule 85 (relational_operation)
    PARENR     reduce using rule 85 (relational_operation)


State 319

   45 var_dec: TYPE ID SEMIC •

    ID          reduce using rule 45 (var_dec)
    TYPE        reduce using rule 45 (var_dec)
    STRING      reduce using rule 45 (var_dec)
    CHAR        reduce using rule 45 (var_dec)
    EMPTY       reduce using rule 45 (var_dec)
    ERRORTOKEN  reduce using rule 45 (var_dec)
    INTEGER     reduce using rule 45 (var_dec)
    DECIMAL     reduce using rule 45 (var_dec)
    NEG         reduce using rule 45 (var_dec)
    IF          reduce using rule 45 (var_dec)
    ELSE        reduce using rule 45 (var_dec)
    FOR         reduce using rule 45 (var_dec)
    READ        reduce using rule 45 (var_dec)
    WRITE       reduce using rule 45 (var_dec)
    WRITELN     reduce using rule 45 (var_dec)
    RETURN      reduce using rule 45 (var_dec)
    ISTYPE      reduce using rule 45 (var_dec)
    ADDSET      reduce using rule 45 (var_dec)
    REMOVE      reduce using rule 45 (var_dec)
    EXISTS      reduce using rule 45 (var_dec)
    FORALL      reduce using rule 45 (var_dec)
    ENDFUNC     reduce using rule 45 (var_dec)
    PARENL      reduce using rule 45 (var_dec)


State 320

   46 io_ops: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 338


State 321

   47 io_ops: WRITE PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 339


State 322

   48 io_ops: WRITELN PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 340


State 323

   44 ret_st: RETURN expression SEMIC •

    ID          reduce using rule 44 (ret_st)
    TYPE        reduce using rule 44 (ret_st)
    STRING      reduce using rule 44 (ret_st)
    CHAR        reduce using rule 44 (ret_st)
    EMPTY       reduce using rule 44 (ret_st)
    ERRORTOKEN  reduce using rule 44 (ret_st)
    INTEGER     reduce using rule 44 (ret_st)
    DECIMAL     reduce using rule 44 (ret_st)
    NEG         reduce using rule 44 (ret_st)
    IF          reduce using rule 44 (ret_st)
    ELSE        reduce using rule 44 (ret_st)
    FOR         reduce using rule 44 (ret_st)
    READ        reduce using rule 44 (ret_st)
    WRITE       reduce using rule 44 (ret_st)
    WRITELN     reduce using rule 44 (ret_st)
    RETURN      reduce using rule 44 (ret_st)
    ISTYPE      reduce using rule 44 (ret_st)
    ADDSET      reduce using rule 44 (ret_st)
    REMOVE      reduce using rule 44 (ret_st)
    EXISTS      reduce using rule 44 (ret_st)
    FORALL      reduce using rule 44 (ret_st)
    ENDFUNC     reduce using rule 44 (ret_st)
    PARENL      reduce using rule 44 (ret_st)


State 324

   18 statement_list: statement_list • statement
   28 basic_ops: for_statement STFUNC statement_list • ENDFUNC

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 341
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 325

   18 statement_list: statement_list • statement
   30 basic_ops: forall_statement STFUNC statement_list • ENDFUNC

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 342
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 326

   29 basic_ops: forall_statement set_op SEMIC •

    ID          reduce using rule 29 (basic_ops)
    TYPE        reduce using rule 29 (basic_ops)
    STRING      reduce using rule 29 (basic_ops)
    CHAR        reduce using rule 29 (basic_ops)
    EMPTY       reduce using rule 29 (basic_ops)
    ERRORTOKEN  reduce using rule 29 (basic_ops)
    INTEGER     reduce using rule 29 (basic_ops)
    DECIMAL     reduce using rule 29 (basic_ops)
    NEG         reduce using rule 29 (basic_ops)
    IF          reduce using rule 29 (basic_ops)
    ELSE        reduce using rule 29 (basic_ops)
    FOR         reduce using rule 29 (basic_ops)
    READ        reduce using rule 29 (basic_ops)
    WRITE       reduce using rule 29 (basic_ops)
    WRITELN     reduce using rule 29 (basic_ops)
    RETURN      reduce using rule 29 (basic_ops)
    ISTYPE      reduce using rule 29 (basic_ops)
    ADDSET      reduce using rule 29 (basic_ops)
    REMOVE      reduce using rule 29 (basic_ops)
    EXISTS      reduce using rule 29 (basic_ops)
    FORALL      reduce using rule 29 (basic_ops)
    ENDFUNC     reduce using rule 29 (basic_ops)
    PARENL      reduce using rule 29 (basic_ops)


State 327

   18 statement_list: statement_list • statement
   37 if_ops: if_statement STFUNC statement_list • ENDFUNC
   38       | if_statement STFUNC statement_list • ENDFUNC else_statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 343
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 328

   41 else_statement: ELSE • $@5 statement
   43               | ELSE • $@6 STFUNC statement_list ENDFUNC

    ID          reduce using rule 40 ($@5)
    TYPE        reduce using rule 40 ($@5)
    STRING      reduce using rule 40 ($@5)
    CHAR        reduce using rule 40 ($@5)
    EMPTY       reduce using rule 40 ($@5)
    ERRORTOKEN  reduce using rule 40 ($@5)
    INTEGER     reduce using rule 40 ($@5)
    DECIMAL     reduce using rule 40 ($@5)
    NEG         reduce using rule 40 ($@5)
    IF          reduce using rule 40 ($@5)
    FOR         reduce using rule 40 ($@5)
    READ        reduce using rule 40 ($@5)
    WRITE       reduce using rule 40 ($@5)
    WRITELN     reduce using rule 40 ($@5)
    RETURN      reduce using rule 40 ($@5)
    ISTYPE      reduce using rule 40 ($@5)
    ADDSET      reduce using rule 40 ($@5)
    REMOVE      reduce using rule 40 ($@5)
    EXISTS      reduce using rule 40 ($@5)
    FORALL      reduce using rule 40 ($@5)
    STFUNC      reduce using rule 42 ($@6)
    PARENL      reduce using rule 40 ($@5)

    $@5  go to state 344
    $@6  go to state 345


State 329

   36 if_ops: if_statement statement else_statement •

    ID          reduce using rule 36 (if_ops)
    TYPE        reduce using rule 36 (if_ops)
    STRING      reduce using rule 36 (if_ops)
    CHAR        reduce using rule 36 (if_ops)
    EMPTY       reduce using rule 36 (if_ops)
    ERRORTOKEN  reduce using rule 36 (if_ops)
    INTEGER     reduce using rule 36 (if_ops)
    DECIMAL     reduce using rule 36 (if_ops)
    NEG         reduce using rule 36 (if_ops)
    IF          reduce using rule 36 (if_ops)
    ELSE        reduce using rule 36 (if_ops)
    FOR         reduce using rule 36 (if_ops)
    READ        reduce using rule 36 (if_ops)
    WRITE       reduce using rule 36 (if_ops)
    WRITELN     reduce using rule 36 (if_ops)
    RETURN      reduce using rule 36 (if_ops)
    ISTYPE      reduce using rule 36 (if_ops)
    ADDSET      reduce using rule 36 (if_ops)
    REMOVE      reduce using rule 36 (if_ops)
    EXISTS      reduce using rule 36 (if_ops)
    FORALL      reduce using rule 36 (if_ops)
    ENDFUNC     reduce using rule 36 (if_ops)
    PARENL      reduce using rule 36 (if_ops)


State 330

   57 math_term: PARENL expression PARENR •

    COMMA   reduce using rule 57 (math_term)
    PARENR  reduce using rule 57 (math_term)


State 331

   57 math_term: PARENL expression PARENR •

    IN  reduce using rule 57 (math_term)


State 332

   89 func_call: ID PARENL args_list PARENR •

    PARENR  reduce using rule 89 (func_call)


State 333

   57 math_term: PARENL expression PARENR •

    ADD        reduce using rule 57 (math_term)
    SUB        reduce using rule 57 (math_term)
    MULT       reduce using rule 57 (math_term)
    DIV        reduce using rule 57 (math_term)
    OR         reduce using rule 57 (math_term)
    AND        reduce using rule 57 (math_term)
    SMALLER    reduce using rule 57 (math_term)
    GREATER    reduce using rule 57 (math_term)
    SMALLEQ    reduce using rule 57 (math_term)
    GREATEQ    reduce using rule 57 (math_term)
    EQUALS     reduce using rule 57 (math_term)
    DIFFERENT  reduce using rule 57 (math_term)
    PARENR     reduce using rule 57 (math_term)


State 334

   73 operation: ISTYPE PARENL expression PARENR •

    PARENR  reduce using rule 73 (operation)


State 335

   68 set_op: ADDSET PARENL set_op PARENR •

    PARENR  reduce using rule 68 (set_op)


State 336

   69 set_op: REMOVE PARENL set_op PARENR •

    PARENR  reduce using rule 69 (set_op)


State 337

   70 set_op: EXISTS PARENL set_op PARENR •

    PARENR  reduce using rule 70 (set_op)


State 338

   46 io_ops: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 346


State 339

   47 io_ops: WRITE PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 347


State 340

   48 io_ops: WRITELN PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 348


State 341

   28 basic_ops: for_statement STFUNC statement_list ENDFUNC •

    ID          reduce using rule 28 (basic_ops)
    TYPE        reduce using rule 28 (basic_ops)
    STRING      reduce using rule 28 (basic_ops)
    CHAR        reduce using rule 28 (basic_ops)
    EMPTY       reduce using rule 28 (basic_ops)
    ERRORTOKEN  reduce using rule 28 (basic_ops)
    INTEGER     reduce using rule 28 (basic_ops)
    DECIMAL     reduce using rule 28 (basic_ops)
    NEG         reduce using rule 28 (basic_ops)
    IF          reduce using rule 28 (basic_ops)
    ELSE        reduce using rule 28 (basic_ops)
    FOR         reduce using rule 28 (basic_ops)
    READ        reduce using rule 28 (basic_ops)
    WRITE       reduce using rule 28 (basic_ops)
    WRITELN     reduce using rule 28 (basic_ops)
    RETURN      reduce using rule 28 (basic_ops)
    ISTYPE      reduce using rule 28 (basic_ops)
    ADDSET      reduce using rule 28 (basic_ops)
    REMOVE      reduce using rule 28 (basic_ops)
    EXISTS      reduce using rule 28 (basic_ops)
    FORALL      reduce using rule 28 (basic_ops)
    ENDFUNC     reduce using rule 28 (basic_ops)
    PARENL      reduce using rule 28 (basic_ops)


State 342

   30 basic_ops: forall_statement STFUNC statement_list ENDFUNC •

    ID          reduce using rule 30 (basic_ops)
    TYPE        reduce using rule 30 (basic_ops)
    STRING      reduce using rule 30 (basic_ops)
    CHAR        reduce using rule 30 (basic_ops)
    EMPTY       reduce using rule 30 (basic_ops)
    ERRORTOKEN  reduce using rule 30 (basic_ops)
    INTEGER     reduce using rule 30 (basic_ops)
    DECIMAL     reduce using rule 30 (basic_ops)
    NEG         reduce using rule 30 (basic_ops)
    IF          reduce using rule 30 (basic_ops)
    ELSE        reduce using rule 30 (basic_ops)
    FOR         reduce using rule 30 (basic_ops)
    READ        reduce using rule 30 (basic_ops)
    WRITE       reduce using rule 30 (basic_ops)
    WRITELN     reduce using rule 30 (basic_ops)
    RETURN      reduce using rule 30 (basic_ops)
    ISTYPE      reduce using rule 30 (basic_ops)
    ADDSET      reduce using rule 30 (basic_ops)
    REMOVE      reduce using rule 30 (basic_ops)
    EXISTS      reduce using rule 30 (basic_ops)
    FORALL      reduce using rule 30 (basic_ops)
    ENDFUNC     reduce using rule 30 (basic_ops)
    PARENL      reduce using rule 30 (basic_ops)


State 343

   37 if_ops: if_statement STFUNC statement_list ENDFUNC •
   38       | if_statement STFUNC statement_list ENDFUNC • else_statement

    ELSE  shift, and go to state 328

    ID          reduce using rule 37 (if_ops)
    TYPE        reduce using rule 37 (if_ops)
    STRING      reduce using rule 37 (if_ops)
    CHAR        reduce using rule 37 (if_ops)
    EMPTY       reduce using rule 37 (if_ops)
    ERRORTOKEN  reduce using rule 37 (if_ops)
    INTEGER     reduce using rule 37 (if_ops)
    DECIMAL     reduce using rule 37 (if_ops)
    NEG         reduce using rule 37 (if_ops)
    IF          reduce using rule 37 (if_ops)
    FOR         reduce using rule 37 (if_ops)
    READ        reduce using rule 37 (if_ops)
    WRITE       reduce using rule 37 (if_ops)
    WRITELN     reduce using rule 37 (if_ops)
    RETURN      reduce using rule 37 (if_ops)
    ISTYPE      reduce using rule 37 (if_ops)
    ADDSET      reduce using rule 37 (if_ops)
    REMOVE      reduce using rule 37 (if_ops)
    EXISTS      reduce using rule 37 (if_ops)
    FORALL      reduce using rule 37 (if_ops)
    ENDFUNC     reduce using rule 37 (if_ops)
    PARENL      reduce using rule 37 (if_ops)

    else_statement  go to state 349


State 344

   41 else_statement: ELSE $@5 • statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 224
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 225
    WRITE       shift, and go to state 226
    WRITELN     shift, and go to state 227
    RETURN      shift, and go to state 228
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    PARENL      shift, and go to state 55

    statement             go to state 350
    expression_statement  go to state 229
    basic_ops             go to state 230
    for_statement         go to state 231
    forall_statement      go to state 232
    if_ops                go to state 233
    if_statement          go to state 234
    ret_st                go to state 235
    var_dec               go to state 236
    io_ops                go to state 237
    expression            go to state 238
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 345

   43 else_statement: ELSE $@6 • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 351


State 346

   46 io_ops: READ PARENL ID PARENR SEMIC •

    ID          reduce using rule 46 (io_ops)
    TYPE        reduce using rule 46 (io_ops)
    STRING      reduce using rule 46 (io_ops)
    CHAR        reduce using rule 46 (io_ops)
    EMPTY       reduce using rule 46 (io_ops)
    ERRORTOKEN  reduce using rule 46 (io_ops)
    INTEGER     reduce using rule 46 (io_ops)
    DECIMAL     reduce using rule 46 (io_ops)
    NEG         reduce using rule 46 (io_ops)
    IF          reduce using rule 46 (io_ops)
    ELSE        reduce using rule 46 (io_ops)
    FOR         reduce using rule 46 (io_ops)
    READ        reduce using rule 46 (io_ops)
    WRITE       reduce using rule 46 (io_ops)
    WRITELN     reduce using rule 46 (io_ops)
    RETURN      reduce using rule 46 (io_ops)
    ISTYPE      reduce using rule 46 (io_ops)
    ADDSET      reduce using rule 46 (io_ops)
    REMOVE      reduce using rule 46 (io_ops)
    EXISTS      reduce using rule 46 (io_ops)
    FORALL      reduce using rule 46 (io_ops)
    ENDFUNC     reduce using rule 46 (io_ops)
    PARENL      reduce using rule 46 (io_ops)


State 347

   47 io_ops: WRITE PARENL expression PARENR SEMIC •

    ID          reduce using rule 47 (io_ops)
    TYPE        reduce using rule 47 (io_ops)
    STRING      reduce using rule 47 (io_ops)
    CHAR        reduce using rule 47 (io_ops)
    EMPTY       reduce using rule 47 (io_ops)
    ERRORTOKEN  reduce using rule 47 (io_ops)
    INTEGER     reduce using rule 47 (io_ops)
    DECIMAL     reduce using rule 47 (io_ops)
    NEG         reduce using rule 47 (io_ops)
    IF          reduce using rule 47 (io_ops)
    ELSE        reduce using rule 47 (io_ops)
    FOR         reduce using rule 47 (io_ops)
    READ        reduce using rule 47 (io_ops)
    WRITE       reduce using rule 47 (io_ops)
    WRITELN     reduce using rule 47 (io_ops)
    RETURN      reduce using rule 47 (io_ops)
    ISTYPE      reduce using rule 47 (io_ops)
    ADDSET      reduce using rule 47 (io_ops)
    REMOVE      reduce using rule 47 (io_ops)
    EXISTS      reduce using rule 47 (io_ops)
    FORALL      reduce using rule 47 (io_ops)
    ENDFUNC     reduce using rule 47 (io_ops)
    PARENL      reduce using rule 47 (io_ops)


State 348

   48 io_ops: WRITELN PARENL expression PARENR SEMIC •

    ID          reduce using rule 48 (io_ops)
    TYPE        reduce using rule 48 (io_ops)
    STRING      reduce using rule 48 (io_ops)
    CHAR        reduce using rule 48 (io_ops)
    EMPTY       reduce using rule 48 (io_ops)
    ERRORTOKEN  reduce using rule 48 (io_ops)
    INTEGER     reduce using rule 48 (io_ops)
    DECIMAL     reduce using rule 48 (io_ops)
    NEG         reduce using rule 48 (io_ops)
    IF          reduce using rule 48 (io_ops)
    ELSE        reduce using rule 48 (io_ops)
    FOR         reduce using rule 48 (io_ops)
    READ        reduce using rule 48 (io_ops)
    WRITE       reduce using rule 48 (io_ops)
    WRITELN     reduce using rule 48 (io_ops)
    RETURN      reduce using rule 48 (io_ops)
    ISTYPE      reduce using rule 48 (io_ops)
    ADDSET      reduce using rule 48 (io_ops)
    REMOVE      reduce using rule 48 (io_ops)
    EXISTS      reduce using rule 48 (io_ops)
    FORALL      reduce using rule 48 (io_ops)
    ENDFUNC     reduce using rule 48 (io_ops)
    PARENL      reduce using rule 48 (io_ops)


State 349

   38 if_ops: if_statement STFUNC statement_list ENDFUNC else_statement •

    ID          reduce using rule 38 (if_ops)
    TYPE        reduce using rule 38 (if_ops)
    STRING      reduce using rule 38 (if_ops)
    CHAR        reduce using rule 38 (if_ops)
    EMPTY       reduce using rule 38 (if_ops)
    ERRORTOKEN  reduce using rule 38 (if_ops)
    INTEGER     reduce using rule 38 (if_ops)
    DECIMAL     reduce using rule 38 (if_ops)
    NEG         reduce using rule 38 (if_ops)
    IF          reduce using rule 38 (if_ops)
    ELSE        reduce using rule 38 (if_ops)
    FOR         reduce using rule 38 (if_ops)
    READ        reduce using rule 38 (if_ops)
    WRITE       reduce using rule 38 (if_ops)
    WRITELN     reduce using rule 38 (if_ops)
    RETURN      reduce using rule 38 (if_ops)
    ISTYPE      reduce using rule 38 (if_ops)
    ADDSET      reduce using rule 38 (if_ops)
    REMOVE      reduce using rule 38 (if_ops)
    EXISTS      reduce using rule 38 (if_ops)
    FORALL      reduce using rule 38 (if_ops)
    ENDFUNC     reduce using rule 38 (if_ops)
    PARENL      reduce using rule 38 (if_ops)


State 350

   41 else_statement: ELSE $@5 statement •

    ID          reduce using rule 41 (else_statement)
    TYPE        reduce using rule 41 (else_statement)
    STRING      reduce using rule 41 (else_statement)
    CHAR        reduce using rule 41 (else_statement)
    EMPTY       reduce using rule 41 (else_statement)
    ERRORTOKEN  reduce using rule 41 (else_statement)
    INTEGER     reduce using rule 41 (else_statement)
    DECIMAL     reduce using rule 41 (else_statement)
    NEG         reduce using rule 41 (else_statement)
    IF          reduce using rule 41 (else_statement)
    ELSE        reduce using rule 41 (else_statement)
    FOR         reduce using rule 41 (else_statement)
    READ        reduce using rule 41 (else_statement)
    WRITE       reduce using rule 41 (else_statement)
    WRITELN     reduce using rule 41 (else_statement)
    RETURN      reduce using rule 41 (else_statement)
    ISTYPE      reduce using rule 41 (else_statement)
    ADDSET      reduce using rule 41 (else_statement)
    REMOVE      reduce using rule 41 (else_statement)
    EXISTS      reduce using rule 41 (else_statement)
    FORALL      reduce using rule 41 (else_statement)
    ENDFUNC     reduce using rule 41 (else_statement)
    PARENL      reduce using rule 41 (else_statement)


State 351

   43 else_statement: ELSE $@6 STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 352


State 352

   18 statement_list: statement_list • statement
   43 else_statement: ELSE $@6 STFUNC statement_list • ENDFUNC

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 353
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    or_operation          go to state 74
    and_operation         go to state 75
    equality_operation    go to state 76
    relational_operation  go to state 77
    negation_operation    go to state 78
    func_call             go to state 79
    in_set                go to state 80
    assign_value          go to state 81


State 353

   43 else_statement: ELSE $@6 STFUNC statement_list ENDFUNC •

    ID          reduce using rule 43 (else_statement)
    TYPE        reduce using rule 43 (else_statement)
    STRING      reduce using rule 43 (else_statement)
    CHAR        reduce using rule 43 (else_statement)
    EMPTY       reduce using rule 43 (else_statement)
    ERRORTOKEN  reduce using rule 43 (else_statement)
    INTEGER     reduce using rule 43 (else_statement)
    DECIMAL     reduce using rule 43 (else_statement)
    NEG         reduce using rule 43 (else_statement)
    IF          reduce using rule 43 (else_statement)
    ELSE        reduce using rule 43 (else_statement)
    FOR         reduce using rule 43 (else_statement)
    READ        reduce using rule 43 (else_statement)
    WRITE       reduce using rule 43 (else_statement)
    WRITELN     reduce using rule 43 (else_statement)
    RETURN      reduce using rule 43 (else_statement)
    ISTYPE      reduce using rule 43 (else_statement)
    ADDSET      reduce using rule 43 (else_statement)
    REMOVE      reduce using rule 43 (else_statement)
    EXISTS      reduce using rule 43 (else_statement)
    FORALL      reduce using rule 43 (else_statement)
    ENDFUNC     reduce using rule 43 (else_statement)
    PARENL      reduce using rule 43 (else_statement)
