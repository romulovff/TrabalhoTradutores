Grammar

    0 $accept: prog $end

    1 prog: declarations_list

    2 declarations_list: declarations_list declaration
    3                  | declaration
    4                  | error

    5 declaration: var_dec
    6            | func_dec

    7 func_dec: TYPE ID PARENL params_list PARENR STFUNC statement_list ENDFUNC
    8         | TYPE MAIN PARENL params_list PARENR STFUNC statement_list ENDFUNC

    9 params_list: params_list COMMA parameter
   10            | parameter
   11            | %empty
   12            | error

   13 parameter: TYPE ID

   14 statement_list: statement_list statement
   15               | %empty
   16               | error

   17 statement: expression_stmt
   18          | ret_st
   19          | var_dec
   20          | io_ops
   21          | basic_ops

   22 expression_stmt: expression SEMIC

   23 basic_ops: if_ops
   24          | FOR PARENL operation PARENR STFUNC statement_list ENDFUNC
   25          | FORALL PARENL in_set PARENR set_op SEMIC
   26          | FORALL PARENL in_set PARENR STFUNC statement_list ENDFUNC

   27 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC
   28       | IF PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

   29 ret_st: RETURN expression SEMIC

   30 var_dec: TYPE ID SEMIC

   31 io_ops: READ PARENL PARENR SEMIC
   32       | WRITE PARENL expression PARENR SEMIC
   33       | WRITELN PARENL expression PARENR SEMIC

   34 expression: set_op
   35           | operation
   36           | func_call
   37           | assign_value

   38 term: ID
   39     | INTEGER
   40     | DECIMAL
   41     | CHAR
   42     | STRING
   43     | EMPTY
   44     | PARENL expression PARENR

   45 math_op: term DIV expression
   46        | term MULT expression
   47        | term ADD expression
   48        | term SUB expression
   49        | term

   50 set_op: ADDSET PARENL in_set PARENR
   51       | REMOVE PARENL in_set PARENR
   52       | EXISTS PARENL in_set PARENR

   53 operation: math_op
   54          | in_set
   55          | ISTYPE PARENL expression PARENR
   56          | term SMALLER expression
   57          | term GREATER expression
   58          | term SMALLEQ expression
   59          | term GREATEQ expression
   60          | term EQUALS expression
   61          | term DIFFERENT expression
   62          | term OR expression
   63          | term AND expression
   64          | NEG expression

   65 func_call: ID PARENL args_list PARENR

   66 in_set: term IN expression

   67 args_list: args_list COMMA term
   68          | term
   69          | %empty

   70 assign_value: ID ASSIGN expression


Terminals, with rules where they appear

    $end (0) 0
    error (256) 4 12 16
    ID <str> (258) 7 13 30 38 65 70
    TYPE <str> (259) 7 8 13 30
    STRING <str> (260) 42
    CHAR <str> (261) 41
    EMPTY <str> (262) 43
    MAIN <str> (263) 8
    INTEGER <integer> (264) 39
    DECIMAL <dec> (265) 40
    ADD (266) 47
    SUB (267) 48
    MULT (268) 46
    DIV (269) 45
    OR (270) 62
    AND (271) 63
    SMALLER (272) 56
    GREATER (273) 57
    SMALLEQ (274) 58
    GREATEQ (275) 59
    EQUALS (276) 60
    DIFFERENT (277) 61
    ASSIGN (278) 70
    NEG (279) 64
    IF (280) 27 28
    ELSE (281) 28
    FOR (282) 24
    READ (283) 31
    WRITE (284) 32
    WRITELN (285) 33
    RETURN (286) 29
    IN <str> (287) 66
    ISTYPE <str> (288) 55
    ADDSET <str> (289) 50
    REMOVE <str> (290) 51
    EXISTS <str> (291) 52
    FORALL <str> (292) 25 26
    COMMA <str> (293) 9 67
    STFUNC <str> (294) 7 8 24 26 27 28
    ENDFUNC <str> (295) 7 8 24 26 27 28
    PARENL <str> (296) 7 8 24 25 26 27 28 31 32 33 44 50 51 52 55 65
    PARENR <str> (297) 7 8 24 25 26 27 28 31 32 33 44 50 51 52 55 65
    SEMIC <str> (298) 22 25 29 30 31 32 33


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    prog (45)
        on left: 1
        on right: 0
    declarations_list <ast> (46)
        on left: 2 3 4
        on right: 1 2
    declaration <ast> (47)
        on left: 5 6
        on right: 2 3
    func_dec <ast> (48)
        on left: 7 8
        on right: 6
    params_list <ast> (49)
        on left: 9 10 11 12
        on right: 7 8 9
    parameter <ast> (50)
        on left: 13
        on right: 9 10
    statement_list <ast> (51)
        on left: 14 15 16
        on right: 7 8 14 24 26 27 28
    statement <ast> (52)
        on left: 17 18 19 20 21
        on right: 14
    expression_stmt (53)
        on left: 22
        on right: 17
    basic_ops <ast> (54)
        on left: 23 24 25 26
        on right: 21
    if_ops <ast> (55)
        on left: 27 28
        on right: 23
    ret_st <ast> (56)
        on left: 29
        on right: 18
    var_dec <ast> (57)
        on left: 30
        on right: 5 19
    io_ops <ast> (58)
        on left: 31 32 33
        on right: 20
    expression <ast> (59)
        on left: 34 35 36 37
        on right: 22 29 32 33 44 45 46 47 48 55 56 57 58 59 60 61 62 63 64 66 70
    term <ast> (60)
        on left: 38 39 40 41 42 43 44
        on right: 45 46 47 48 49 56 57 58 59 60 61 62 63 66 67 68
    math_op <ast> (61)
        on left: 45 46 47 48 49
        on right: 53
    set_op <ast> (62)
        on left: 50 51 52
        on right: 25 34
    operation <ast> (63)
        on left: 53 54 55 56 57 58 59 60 61 62 63 64
        on right: 24 27 28 35
    func_call <ast> (64)
        on left: 65
        on right: 36
    in_set <ast> (65)
        on left: 66
        on right: 25 26 50 51 52 54
    args_list <ast> (66)
        on left: 67 68 69
        on right: 65 67
    assign_value <ast> (67)
        on left: 70
        on right: 37


State 0

    0 $accept: • prog $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    prog               go to state 3
    declarations_list  go to state 4
    declaration        go to state 5
    func_dec           go to state 6
    var_dec            go to state 7


State 1

    4 declarations_list: error •

    $end  reduce using rule 4 (declarations_list)
    TYPE  reduce using rule 4 (declarations_list)


State 2

    7 func_dec: TYPE • ID PARENL params_list PARENR STFUNC statement_list ENDFUNC
    8         | TYPE • MAIN PARENL params_list PARENR STFUNC statement_list ENDFUNC
   30 var_dec: TYPE • ID SEMIC

    ID    shift, and go to state 8
    MAIN  shift, and go to state 9


State 3

    0 $accept: prog • $end

    $end  shift, and go to state 10


State 4

    1 prog: declarations_list •
    2 declarations_list: declarations_list • declaration

    TYPE  shift, and go to state 2

    $end  reduce using rule 1 (prog)

    declaration  go to state 11
    func_dec     go to state 6
    var_dec      go to state 7


State 5

    3 declarations_list: declaration •

    $end  reduce using rule 3 (declarations_list)
    TYPE  reduce using rule 3 (declarations_list)


State 6

    6 declaration: func_dec •

    $end  reduce using rule 6 (declaration)
    TYPE  reduce using rule 6 (declaration)


State 7

    5 declaration: var_dec •

    $end  reduce using rule 5 (declaration)
    TYPE  reduce using rule 5 (declaration)


State 8

    7 func_dec: TYPE ID • PARENL params_list PARENR STFUNC statement_list ENDFUNC
   30 var_dec: TYPE ID • SEMIC

    PARENL  shift, and go to state 12
    SEMIC   shift, and go to state 13


State 9

    8 func_dec: TYPE MAIN • PARENL params_list PARENR STFUNC statement_list ENDFUNC

    PARENL  shift, and go to state 14


State 10

    0 $accept: prog $end •

    $default  accept


State 11

    2 declarations_list: declarations_list declaration •

    $end  reduce using rule 2 (declarations_list)
    TYPE  reduce using rule 2 (declarations_list)


State 12

    7 func_dec: TYPE ID PARENL • params_list PARENR STFUNC statement_list ENDFUNC

    error  shift, and go to state 15
    TYPE   shift, and go to state 16

    COMMA   reduce using rule 11 (params_list)
    PARENR  reduce using rule 11 (params_list)

    params_list  go to state 17
    parameter    go to state 18


State 13

   30 var_dec: TYPE ID SEMIC •

    $end  reduce using rule 30 (var_dec)
    TYPE  reduce using rule 30 (var_dec)


State 14

    8 func_dec: TYPE MAIN PARENL • params_list PARENR STFUNC statement_list ENDFUNC

    error  shift, and go to state 15
    TYPE   shift, and go to state 16

    COMMA   reduce using rule 11 (params_list)
    PARENR  reduce using rule 11 (params_list)

    params_list  go to state 19
    parameter    go to state 18


State 15

   12 params_list: error •

    COMMA   reduce using rule 12 (params_list)
    PARENR  reduce using rule 12 (params_list)


State 16

   13 parameter: TYPE • ID

    ID  shift, and go to state 20


State 17

    7 func_dec: TYPE ID PARENL params_list • PARENR STFUNC statement_list ENDFUNC
    9 params_list: params_list • COMMA parameter

    COMMA   shift, and go to state 21
    PARENR  shift, and go to state 22


State 18

   10 params_list: parameter •

    COMMA   reduce using rule 10 (params_list)
    PARENR  reduce using rule 10 (params_list)


State 19

    8 func_dec: TYPE MAIN PARENL params_list • PARENR STFUNC statement_list ENDFUNC
    9 params_list: params_list • COMMA parameter

    COMMA   shift, and go to state 21
    PARENR  shift, and go to state 23


State 20

   13 parameter: TYPE ID •

    COMMA   reduce using rule 13 (parameter)
    PARENR  reduce using rule 13 (parameter)


State 21

    9 params_list: params_list COMMA • parameter

    TYPE  shift, and go to state 16

    parameter  go to state 24


State 22

    7 func_dec: TYPE ID PARENL params_list PARENR • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 25


State 23

    8 func_dec: TYPE MAIN PARENL params_list PARENR • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 26


State 24

    9 params_list: params_list COMMA parameter •

    COMMA   reduce using rule 9 (params_list)
    PARENR  reduce using rule 9 (params_list)


State 25

    7 func_dec: TYPE ID PARENL params_list PARENR STFUNC • statement_list ENDFUNC

    error  shift, and go to state 27

    ID       reduce using rule 15 (statement_list)
    TYPE     reduce using rule 15 (statement_list)
    STRING   reduce using rule 15 (statement_list)
    CHAR     reduce using rule 15 (statement_list)
    EMPTY    reduce using rule 15 (statement_list)
    INTEGER  reduce using rule 15 (statement_list)
    DECIMAL  reduce using rule 15 (statement_list)
    NEG      reduce using rule 15 (statement_list)
    IF       reduce using rule 15 (statement_list)
    FOR      reduce using rule 15 (statement_list)
    READ     reduce using rule 15 (statement_list)
    WRITE    reduce using rule 15 (statement_list)
    WRITELN  reduce using rule 15 (statement_list)
    RETURN   reduce using rule 15 (statement_list)
    ISTYPE   reduce using rule 15 (statement_list)
    ADDSET   reduce using rule 15 (statement_list)
    REMOVE   reduce using rule 15 (statement_list)
    EXISTS   reduce using rule 15 (statement_list)
    FORALL   reduce using rule 15 (statement_list)
    ENDFUNC  reduce using rule 15 (statement_list)
    PARENL   reduce using rule 15 (statement_list)

    statement_list  go to state 28


State 26

    8 func_dec: TYPE MAIN PARENL params_list PARENR STFUNC • statement_list ENDFUNC

    error  shift, and go to state 27

    ID       reduce using rule 15 (statement_list)
    TYPE     reduce using rule 15 (statement_list)
    STRING   reduce using rule 15 (statement_list)
    CHAR     reduce using rule 15 (statement_list)
    EMPTY    reduce using rule 15 (statement_list)
    INTEGER  reduce using rule 15 (statement_list)
    DECIMAL  reduce using rule 15 (statement_list)
    NEG      reduce using rule 15 (statement_list)
    IF       reduce using rule 15 (statement_list)
    FOR      reduce using rule 15 (statement_list)
    READ     reduce using rule 15 (statement_list)
    WRITE    reduce using rule 15 (statement_list)
    WRITELN  reduce using rule 15 (statement_list)
    RETURN   reduce using rule 15 (statement_list)
    ISTYPE   reduce using rule 15 (statement_list)
    ADDSET   reduce using rule 15 (statement_list)
    REMOVE   reduce using rule 15 (statement_list)
    EXISTS   reduce using rule 15 (statement_list)
    FORALL   reduce using rule 15 (statement_list)
    ENDFUNC  reduce using rule 15 (statement_list)
    PARENL   reduce using rule 15 (statement_list)

    statement_list  go to state 29


State 27

   16 statement_list: error •

    ID       reduce using rule 16 (statement_list)
    TYPE     reduce using rule 16 (statement_list)
    STRING   reduce using rule 16 (statement_list)
    CHAR     reduce using rule 16 (statement_list)
    EMPTY    reduce using rule 16 (statement_list)
    INTEGER  reduce using rule 16 (statement_list)
    DECIMAL  reduce using rule 16 (statement_list)
    NEG      reduce using rule 16 (statement_list)
    IF       reduce using rule 16 (statement_list)
    FOR      reduce using rule 16 (statement_list)
    READ     reduce using rule 16 (statement_list)
    WRITE    reduce using rule 16 (statement_list)
    WRITELN  reduce using rule 16 (statement_list)
    RETURN   reduce using rule 16 (statement_list)
    ISTYPE   reduce using rule 16 (statement_list)
    ADDSET   reduce using rule 16 (statement_list)
    REMOVE   reduce using rule 16 (statement_list)
    EXISTS   reduce using rule 16 (statement_list)
    FORALL   reduce using rule 16 (statement_list)
    ENDFUNC  reduce using rule 16 (statement_list)
    PARENL   reduce using rule 16 (statement_list)


State 28

    7 func_dec: TYPE ID PARENL params_list PARENR STFUNC statement_list • ENDFUNC
   14 statement_list: statement_list • statement

    ID       shift, and go to state 30
    TYPE     shift, and go to state 31
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    IF       shift, and go to state 38
    FOR      shift, and go to state 39
    READ     shift, and go to state 40
    WRITE    shift, and go to state 41
    WRITELN  shift, and go to state 42
    RETURN   shift, and go to state 43
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    FORALL   shift, and go to state 48
    ENDFUNC  shift, and go to state 49
    PARENL   shift, and go to state 50

    statement        go to state 51
    expression_stmt  go to state 52
    basic_ops        go to state 53
    if_ops           go to state 54
    ret_st           go to state 55
    var_dec          go to state 56
    io_ops           go to state 57
    expression       go to state 58
    term             go to state 59
    math_op          go to state 60
    set_op           go to state 61
    operation        go to state 62
    func_call        go to state 63
    in_set           go to state 64
    assign_value     go to state 65


State 29

    8 func_dec: TYPE MAIN PARENL params_list PARENR STFUNC statement_list • ENDFUNC
   14 statement_list: statement_list • statement

    ID       shift, and go to state 30
    TYPE     shift, and go to state 31
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    IF       shift, and go to state 38
    FOR      shift, and go to state 39
    READ     shift, and go to state 40
    WRITE    shift, and go to state 41
    WRITELN  shift, and go to state 42
    RETURN   shift, and go to state 43
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    FORALL   shift, and go to state 48
    ENDFUNC  shift, and go to state 66
    PARENL   shift, and go to state 50

    statement        go to state 51
    expression_stmt  go to state 52
    basic_ops        go to state 53
    if_ops           go to state 54
    ret_st           go to state 55
    var_dec          go to state 56
    io_ops           go to state 57
    expression       go to state 58
    term             go to state 59
    math_op          go to state 60
    set_op           go to state 61
    operation        go to state 62
    func_call        go to state 63
    in_set           go to state 64
    assign_value     go to state 65


State 30

   38 term: ID •
   65 func_call: ID • PARENL args_list PARENR
   70 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 67
    PARENL  shift, and go to state 68

    ADD        reduce using rule 38 (term)
    SUB        reduce using rule 38 (term)
    MULT       reduce using rule 38 (term)
    DIV        reduce using rule 38 (term)
    OR         reduce using rule 38 (term)
    AND        reduce using rule 38 (term)
    SMALLER    reduce using rule 38 (term)
    GREATER    reduce using rule 38 (term)
    SMALLEQ    reduce using rule 38 (term)
    GREATEQ    reduce using rule 38 (term)
    EQUALS     reduce using rule 38 (term)
    DIFFERENT  reduce using rule 38 (term)
    IN         reduce using rule 38 (term)
    SEMIC      reduce using rule 38 (term)


State 31

   30 var_dec: TYPE • ID SEMIC

    ID  shift, and go to state 69


State 32

   42 term: STRING •

    ADD        reduce using rule 42 (term)
    SUB        reduce using rule 42 (term)
    MULT       reduce using rule 42 (term)
    DIV        reduce using rule 42 (term)
    OR         reduce using rule 42 (term)
    AND        reduce using rule 42 (term)
    SMALLER    reduce using rule 42 (term)
    GREATER    reduce using rule 42 (term)
    SMALLEQ    reduce using rule 42 (term)
    GREATEQ    reduce using rule 42 (term)
    EQUALS     reduce using rule 42 (term)
    DIFFERENT  reduce using rule 42 (term)
    IN         reduce using rule 42 (term)
    SEMIC      reduce using rule 42 (term)


State 33

   41 term: CHAR •

    ADD        reduce using rule 41 (term)
    SUB        reduce using rule 41 (term)
    MULT       reduce using rule 41 (term)
    DIV        reduce using rule 41 (term)
    OR         reduce using rule 41 (term)
    AND        reduce using rule 41 (term)
    SMALLER    reduce using rule 41 (term)
    GREATER    reduce using rule 41 (term)
    SMALLEQ    reduce using rule 41 (term)
    GREATEQ    reduce using rule 41 (term)
    EQUALS     reduce using rule 41 (term)
    DIFFERENT  reduce using rule 41 (term)
    IN         reduce using rule 41 (term)
    SEMIC      reduce using rule 41 (term)


State 34

   43 term: EMPTY •

    ADD        reduce using rule 43 (term)
    SUB        reduce using rule 43 (term)
    MULT       reduce using rule 43 (term)
    DIV        reduce using rule 43 (term)
    OR         reduce using rule 43 (term)
    AND        reduce using rule 43 (term)
    SMALLER    reduce using rule 43 (term)
    GREATER    reduce using rule 43 (term)
    SMALLEQ    reduce using rule 43 (term)
    GREATEQ    reduce using rule 43 (term)
    EQUALS     reduce using rule 43 (term)
    DIFFERENT  reduce using rule 43 (term)
    IN         reduce using rule 43 (term)
    SEMIC      reduce using rule 43 (term)


State 35

   39 term: INTEGER •

    ADD        reduce using rule 39 (term)
    SUB        reduce using rule 39 (term)
    MULT       reduce using rule 39 (term)
    DIV        reduce using rule 39 (term)
    OR         reduce using rule 39 (term)
    AND        reduce using rule 39 (term)
    SMALLER    reduce using rule 39 (term)
    GREATER    reduce using rule 39 (term)
    SMALLEQ    reduce using rule 39 (term)
    GREATEQ    reduce using rule 39 (term)
    EQUALS     reduce using rule 39 (term)
    DIFFERENT  reduce using rule 39 (term)
    IN         reduce using rule 39 (term)
    SEMIC      reduce using rule 39 (term)


State 36

   40 term: DECIMAL •

    ADD        reduce using rule 40 (term)
    SUB        reduce using rule 40 (term)
    MULT       reduce using rule 40 (term)
    DIV        reduce using rule 40 (term)
    OR         reduce using rule 40 (term)
    AND        reduce using rule 40 (term)
    SMALLER    reduce using rule 40 (term)
    GREATER    reduce using rule 40 (term)
    SMALLEQ    reduce using rule 40 (term)
    GREATEQ    reduce using rule 40 (term)
    EQUALS     reduce using rule 40 (term)
    DIFFERENT  reduce using rule 40 (term)
    IN         reduce using rule 40 (term)
    SEMIC      reduce using rule 40 (term)


State 37

   64 operation: NEG • expression

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 70
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 38

   27 if_ops: IF • PARENL operation PARENR STFUNC statement_list ENDFUNC
   28       | IF • PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    PARENL  shift, and go to state 71


State 39

   24 basic_ops: FOR • PARENL operation PARENR STFUNC statement_list ENDFUNC

    PARENL  shift, and go to state 72


State 40

   31 io_ops: READ • PARENL PARENR SEMIC

    PARENL  shift, and go to state 73


State 41

   32 io_ops: WRITE • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 74


State 42

   33 io_ops: WRITELN • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 75


State 43

   29 ret_st: RETURN • expression SEMIC

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 76
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 44

   55 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 77


State 45

   50 set_op: ADDSET • PARENL in_set PARENR

    PARENL  shift, and go to state 78


State 46

   51 set_op: REMOVE • PARENL in_set PARENR

    PARENL  shift, and go to state 79


State 47

   52 set_op: EXISTS • PARENL in_set PARENR

    PARENL  shift, and go to state 80


State 48

   25 basic_ops: FORALL • PARENL in_set PARENR set_op SEMIC
   26          | FORALL • PARENL in_set PARENR STFUNC statement_list ENDFUNC

    PARENL  shift, and go to state 81


State 49

    7 func_dec: TYPE ID PARENL params_list PARENR STFUNC statement_list ENDFUNC •

    $end  reduce using rule 7 (func_dec)
    TYPE  reduce using rule 7 (func_dec)


State 50

   44 term: PARENL • expression PARENR

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 82
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 51

   14 statement_list: statement_list statement •

    ID       reduce using rule 14 (statement_list)
    TYPE     reduce using rule 14 (statement_list)
    STRING   reduce using rule 14 (statement_list)
    CHAR     reduce using rule 14 (statement_list)
    EMPTY    reduce using rule 14 (statement_list)
    INTEGER  reduce using rule 14 (statement_list)
    DECIMAL  reduce using rule 14 (statement_list)
    NEG      reduce using rule 14 (statement_list)
    IF       reduce using rule 14 (statement_list)
    FOR      reduce using rule 14 (statement_list)
    READ     reduce using rule 14 (statement_list)
    WRITE    reduce using rule 14 (statement_list)
    WRITELN  reduce using rule 14 (statement_list)
    RETURN   reduce using rule 14 (statement_list)
    ISTYPE   reduce using rule 14 (statement_list)
    ADDSET   reduce using rule 14 (statement_list)
    REMOVE   reduce using rule 14 (statement_list)
    EXISTS   reduce using rule 14 (statement_list)
    FORALL   reduce using rule 14 (statement_list)
    ENDFUNC  reduce using rule 14 (statement_list)
    PARENL   reduce using rule 14 (statement_list)


State 52

   17 statement: expression_stmt •

    ID       reduce using rule 17 (statement)
    TYPE     reduce using rule 17 (statement)
    STRING   reduce using rule 17 (statement)
    CHAR     reduce using rule 17 (statement)
    EMPTY    reduce using rule 17 (statement)
    INTEGER  reduce using rule 17 (statement)
    DECIMAL  reduce using rule 17 (statement)
    NEG      reduce using rule 17 (statement)
    IF       reduce using rule 17 (statement)
    FOR      reduce using rule 17 (statement)
    READ     reduce using rule 17 (statement)
    WRITE    reduce using rule 17 (statement)
    WRITELN  reduce using rule 17 (statement)
    RETURN   reduce using rule 17 (statement)
    ISTYPE   reduce using rule 17 (statement)
    ADDSET   reduce using rule 17 (statement)
    REMOVE   reduce using rule 17 (statement)
    EXISTS   reduce using rule 17 (statement)
    FORALL   reduce using rule 17 (statement)
    ENDFUNC  reduce using rule 17 (statement)
    PARENL   reduce using rule 17 (statement)


State 53

   21 statement: basic_ops •

    ID       reduce using rule 21 (statement)
    TYPE     reduce using rule 21 (statement)
    STRING   reduce using rule 21 (statement)
    CHAR     reduce using rule 21 (statement)
    EMPTY    reduce using rule 21 (statement)
    INTEGER  reduce using rule 21 (statement)
    DECIMAL  reduce using rule 21 (statement)
    NEG      reduce using rule 21 (statement)
    IF       reduce using rule 21 (statement)
    FOR      reduce using rule 21 (statement)
    READ     reduce using rule 21 (statement)
    WRITE    reduce using rule 21 (statement)
    WRITELN  reduce using rule 21 (statement)
    RETURN   reduce using rule 21 (statement)
    ISTYPE   reduce using rule 21 (statement)
    ADDSET   reduce using rule 21 (statement)
    REMOVE   reduce using rule 21 (statement)
    EXISTS   reduce using rule 21 (statement)
    FORALL   reduce using rule 21 (statement)
    ENDFUNC  reduce using rule 21 (statement)
    PARENL   reduce using rule 21 (statement)


State 54

   23 basic_ops: if_ops •

    ID       reduce using rule 23 (basic_ops)
    TYPE     reduce using rule 23 (basic_ops)
    STRING   reduce using rule 23 (basic_ops)
    CHAR     reduce using rule 23 (basic_ops)
    EMPTY    reduce using rule 23 (basic_ops)
    INTEGER  reduce using rule 23 (basic_ops)
    DECIMAL  reduce using rule 23 (basic_ops)
    NEG      reduce using rule 23 (basic_ops)
    IF       reduce using rule 23 (basic_ops)
    FOR      reduce using rule 23 (basic_ops)
    READ     reduce using rule 23 (basic_ops)
    WRITE    reduce using rule 23 (basic_ops)
    WRITELN  reduce using rule 23 (basic_ops)
    RETURN   reduce using rule 23 (basic_ops)
    ISTYPE   reduce using rule 23 (basic_ops)
    ADDSET   reduce using rule 23 (basic_ops)
    REMOVE   reduce using rule 23 (basic_ops)
    EXISTS   reduce using rule 23 (basic_ops)
    FORALL   reduce using rule 23 (basic_ops)
    ENDFUNC  reduce using rule 23 (basic_ops)
    PARENL   reduce using rule 23 (basic_ops)


State 55

   18 statement: ret_st •

    ID       reduce using rule 18 (statement)
    TYPE     reduce using rule 18 (statement)
    STRING   reduce using rule 18 (statement)
    CHAR     reduce using rule 18 (statement)
    EMPTY    reduce using rule 18 (statement)
    INTEGER  reduce using rule 18 (statement)
    DECIMAL  reduce using rule 18 (statement)
    NEG      reduce using rule 18 (statement)
    IF       reduce using rule 18 (statement)
    FOR      reduce using rule 18 (statement)
    READ     reduce using rule 18 (statement)
    WRITE    reduce using rule 18 (statement)
    WRITELN  reduce using rule 18 (statement)
    RETURN   reduce using rule 18 (statement)
    ISTYPE   reduce using rule 18 (statement)
    ADDSET   reduce using rule 18 (statement)
    REMOVE   reduce using rule 18 (statement)
    EXISTS   reduce using rule 18 (statement)
    FORALL   reduce using rule 18 (statement)
    ENDFUNC  reduce using rule 18 (statement)
    PARENL   reduce using rule 18 (statement)


State 56

   19 statement: var_dec •

    ID       reduce using rule 19 (statement)
    TYPE     reduce using rule 19 (statement)
    STRING   reduce using rule 19 (statement)
    CHAR     reduce using rule 19 (statement)
    EMPTY    reduce using rule 19 (statement)
    INTEGER  reduce using rule 19 (statement)
    DECIMAL  reduce using rule 19 (statement)
    NEG      reduce using rule 19 (statement)
    IF       reduce using rule 19 (statement)
    FOR      reduce using rule 19 (statement)
    READ     reduce using rule 19 (statement)
    WRITE    reduce using rule 19 (statement)
    WRITELN  reduce using rule 19 (statement)
    RETURN   reduce using rule 19 (statement)
    ISTYPE   reduce using rule 19 (statement)
    ADDSET   reduce using rule 19 (statement)
    REMOVE   reduce using rule 19 (statement)
    EXISTS   reduce using rule 19 (statement)
    FORALL   reduce using rule 19 (statement)
    ENDFUNC  reduce using rule 19 (statement)
    PARENL   reduce using rule 19 (statement)


State 57

   20 statement: io_ops •

    ID       reduce using rule 20 (statement)
    TYPE     reduce using rule 20 (statement)
    STRING   reduce using rule 20 (statement)
    CHAR     reduce using rule 20 (statement)
    EMPTY    reduce using rule 20 (statement)
    INTEGER  reduce using rule 20 (statement)
    DECIMAL  reduce using rule 20 (statement)
    NEG      reduce using rule 20 (statement)
    IF       reduce using rule 20 (statement)
    FOR      reduce using rule 20 (statement)
    READ     reduce using rule 20 (statement)
    WRITE    reduce using rule 20 (statement)
    WRITELN  reduce using rule 20 (statement)
    RETURN   reduce using rule 20 (statement)
    ISTYPE   reduce using rule 20 (statement)
    ADDSET   reduce using rule 20 (statement)
    REMOVE   reduce using rule 20 (statement)
    EXISTS   reduce using rule 20 (statement)
    FORALL   reduce using rule 20 (statement)
    ENDFUNC  reduce using rule 20 (statement)
    PARENL   reduce using rule 20 (statement)


State 58

   22 expression_stmt: expression • SEMIC

    SEMIC  shift, and go to state 83


State 59

   45 math_op: term • DIV expression
   46        | term • MULT expression
   47        | term • ADD expression
   48        | term • SUB expression
   49        | term •
   56 operation: term • SMALLER expression
   57          | term • GREATER expression
   58          | term • SMALLEQ expression
   59          | term • GREATEQ expression
   60          | term • EQUALS expression
   61          | term • DIFFERENT expression
   62          | term • OR expression
   63          | term • AND expression
   66 in_set: term • IN expression

    ADD        shift, and go to state 84
    SUB        shift, and go to state 85
    MULT       shift, and go to state 86
    DIV        shift, and go to state 87
    OR         shift, and go to state 88
    AND        shift, and go to state 89
    SMALLER    shift, and go to state 90
    GREATER    shift, and go to state 91
    SMALLEQ    shift, and go to state 92
    GREATEQ    shift, and go to state 93
    EQUALS     shift, and go to state 94
    DIFFERENT  shift, and go to state 95
    IN         shift, and go to state 96

    SEMIC  reduce using rule 49 (math_op)


State 60

   53 operation: math_op •

    SEMIC  reduce using rule 53 (operation)


State 61

   34 expression: set_op •

    SEMIC  reduce using rule 34 (expression)


State 62

   35 expression: operation •

    SEMIC  reduce using rule 35 (expression)


State 63

   36 expression: func_call •

    SEMIC  reduce using rule 36 (expression)


State 64

   54 operation: in_set •

    SEMIC  reduce using rule 54 (operation)


State 65

   37 expression: assign_value •

    SEMIC  reduce using rule 37 (expression)


State 66

    8 func_dec: TYPE MAIN PARENL params_list PARENR STFUNC statement_list ENDFUNC •

    $end  reduce using rule 8 (func_dec)
    TYPE  reduce using rule 8 (func_dec)


State 67

   70 assign_value: ID ASSIGN • expression

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 97
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 68

   65 func_call: ID PARENL • args_list PARENR

    ID       shift, and go to state 98
    STRING   shift, and go to state 176
    CHAR     shift, and go to state 177
    EMPTY    shift, and go to state 178
    INTEGER  shift, and go to state 179
    DECIMAL  shift, and go to state 180
    PARENL   shift, and go to state 181

    COMMA   reduce using rule 69 (args_list)
    PARENR  reduce using rule 69 (args_list)

    term       go to state 99
    args_list  go to state 100


State 69

   30 var_dec: TYPE ID • SEMIC

    SEMIC  shift, and go to state 182


State 70

   64 operation: NEG expression •

    SEMIC  reduce using rule 64 (operation)


State 71

   27 if_ops: IF PARENL • operation PARENR STFUNC statement_list ENDFUNC
   28       | IF PARENL • operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    ID       shift, and go to state 183
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    PARENL   shift, and go to state 168

    term       go to state 169
    math_op    go to state 170
    operation  go to state 101
    in_set     go to state 174


State 72

   24 basic_ops: FOR PARENL • operation PARENR STFUNC statement_list ENDFUNC

    ID       shift, and go to state 183
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    PARENL   shift, and go to state 168

    term       go to state 169
    math_op    go to state 170
    operation  go to state 102
    in_set     go to state 174


State 73

   31 io_ops: READ PARENL • PARENR SEMIC

    PARENR  shift, and go to state 103


State 74

   32 io_ops: WRITE PARENL • expression PARENR SEMIC

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 104
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 75

   33 io_ops: WRITELN PARENL • expression PARENR SEMIC

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 105
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 76

   29 ret_st: RETURN expression • SEMIC

    SEMIC  shift, and go to state 106


State 77

   55 operation: ISTYPE PARENL • expression PARENR

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 107
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 78

   50 set_op: ADDSET PARENL • in_set PARENR

    ID       shift, and go to state 184
    STRING   shift, and go to state 185
    CHAR     shift, and go to state 186
    EMPTY    shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    term    go to state 108
    in_set  go to state 109


State 79

   51 set_op: REMOVE PARENL • in_set PARENR

    ID       shift, and go to state 184
    STRING   shift, and go to state 185
    CHAR     shift, and go to state 186
    EMPTY    shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    term    go to state 108
    in_set  go to state 110


State 80

   52 set_op: EXISTS PARENL • in_set PARENR

    ID       shift, and go to state 184
    STRING   shift, and go to state 185
    CHAR     shift, and go to state 186
    EMPTY    shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    term    go to state 108
    in_set  go to state 111


State 81

   25 basic_ops: FORALL PARENL • in_set PARENR set_op SEMIC
   26          | FORALL PARENL • in_set PARENR STFUNC statement_list ENDFUNC

    ID       shift, and go to state 184
    STRING   shift, and go to state 185
    CHAR     shift, and go to state 186
    EMPTY    shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    term    go to state 108
    in_set  go to state 112


State 82

   44 term: PARENL expression • PARENR

    PARENR  shift, and go to state 113


State 83

   22 expression_stmt: expression SEMIC •

    ID       reduce using rule 22 (expression_stmt)
    TYPE     reduce using rule 22 (expression_stmt)
    STRING   reduce using rule 22 (expression_stmt)
    CHAR     reduce using rule 22 (expression_stmt)
    EMPTY    reduce using rule 22 (expression_stmt)
    INTEGER  reduce using rule 22 (expression_stmt)
    DECIMAL  reduce using rule 22 (expression_stmt)
    NEG      reduce using rule 22 (expression_stmt)
    IF       reduce using rule 22 (expression_stmt)
    FOR      reduce using rule 22 (expression_stmt)
    READ     reduce using rule 22 (expression_stmt)
    WRITE    reduce using rule 22 (expression_stmt)
    WRITELN  reduce using rule 22 (expression_stmt)
    RETURN   reduce using rule 22 (expression_stmt)
    ISTYPE   reduce using rule 22 (expression_stmt)
    ADDSET   reduce using rule 22 (expression_stmt)
    REMOVE   reduce using rule 22 (expression_stmt)
    EXISTS   reduce using rule 22 (expression_stmt)
    FORALL   reduce using rule 22 (expression_stmt)
    ENDFUNC  reduce using rule 22 (expression_stmt)
    PARENL   reduce using rule 22 (expression_stmt)


State 84

   47 math_op: term ADD • expression

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 114
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 85

   48 math_op: term SUB • expression

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 115
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 86

   46 math_op: term MULT • expression

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 116
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 87

   45 math_op: term DIV • expression

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 117
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 88

   62 operation: term OR • expression

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 118
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 89

   63 operation: term AND • expression

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 119
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 90

   56 operation: term SMALLER • expression

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 120
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 91

   57 operation: term GREATER • expression

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 121
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 92

   58 operation: term SMALLEQ • expression

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 122
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 93

   59 operation: term GREATEQ • expression

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 123
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 94

   60 operation: term EQUALS • expression

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 124
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 95

   61 operation: term DIFFERENT • expression

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 125
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 96

   66 in_set: term IN • expression

    ID       shift, and go to state 30
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    PARENL   shift, and go to state 50

    expression    go to state 126
    term          go to state 59
    math_op       go to state 60
    set_op        go to state 61
    operation     go to state 62
    func_call     go to state 63
    in_set        go to state 64
    assign_value  go to state 65


State 97

   70 assign_value: ID ASSIGN expression •

    SEMIC  reduce using rule 70 (assign_value)


State 98

   38 term: ID •

    COMMA   reduce using rule 38 (term)
    PARENR  reduce using rule 38 (term)


State 99

   68 args_list: term •

    COMMA   reduce using rule 68 (args_list)
    PARENR  reduce using rule 68 (args_list)


State 100

   65 func_call: ID PARENL args_list • PARENR
   67 args_list: args_list • COMMA term

    COMMA   shift, and go to state 127
    PARENR  shift, and go to state 128


State 101

   27 if_ops: IF PARENL operation • PARENR STFUNC statement_list ENDFUNC
   28       | IF PARENL operation • PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    PARENR  shift, and go to state 129


State 102

   24 basic_ops: FOR PARENL operation • PARENR STFUNC statement_list ENDFUNC

    PARENR  shift, and go to state 130


State 103

   31 io_ops: READ PARENL PARENR • SEMIC

    SEMIC  shift, and go to state 131


State 104

   32 io_ops: WRITE PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 132


State 105

   33 io_ops: WRITELN PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 133


State 106

   29 ret_st: RETURN expression SEMIC •

    ID       reduce using rule 29 (ret_st)
    TYPE     reduce using rule 29 (ret_st)
    STRING   reduce using rule 29 (ret_st)
    CHAR     reduce using rule 29 (ret_st)
    EMPTY    reduce using rule 29 (ret_st)
    INTEGER  reduce using rule 29 (ret_st)
    DECIMAL  reduce using rule 29 (ret_st)
    NEG      reduce using rule 29 (ret_st)
    IF       reduce using rule 29 (ret_st)
    FOR      reduce using rule 29 (ret_st)
    READ     reduce using rule 29 (ret_st)
    WRITE    reduce using rule 29 (ret_st)
    WRITELN  reduce using rule 29 (ret_st)
    RETURN   reduce using rule 29 (ret_st)
    ISTYPE   reduce using rule 29 (ret_st)
    ADDSET   reduce using rule 29 (ret_st)
    REMOVE   reduce using rule 29 (ret_st)
    EXISTS   reduce using rule 29 (ret_st)
    FORALL   reduce using rule 29 (ret_st)
    ENDFUNC  reduce using rule 29 (ret_st)
    PARENL   reduce using rule 29 (ret_st)


State 107

   55 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 134


State 108

   66 in_set: term • IN expression

    IN  shift, and go to state 191


State 109

   50 set_op: ADDSET PARENL in_set • PARENR

    PARENR  shift, and go to state 135


State 110

   51 set_op: REMOVE PARENL in_set • PARENR

    PARENR  shift, and go to state 136


State 111

   52 set_op: EXISTS PARENL in_set • PARENR

    PARENR  shift, and go to state 137


State 112

   25 basic_ops: FORALL PARENL in_set • PARENR set_op SEMIC
   26          | FORALL PARENL in_set • PARENR STFUNC statement_list ENDFUNC

    PARENR  shift, and go to state 138


State 113

   44 term: PARENL expression PARENR •

    ADD        reduce using rule 44 (term)
    SUB        reduce using rule 44 (term)
    MULT       reduce using rule 44 (term)
    DIV        reduce using rule 44 (term)
    OR         reduce using rule 44 (term)
    AND        reduce using rule 44 (term)
    SMALLER    reduce using rule 44 (term)
    GREATER    reduce using rule 44 (term)
    SMALLEQ    reduce using rule 44 (term)
    GREATEQ    reduce using rule 44 (term)
    EQUALS     reduce using rule 44 (term)
    DIFFERENT  reduce using rule 44 (term)
    IN         reduce using rule 44 (term)
    SEMIC      reduce using rule 44 (term)


State 114

   47 math_op: term ADD expression •

    SEMIC  reduce using rule 47 (math_op)


State 115

   48 math_op: term SUB expression •

    SEMIC  reduce using rule 48 (math_op)


State 116

   46 math_op: term MULT expression •

    SEMIC  reduce using rule 46 (math_op)


State 117

   45 math_op: term DIV expression •

    SEMIC  reduce using rule 45 (math_op)


State 118

   62 operation: term OR expression •

    SEMIC  reduce using rule 62 (operation)


State 119

   63 operation: term AND expression •

    SEMIC  reduce using rule 63 (operation)


State 120

   56 operation: term SMALLER expression •

    SEMIC  reduce using rule 56 (operation)


State 121

   57 operation: term GREATER expression •

    SEMIC  reduce using rule 57 (operation)


State 122

   58 operation: term SMALLEQ expression •

    SEMIC  reduce using rule 58 (operation)


State 123

   59 operation: term GREATEQ expression •

    SEMIC  reduce using rule 59 (operation)


State 124

   60 operation: term EQUALS expression •

    SEMIC  reduce using rule 60 (operation)


State 125

   61 operation: term DIFFERENT expression •

    SEMIC  reduce using rule 61 (operation)


State 126

   66 in_set: term IN expression •

    SEMIC  reduce using rule 66 (in_set)


State 127

   67 args_list: args_list COMMA • term

    ID       shift, and go to state 98
    STRING   shift, and go to state 176
    CHAR     shift, and go to state 177
    EMPTY    shift, and go to state 178
    INTEGER  shift, and go to state 179
    DECIMAL  shift, and go to state 180
    PARENL   shift, and go to state 181

    term  go to state 139


State 128

   65 func_call: ID PARENL args_list PARENR •

    SEMIC  reduce using rule 65 (func_call)


State 129

   27 if_ops: IF PARENL operation PARENR • STFUNC statement_list ENDFUNC
   28       | IF PARENL operation PARENR • STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 140


State 130

   24 basic_ops: FOR PARENL operation PARENR • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 141


State 131

   31 io_ops: READ PARENL PARENR SEMIC •

    ID       reduce using rule 31 (io_ops)
    TYPE     reduce using rule 31 (io_ops)
    STRING   reduce using rule 31 (io_ops)
    CHAR     reduce using rule 31 (io_ops)
    EMPTY    reduce using rule 31 (io_ops)
    INTEGER  reduce using rule 31 (io_ops)
    DECIMAL  reduce using rule 31 (io_ops)
    NEG      reduce using rule 31 (io_ops)
    IF       reduce using rule 31 (io_ops)
    FOR      reduce using rule 31 (io_ops)
    READ     reduce using rule 31 (io_ops)
    WRITE    reduce using rule 31 (io_ops)
    WRITELN  reduce using rule 31 (io_ops)
    RETURN   reduce using rule 31 (io_ops)
    ISTYPE   reduce using rule 31 (io_ops)
    ADDSET   reduce using rule 31 (io_ops)
    REMOVE   reduce using rule 31 (io_ops)
    EXISTS   reduce using rule 31 (io_ops)
    FORALL   reduce using rule 31 (io_ops)
    ENDFUNC  reduce using rule 31 (io_ops)
    PARENL   reduce using rule 31 (io_ops)


State 132

   32 io_ops: WRITE PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 142


State 133

   33 io_ops: WRITELN PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 143


State 134

   55 operation: ISTYPE PARENL expression PARENR •

    SEMIC  reduce using rule 55 (operation)


State 135

   50 set_op: ADDSET PARENL in_set PARENR •

    SEMIC  reduce using rule 50 (set_op)


State 136

   51 set_op: REMOVE PARENL in_set PARENR •

    SEMIC  reduce using rule 51 (set_op)


State 137

   52 set_op: EXISTS PARENL in_set PARENR •

    SEMIC  reduce using rule 52 (set_op)


State 138

   25 basic_ops: FORALL PARENL in_set PARENR • set_op SEMIC
   26          | FORALL PARENL in_set PARENR • STFUNC statement_list ENDFUNC

    ADDSET  shift, and go to state 45
    REMOVE  shift, and go to state 46
    EXISTS  shift, and go to state 47
    STFUNC  shift, and go to state 144

    set_op  go to state 145


State 139

   67 args_list: args_list COMMA term •

    COMMA   reduce using rule 67 (args_list)
    PARENR  reduce using rule 67 (args_list)


State 140

   27 if_ops: IF PARENL operation PARENR STFUNC • statement_list ENDFUNC
   28       | IF PARENL operation PARENR STFUNC • statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC

    error  shift, and go to state 27

    ID       reduce using rule 15 (statement_list)
    TYPE     reduce using rule 15 (statement_list)
    STRING   reduce using rule 15 (statement_list)
    CHAR     reduce using rule 15 (statement_list)
    EMPTY    reduce using rule 15 (statement_list)
    INTEGER  reduce using rule 15 (statement_list)
    DECIMAL  reduce using rule 15 (statement_list)
    NEG      reduce using rule 15 (statement_list)
    IF       reduce using rule 15 (statement_list)
    FOR      reduce using rule 15 (statement_list)
    READ     reduce using rule 15 (statement_list)
    WRITE    reduce using rule 15 (statement_list)
    WRITELN  reduce using rule 15 (statement_list)
    RETURN   reduce using rule 15 (statement_list)
    ISTYPE   reduce using rule 15 (statement_list)
    ADDSET   reduce using rule 15 (statement_list)
    REMOVE   reduce using rule 15 (statement_list)
    EXISTS   reduce using rule 15 (statement_list)
    FORALL   reduce using rule 15 (statement_list)
    ENDFUNC  reduce using rule 15 (statement_list)
    PARENL   reduce using rule 15 (statement_list)

    statement_list  go to state 146


State 141

   24 basic_ops: FOR PARENL operation PARENR STFUNC • statement_list ENDFUNC

    error  shift, and go to state 27

    ID       reduce using rule 15 (statement_list)
    TYPE     reduce using rule 15 (statement_list)
    STRING   reduce using rule 15 (statement_list)
    CHAR     reduce using rule 15 (statement_list)
    EMPTY    reduce using rule 15 (statement_list)
    INTEGER  reduce using rule 15 (statement_list)
    DECIMAL  reduce using rule 15 (statement_list)
    NEG      reduce using rule 15 (statement_list)
    IF       reduce using rule 15 (statement_list)
    FOR      reduce using rule 15 (statement_list)
    READ     reduce using rule 15 (statement_list)
    WRITE    reduce using rule 15 (statement_list)
    WRITELN  reduce using rule 15 (statement_list)
    RETURN   reduce using rule 15 (statement_list)
    ISTYPE   reduce using rule 15 (statement_list)
    ADDSET   reduce using rule 15 (statement_list)
    REMOVE   reduce using rule 15 (statement_list)
    EXISTS   reduce using rule 15 (statement_list)
    FORALL   reduce using rule 15 (statement_list)
    ENDFUNC  reduce using rule 15 (statement_list)
    PARENL   reduce using rule 15 (statement_list)

    statement_list  go to state 147


State 142

   32 io_ops: WRITE PARENL expression PARENR SEMIC •

    ID       reduce using rule 32 (io_ops)
    TYPE     reduce using rule 32 (io_ops)
    STRING   reduce using rule 32 (io_ops)
    CHAR     reduce using rule 32 (io_ops)
    EMPTY    reduce using rule 32 (io_ops)
    INTEGER  reduce using rule 32 (io_ops)
    DECIMAL  reduce using rule 32 (io_ops)
    NEG      reduce using rule 32 (io_ops)
    IF       reduce using rule 32 (io_ops)
    FOR      reduce using rule 32 (io_ops)
    READ     reduce using rule 32 (io_ops)
    WRITE    reduce using rule 32 (io_ops)
    WRITELN  reduce using rule 32 (io_ops)
    RETURN   reduce using rule 32 (io_ops)
    ISTYPE   reduce using rule 32 (io_ops)
    ADDSET   reduce using rule 32 (io_ops)
    REMOVE   reduce using rule 32 (io_ops)
    EXISTS   reduce using rule 32 (io_ops)
    FORALL   reduce using rule 32 (io_ops)
    ENDFUNC  reduce using rule 32 (io_ops)
    PARENL   reduce using rule 32 (io_ops)


State 143

   33 io_ops: WRITELN PARENL expression PARENR SEMIC •

    ID       reduce using rule 33 (io_ops)
    TYPE     reduce using rule 33 (io_ops)
    STRING   reduce using rule 33 (io_ops)
    CHAR     reduce using rule 33 (io_ops)
    EMPTY    reduce using rule 33 (io_ops)
    INTEGER  reduce using rule 33 (io_ops)
    DECIMAL  reduce using rule 33 (io_ops)
    NEG      reduce using rule 33 (io_ops)
    IF       reduce using rule 33 (io_ops)
    FOR      reduce using rule 33 (io_ops)
    READ     reduce using rule 33 (io_ops)
    WRITE    reduce using rule 33 (io_ops)
    WRITELN  reduce using rule 33 (io_ops)
    RETURN   reduce using rule 33 (io_ops)
    ISTYPE   reduce using rule 33 (io_ops)
    ADDSET   reduce using rule 33 (io_ops)
    REMOVE   reduce using rule 33 (io_ops)
    EXISTS   reduce using rule 33 (io_ops)
    FORALL   reduce using rule 33 (io_ops)
    ENDFUNC  reduce using rule 33 (io_ops)
    PARENL   reduce using rule 33 (io_ops)


State 144

   26 basic_ops: FORALL PARENL in_set PARENR STFUNC • statement_list ENDFUNC

    error  shift, and go to state 27

    ID       reduce using rule 15 (statement_list)
    TYPE     reduce using rule 15 (statement_list)
    STRING   reduce using rule 15 (statement_list)
    CHAR     reduce using rule 15 (statement_list)
    EMPTY    reduce using rule 15 (statement_list)
    INTEGER  reduce using rule 15 (statement_list)
    DECIMAL  reduce using rule 15 (statement_list)
    NEG      reduce using rule 15 (statement_list)
    IF       reduce using rule 15 (statement_list)
    FOR      reduce using rule 15 (statement_list)
    READ     reduce using rule 15 (statement_list)
    WRITE    reduce using rule 15 (statement_list)
    WRITELN  reduce using rule 15 (statement_list)
    RETURN   reduce using rule 15 (statement_list)
    ISTYPE   reduce using rule 15 (statement_list)
    ADDSET   reduce using rule 15 (statement_list)
    REMOVE   reduce using rule 15 (statement_list)
    EXISTS   reduce using rule 15 (statement_list)
    FORALL   reduce using rule 15 (statement_list)
    ENDFUNC  reduce using rule 15 (statement_list)
    PARENL   reduce using rule 15 (statement_list)

    statement_list  go to state 148


State 145

   25 basic_ops: FORALL PARENL in_set PARENR set_op • SEMIC

    SEMIC  shift, and go to state 149


State 146

   14 statement_list: statement_list • statement
   27 if_ops: IF PARENL operation PARENR STFUNC statement_list • ENDFUNC
   28       | IF PARENL operation PARENR STFUNC statement_list • ENDFUNC ELSE STFUNC statement_list ENDFUNC

    ID       shift, and go to state 30
    TYPE     shift, and go to state 31
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    IF       shift, and go to state 38
    FOR      shift, and go to state 39
    READ     shift, and go to state 40
    WRITE    shift, and go to state 41
    WRITELN  shift, and go to state 42
    RETURN   shift, and go to state 43
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    FORALL   shift, and go to state 48
    ENDFUNC  shift, and go to state 150
    PARENL   shift, and go to state 50

    statement        go to state 51
    expression_stmt  go to state 52
    basic_ops        go to state 53
    if_ops           go to state 54
    ret_st           go to state 55
    var_dec          go to state 56
    io_ops           go to state 57
    expression       go to state 58
    term             go to state 59
    math_op          go to state 60
    set_op           go to state 61
    operation        go to state 62
    func_call        go to state 63
    in_set           go to state 64
    assign_value     go to state 65


State 147

   14 statement_list: statement_list • statement
   24 basic_ops: FOR PARENL operation PARENR STFUNC statement_list • ENDFUNC

    ID       shift, and go to state 30
    TYPE     shift, and go to state 31
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    IF       shift, and go to state 38
    FOR      shift, and go to state 39
    READ     shift, and go to state 40
    WRITE    shift, and go to state 41
    WRITELN  shift, and go to state 42
    RETURN   shift, and go to state 43
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    FORALL   shift, and go to state 48
    ENDFUNC  shift, and go to state 151
    PARENL   shift, and go to state 50

    statement        go to state 51
    expression_stmt  go to state 52
    basic_ops        go to state 53
    if_ops           go to state 54
    ret_st           go to state 55
    var_dec          go to state 56
    io_ops           go to state 57
    expression       go to state 58
    term             go to state 59
    math_op          go to state 60
    set_op           go to state 61
    operation        go to state 62
    func_call        go to state 63
    in_set           go to state 64
    assign_value     go to state 65


State 148

   14 statement_list: statement_list • statement
   26 basic_ops: FORALL PARENL in_set PARENR STFUNC statement_list • ENDFUNC

    ID       shift, and go to state 30
    TYPE     shift, and go to state 31
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    IF       shift, and go to state 38
    FOR      shift, and go to state 39
    READ     shift, and go to state 40
    WRITE    shift, and go to state 41
    WRITELN  shift, and go to state 42
    RETURN   shift, and go to state 43
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    FORALL   shift, and go to state 48
    ENDFUNC  shift, and go to state 152
    PARENL   shift, and go to state 50

    statement        go to state 51
    expression_stmt  go to state 52
    basic_ops        go to state 53
    if_ops           go to state 54
    ret_st           go to state 55
    var_dec          go to state 56
    io_ops           go to state 57
    expression       go to state 58
    term             go to state 59
    math_op          go to state 60
    set_op           go to state 61
    operation        go to state 62
    func_call        go to state 63
    in_set           go to state 64
    assign_value     go to state 65


State 149

   25 basic_ops: FORALL PARENL in_set PARENR set_op SEMIC •

    ID       reduce using rule 25 (basic_ops)
    TYPE     reduce using rule 25 (basic_ops)
    STRING   reduce using rule 25 (basic_ops)
    CHAR     reduce using rule 25 (basic_ops)
    EMPTY    reduce using rule 25 (basic_ops)
    INTEGER  reduce using rule 25 (basic_ops)
    DECIMAL  reduce using rule 25 (basic_ops)
    NEG      reduce using rule 25 (basic_ops)
    IF       reduce using rule 25 (basic_ops)
    FOR      reduce using rule 25 (basic_ops)
    READ     reduce using rule 25 (basic_ops)
    WRITE    reduce using rule 25 (basic_ops)
    WRITELN  reduce using rule 25 (basic_ops)
    RETURN   reduce using rule 25 (basic_ops)
    ISTYPE   reduce using rule 25 (basic_ops)
    ADDSET   reduce using rule 25 (basic_ops)
    REMOVE   reduce using rule 25 (basic_ops)
    EXISTS   reduce using rule 25 (basic_ops)
    FORALL   reduce using rule 25 (basic_ops)
    ENDFUNC  reduce using rule 25 (basic_ops)
    PARENL   reduce using rule 25 (basic_ops)


State 150

   27 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC •
   28       | IF PARENL operation PARENR STFUNC statement_list ENDFUNC • ELSE STFUNC statement_list ENDFUNC

    ELSE  shift, and go to state 153

    ID       reduce using rule 27 (if_ops)
    TYPE     reduce using rule 27 (if_ops)
    STRING   reduce using rule 27 (if_ops)
    CHAR     reduce using rule 27 (if_ops)
    EMPTY    reduce using rule 27 (if_ops)
    INTEGER  reduce using rule 27 (if_ops)
    DECIMAL  reduce using rule 27 (if_ops)
    NEG      reduce using rule 27 (if_ops)
    IF       reduce using rule 27 (if_ops)
    FOR      reduce using rule 27 (if_ops)
    READ     reduce using rule 27 (if_ops)
    WRITE    reduce using rule 27 (if_ops)
    WRITELN  reduce using rule 27 (if_ops)
    RETURN   reduce using rule 27 (if_ops)
    ISTYPE   reduce using rule 27 (if_ops)
    ADDSET   reduce using rule 27 (if_ops)
    REMOVE   reduce using rule 27 (if_ops)
    EXISTS   reduce using rule 27 (if_ops)
    FORALL   reduce using rule 27 (if_ops)
    ENDFUNC  reduce using rule 27 (if_ops)
    PARENL   reduce using rule 27 (if_ops)


State 151

   24 basic_ops: FOR PARENL operation PARENR STFUNC statement_list ENDFUNC •

    ID       reduce using rule 24 (basic_ops)
    TYPE     reduce using rule 24 (basic_ops)
    STRING   reduce using rule 24 (basic_ops)
    CHAR     reduce using rule 24 (basic_ops)
    EMPTY    reduce using rule 24 (basic_ops)
    INTEGER  reduce using rule 24 (basic_ops)
    DECIMAL  reduce using rule 24 (basic_ops)
    NEG      reduce using rule 24 (basic_ops)
    IF       reduce using rule 24 (basic_ops)
    FOR      reduce using rule 24 (basic_ops)
    READ     reduce using rule 24 (basic_ops)
    WRITE    reduce using rule 24 (basic_ops)
    WRITELN  reduce using rule 24 (basic_ops)
    RETURN   reduce using rule 24 (basic_ops)
    ISTYPE   reduce using rule 24 (basic_ops)
    ADDSET   reduce using rule 24 (basic_ops)
    REMOVE   reduce using rule 24 (basic_ops)
    EXISTS   reduce using rule 24 (basic_ops)
    FORALL   reduce using rule 24 (basic_ops)
    ENDFUNC  reduce using rule 24 (basic_ops)
    PARENL   reduce using rule 24 (basic_ops)


State 152

   26 basic_ops: FORALL PARENL in_set PARENR STFUNC statement_list ENDFUNC •

    ID       reduce using rule 26 (basic_ops)
    TYPE     reduce using rule 26 (basic_ops)
    STRING   reduce using rule 26 (basic_ops)
    CHAR     reduce using rule 26 (basic_ops)
    EMPTY    reduce using rule 26 (basic_ops)
    INTEGER  reduce using rule 26 (basic_ops)
    DECIMAL  reduce using rule 26 (basic_ops)
    NEG      reduce using rule 26 (basic_ops)
    IF       reduce using rule 26 (basic_ops)
    FOR      reduce using rule 26 (basic_ops)
    READ     reduce using rule 26 (basic_ops)
    WRITE    reduce using rule 26 (basic_ops)
    WRITELN  reduce using rule 26 (basic_ops)
    RETURN   reduce using rule 26 (basic_ops)
    ISTYPE   reduce using rule 26 (basic_ops)
    ADDSET   reduce using rule 26 (basic_ops)
    REMOVE   reduce using rule 26 (basic_ops)
    EXISTS   reduce using rule 26 (basic_ops)
    FORALL   reduce using rule 26 (basic_ops)
    ENDFUNC  reduce using rule 26 (basic_ops)
    PARENL   reduce using rule 26 (basic_ops)


State 153

   28 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 154


State 154

   28 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC • statement_list ENDFUNC

    error  shift, and go to state 27

    ID       reduce using rule 15 (statement_list)
    TYPE     reduce using rule 15 (statement_list)
    STRING   reduce using rule 15 (statement_list)
    CHAR     reduce using rule 15 (statement_list)
    EMPTY    reduce using rule 15 (statement_list)
    INTEGER  reduce using rule 15 (statement_list)
    DECIMAL  reduce using rule 15 (statement_list)
    NEG      reduce using rule 15 (statement_list)
    IF       reduce using rule 15 (statement_list)
    FOR      reduce using rule 15 (statement_list)
    READ     reduce using rule 15 (statement_list)
    WRITE    reduce using rule 15 (statement_list)
    WRITELN  reduce using rule 15 (statement_list)
    RETURN   reduce using rule 15 (statement_list)
    ISTYPE   reduce using rule 15 (statement_list)
    ADDSET   reduce using rule 15 (statement_list)
    REMOVE   reduce using rule 15 (statement_list)
    EXISTS   reduce using rule 15 (statement_list)
    FORALL   reduce using rule 15 (statement_list)
    ENDFUNC  reduce using rule 15 (statement_list)
    PARENL   reduce using rule 15 (statement_list)

    statement_list  go to state 155


State 155

   14 statement_list: statement_list • statement
   28 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list • ENDFUNC

    ID       shift, and go to state 30
    TYPE     shift, and go to state 31
    STRING   shift, and go to state 32
    CHAR     shift, and go to state 33
    EMPTY    shift, and go to state 34
    INTEGER  shift, and go to state 35
    DECIMAL  shift, and go to state 36
    NEG      shift, and go to state 37
    IF       shift, and go to state 38
    FOR      shift, and go to state 39
    READ     shift, and go to state 40
    WRITE    shift, and go to state 41
    WRITELN  shift, and go to state 42
    RETURN   shift, and go to state 43
    ISTYPE   shift, and go to state 44
    ADDSET   shift, and go to state 45
    REMOVE   shift, and go to state 46
    EXISTS   shift, and go to state 47
    FORALL   shift, and go to state 48
    ENDFUNC  shift, and go to state 156
    PARENL   shift, and go to state 50

    statement        go to state 51
    expression_stmt  go to state 52
    basic_ops        go to state 53
    if_ops           go to state 54
    ret_st           go to state 55
    var_dec          go to state 56
    io_ops           go to state 57
    expression       go to state 58
    term             go to state 59
    math_op          go to state 60
    set_op           go to state 61
    operation        go to state 62
    func_call        go to state 63
    in_set           go to state 64
    assign_value     go to state 65


State 156

   28 if_ops: IF PARENL operation PARENR STFUNC statement_list ENDFUNC ELSE STFUNC statement_list ENDFUNC •

    ID       reduce using rule 28 (if_ops)
    TYPE     reduce using rule 28 (if_ops)
    STRING   reduce using rule 28 (if_ops)
    CHAR     reduce using rule 28 (if_ops)
    EMPTY    reduce using rule 28 (if_ops)
    INTEGER  reduce using rule 28 (if_ops)
    DECIMAL  reduce using rule 28 (if_ops)
    NEG      reduce using rule 28 (if_ops)
    IF       reduce using rule 28 (if_ops)
    FOR      reduce using rule 28 (if_ops)
    READ     reduce using rule 28 (if_ops)
    WRITE    reduce using rule 28 (if_ops)
    WRITELN  reduce using rule 28 (if_ops)
    RETURN   reduce using rule 28 (if_ops)
    ISTYPE   reduce using rule 28 (if_ops)
    ADDSET   reduce using rule 28 (if_ops)
    REMOVE   reduce using rule 28 (if_ops)
    EXISTS   reduce using rule 28 (if_ops)
    FORALL   reduce using rule 28 (if_ops)
    ENDFUNC  reduce using rule 28 (if_ops)
    PARENL   reduce using rule 28 (if_ops)


State 157

   38 term: ID •
   65 func_call: ID • PARENL args_list PARENR
   70 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 192
    PARENL  shift, and go to state 193

    ADD        reduce using rule 38 (term)
    SUB        reduce using rule 38 (term)
    MULT       reduce using rule 38 (term)
    DIV        reduce using rule 38 (term)
    OR         reduce using rule 38 (term)
    AND        reduce using rule 38 (term)
    SMALLER    reduce using rule 38 (term)
    GREATER    reduce using rule 38 (term)
    SMALLEQ    reduce using rule 38 (term)
    GREATEQ    reduce using rule 38 (term)
    EQUALS     reduce using rule 38 (term)
    DIFFERENT  reduce using rule 38 (term)
    IN         reduce using rule 38 (term)
    PARENR     reduce using rule 38 (term)


State 158

   42 term: STRING •

    ADD        reduce using rule 42 (term)
    SUB        reduce using rule 42 (term)
    MULT       reduce using rule 42 (term)
    DIV        reduce using rule 42 (term)
    OR         reduce using rule 42 (term)
    AND        reduce using rule 42 (term)
    SMALLER    reduce using rule 42 (term)
    GREATER    reduce using rule 42 (term)
    SMALLEQ    reduce using rule 42 (term)
    GREATEQ    reduce using rule 42 (term)
    EQUALS     reduce using rule 42 (term)
    DIFFERENT  reduce using rule 42 (term)
    IN         reduce using rule 42 (term)
    PARENR     reduce using rule 42 (term)


State 159

   41 term: CHAR •

    ADD        reduce using rule 41 (term)
    SUB        reduce using rule 41 (term)
    MULT       reduce using rule 41 (term)
    DIV        reduce using rule 41 (term)
    OR         reduce using rule 41 (term)
    AND        reduce using rule 41 (term)
    SMALLER    reduce using rule 41 (term)
    GREATER    reduce using rule 41 (term)
    SMALLEQ    reduce using rule 41 (term)
    GREATEQ    reduce using rule 41 (term)
    EQUALS     reduce using rule 41 (term)
    DIFFERENT  reduce using rule 41 (term)
    IN         reduce using rule 41 (term)
    PARENR     reduce using rule 41 (term)


State 160

   43 term: EMPTY •

    ADD        reduce using rule 43 (term)
    SUB        reduce using rule 43 (term)
    MULT       reduce using rule 43 (term)
    DIV        reduce using rule 43 (term)
    OR         reduce using rule 43 (term)
    AND        reduce using rule 43 (term)
    SMALLER    reduce using rule 43 (term)
    GREATER    reduce using rule 43 (term)
    SMALLEQ    reduce using rule 43 (term)
    GREATEQ    reduce using rule 43 (term)
    EQUALS     reduce using rule 43 (term)
    DIFFERENT  reduce using rule 43 (term)
    IN         reduce using rule 43 (term)
    PARENR     reduce using rule 43 (term)


State 161

   39 term: INTEGER •

    ADD        reduce using rule 39 (term)
    SUB        reduce using rule 39 (term)
    MULT       reduce using rule 39 (term)
    DIV        reduce using rule 39 (term)
    OR         reduce using rule 39 (term)
    AND        reduce using rule 39 (term)
    SMALLER    reduce using rule 39 (term)
    GREATER    reduce using rule 39 (term)
    SMALLEQ    reduce using rule 39 (term)
    GREATEQ    reduce using rule 39 (term)
    EQUALS     reduce using rule 39 (term)
    DIFFERENT  reduce using rule 39 (term)
    IN         reduce using rule 39 (term)
    PARENR     reduce using rule 39 (term)


State 162

   40 term: DECIMAL •

    ADD        reduce using rule 40 (term)
    SUB        reduce using rule 40 (term)
    MULT       reduce using rule 40 (term)
    DIV        reduce using rule 40 (term)
    OR         reduce using rule 40 (term)
    AND        reduce using rule 40 (term)
    SMALLER    reduce using rule 40 (term)
    GREATER    reduce using rule 40 (term)
    SMALLEQ    reduce using rule 40 (term)
    GREATEQ    reduce using rule 40 (term)
    EQUALS     reduce using rule 40 (term)
    DIFFERENT  reduce using rule 40 (term)
    IN         reduce using rule 40 (term)
    PARENR     reduce using rule 40 (term)


State 163

   64 operation: NEG • expression

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 194
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 164

   55 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 195


State 165

   50 set_op: ADDSET • PARENL in_set PARENR

    PARENL  shift, and go to state 196


State 166

   51 set_op: REMOVE • PARENL in_set PARENR

    PARENL  shift, and go to state 197


State 167

   52 set_op: EXISTS • PARENL in_set PARENR

    PARENL  shift, and go to state 198


State 168

   44 term: PARENL • expression PARENR

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 199
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 169

   45 math_op: term • DIV expression
   46        | term • MULT expression
   47        | term • ADD expression
   48        | term • SUB expression
   49        | term •
   56 operation: term • SMALLER expression
   57          | term • GREATER expression
   58          | term • SMALLEQ expression
   59          | term • GREATEQ expression
   60          | term • EQUALS expression
   61          | term • DIFFERENT expression
   62          | term • OR expression
   63          | term • AND expression
   66 in_set: term • IN expression

    ADD        shift, and go to state 200
    SUB        shift, and go to state 201
    MULT       shift, and go to state 202
    DIV        shift, and go to state 203
    OR         shift, and go to state 204
    AND        shift, and go to state 205
    SMALLER    shift, and go to state 206
    GREATER    shift, and go to state 207
    SMALLEQ    shift, and go to state 208
    GREATEQ    shift, and go to state 209
    EQUALS     shift, and go to state 210
    DIFFERENT  shift, and go to state 211
    IN         shift, and go to state 191

    PARENR  reduce using rule 49 (math_op)


State 170

   53 operation: math_op •

    PARENR  reduce using rule 53 (operation)


State 171

   34 expression: set_op •

    PARENR  reduce using rule 34 (expression)


State 172

   35 expression: operation •

    PARENR  reduce using rule 35 (expression)


State 173

   36 expression: func_call •

    PARENR  reduce using rule 36 (expression)


State 174

   54 operation: in_set •

    PARENR  reduce using rule 54 (operation)


State 175

   37 expression: assign_value •

    PARENR  reduce using rule 37 (expression)


State 176

   42 term: STRING •

    COMMA   reduce using rule 42 (term)
    PARENR  reduce using rule 42 (term)


State 177

   41 term: CHAR •

    COMMA   reduce using rule 41 (term)
    PARENR  reduce using rule 41 (term)


State 178

   43 term: EMPTY •

    COMMA   reduce using rule 43 (term)
    PARENR  reduce using rule 43 (term)


State 179

   39 term: INTEGER •

    COMMA   reduce using rule 39 (term)
    PARENR  reduce using rule 39 (term)


State 180

   40 term: DECIMAL •

    COMMA   reduce using rule 40 (term)
    PARENR  reduce using rule 40 (term)


State 181

   44 term: PARENL • expression PARENR

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 212
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 182

   30 var_dec: TYPE ID SEMIC •

    ID       reduce using rule 30 (var_dec)
    TYPE     reduce using rule 30 (var_dec)
    STRING   reduce using rule 30 (var_dec)
    CHAR     reduce using rule 30 (var_dec)
    EMPTY    reduce using rule 30 (var_dec)
    INTEGER  reduce using rule 30 (var_dec)
    DECIMAL  reduce using rule 30 (var_dec)
    NEG      reduce using rule 30 (var_dec)
    IF       reduce using rule 30 (var_dec)
    FOR      reduce using rule 30 (var_dec)
    READ     reduce using rule 30 (var_dec)
    WRITE    reduce using rule 30 (var_dec)
    WRITELN  reduce using rule 30 (var_dec)
    RETURN   reduce using rule 30 (var_dec)
    ISTYPE   reduce using rule 30 (var_dec)
    ADDSET   reduce using rule 30 (var_dec)
    REMOVE   reduce using rule 30 (var_dec)
    EXISTS   reduce using rule 30 (var_dec)
    FORALL   reduce using rule 30 (var_dec)
    ENDFUNC  reduce using rule 30 (var_dec)
    PARENL   reduce using rule 30 (var_dec)


State 183

   38 term: ID •

    ADD        reduce using rule 38 (term)
    SUB        reduce using rule 38 (term)
    MULT       reduce using rule 38 (term)
    DIV        reduce using rule 38 (term)
    OR         reduce using rule 38 (term)
    AND        reduce using rule 38 (term)
    SMALLER    reduce using rule 38 (term)
    GREATER    reduce using rule 38 (term)
    SMALLEQ    reduce using rule 38 (term)
    GREATEQ    reduce using rule 38 (term)
    EQUALS     reduce using rule 38 (term)
    DIFFERENT  reduce using rule 38 (term)
    IN         reduce using rule 38 (term)
    PARENR     reduce using rule 38 (term)


State 184

   38 term: ID •

    IN  reduce using rule 38 (term)


State 185

   42 term: STRING •

    IN  reduce using rule 42 (term)


State 186

   41 term: CHAR •

    IN  reduce using rule 41 (term)


State 187

   43 term: EMPTY •

    IN  reduce using rule 43 (term)


State 188

   39 term: INTEGER •

    IN  reduce using rule 39 (term)


State 189

   40 term: DECIMAL •

    IN  reduce using rule 40 (term)


State 190

   44 term: PARENL • expression PARENR

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 213
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 191

   66 in_set: term IN • expression

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 214
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 192

   70 assign_value: ID ASSIGN • expression

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 215
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 193

   65 func_call: ID PARENL • args_list PARENR

    ID       shift, and go to state 98
    STRING   shift, and go to state 176
    CHAR     shift, and go to state 177
    EMPTY    shift, and go to state 178
    INTEGER  shift, and go to state 179
    DECIMAL  shift, and go to state 180
    PARENL   shift, and go to state 181

    COMMA   reduce using rule 69 (args_list)
    PARENR  reduce using rule 69 (args_list)

    term       go to state 99
    args_list  go to state 216


State 194

   64 operation: NEG expression •

    PARENR  reduce using rule 64 (operation)


State 195

   55 operation: ISTYPE PARENL • expression PARENR

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 217
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 196

   50 set_op: ADDSET PARENL • in_set PARENR

    ID       shift, and go to state 184
    STRING   shift, and go to state 185
    CHAR     shift, and go to state 186
    EMPTY    shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    term    go to state 108
    in_set  go to state 218


State 197

   51 set_op: REMOVE PARENL • in_set PARENR

    ID       shift, and go to state 184
    STRING   shift, and go to state 185
    CHAR     shift, and go to state 186
    EMPTY    shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    term    go to state 108
    in_set  go to state 219


State 198

   52 set_op: EXISTS PARENL • in_set PARENR

    ID       shift, and go to state 184
    STRING   shift, and go to state 185
    CHAR     shift, and go to state 186
    EMPTY    shift, and go to state 187
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    term    go to state 108
    in_set  go to state 220


State 199

   44 term: PARENL expression • PARENR

    PARENR  shift, and go to state 221


State 200

   47 math_op: term ADD • expression

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 222
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 201

   48 math_op: term SUB • expression

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 223
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 202

   46 math_op: term MULT • expression

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 224
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 203

   45 math_op: term DIV • expression

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 225
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 204

   62 operation: term OR • expression

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 226
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 205

   63 operation: term AND • expression

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 227
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 206

   56 operation: term SMALLER • expression

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 228
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 207

   57 operation: term GREATER • expression

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 229
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 208

   58 operation: term SMALLEQ • expression

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 230
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 209

   59 operation: term GREATEQ • expression

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 231
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 210

   60 operation: term EQUALS • expression

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 232
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 211

   61 operation: term DIFFERENT • expression

    ID       shift, and go to state 157
    STRING   shift, and go to state 158
    CHAR     shift, and go to state 159
    EMPTY    shift, and go to state 160
    INTEGER  shift, and go to state 161
    DECIMAL  shift, and go to state 162
    NEG      shift, and go to state 163
    ISTYPE   shift, and go to state 164
    ADDSET   shift, and go to state 165
    REMOVE   shift, and go to state 166
    EXISTS   shift, and go to state 167
    PARENL   shift, and go to state 168

    expression    go to state 233
    term          go to state 169
    math_op       go to state 170
    set_op        go to state 171
    operation     go to state 172
    func_call     go to state 173
    in_set        go to state 174
    assign_value  go to state 175


State 212

   44 term: PARENL expression • PARENR

    PARENR  shift, and go to state 234


State 213

   44 term: PARENL expression • PARENR

    PARENR  shift, and go to state 235


State 214

   66 in_set: term IN expression •

    PARENR  reduce using rule 66 (in_set)


State 215

   70 assign_value: ID ASSIGN expression •

    PARENR  reduce using rule 70 (assign_value)


State 216

   65 func_call: ID PARENL args_list • PARENR
   67 args_list: args_list • COMMA term

    COMMA   shift, and go to state 127
    PARENR  shift, and go to state 236


State 217

   55 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 237


State 218

   50 set_op: ADDSET PARENL in_set • PARENR

    PARENR  shift, and go to state 238


State 219

   51 set_op: REMOVE PARENL in_set • PARENR

    PARENR  shift, and go to state 239


State 220

   52 set_op: EXISTS PARENL in_set • PARENR

    PARENR  shift, and go to state 240


State 221

   44 term: PARENL expression PARENR •

    ADD        reduce using rule 44 (term)
    SUB        reduce using rule 44 (term)
    MULT       reduce using rule 44 (term)
    DIV        reduce using rule 44 (term)
    OR         reduce using rule 44 (term)
    AND        reduce using rule 44 (term)
    SMALLER    reduce using rule 44 (term)
    GREATER    reduce using rule 44 (term)
    SMALLEQ    reduce using rule 44 (term)
    GREATEQ    reduce using rule 44 (term)
    EQUALS     reduce using rule 44 (term)
    DIFFERENT  reduce using rule 44 (term)
    IN         reduce using rule 44 (term)
    PARENR     reduce using rule 44 (term)


State 222

   47 math_op: term ADD expression •

    PARENR  reduce using rule 47 (math_op)


State 223

   48 math_op: term SUB expression •

    PARENR  reduce using rule 48 (math_op)


State 224

   46 math_op: term MULT expression •

    PARENR  reduce using rule 46 (math_op)


State 225

   45 math_op: term DIV expression •

    PARENR  reduce using rule 45 (math_op)


State 226

   62 operation: term OR expression •

    PARENR  reduce using rule 62 (operation)


State 227

   63 operation: term AND expression •

    PARENR  reduce using rule 63 (operation)


State 228

   56 operation: term SMALLER expression •

    PARENR  reduce using rule 56 (operation)


State 229

   57 operation: term GREATER expression •

    PARENR  reduce using rule 57 (operation)


State 230

   58 operation: term SMALLEQ expression •

    PARENR  reduce using rule 58 (operation)


State 231

   59 operation: term GREATEQ expression •

    PARENR  reduce using rule 59 (operation)


State 232

   60 operation: term EQUALS expression •

    PARENR  reduce using rule 60 (operation)


State 233

   61 operation: term DIFFERENT expression •

    PARENR  reduce using rule 61 (operation)


State 234

   44 term: PARENL expression PARENR •

    COMMA   reduce using rule 44 (term)
    PARENR  reduce using rule 44 (term)


State 235

   44 term: PARENL expression PARENR •

    IN  reduce using rule 44 (term)


State 236

   65 func_call: ID PARENL args_list PARENR •

    PARENR  reduce using rule 65 (func_call)


State 237

   55 operation: ISTYPE PARENL expression PARENR •

    PARENR  reduce using rule 55 (operation)


State 238

   50 set_op: ADDSET PARENL in_set PARENR •

    PARENR  reduce using rule 50 (set_op)


State 239

   51 set_op: REMOVE PARENL in_set PARENR •

    PARENR  reduce using rule 51 (set_op)


State 240

   52 set_op: EXISTS PARENL in_set PARENR •

    PARENR  reduce using rule 52 (set_op)
