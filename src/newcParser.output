Grammar

    0 $accept: program $end

    1 program: declarations_list

    2 declarations_list: declarations_list declaration
    3                  | declaration
    4                  | error

    5 declaration: var_dec
    6            | func_dec

    7 $@1: %empty

    8 $@2: %empty

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC

   10 $@3: %empty

   11 $@4: %empty

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC

   13 params_list: params_list COMMA parameter
   14            | parameter
   15            | %empty
   16            | error

   17 parameter: TYPE ID

   18 statement_list: statement_list statement
   19               | %empty
   20               | error

   21 statement: expression_statement
   22          | ret_st
   23          | var_dec
   24          | io_ops
   25          | basic_ops

   26 expression_statement: expression SEMIC

   27 basic_ops: if_ops
   28          | for_statement STFUNC statement_list ENDFUNC
   29          | for_statement statement
   30          | forall_statement statement
   31          | forall_statement STFUNC statement_list ENDFUNC

   32 for_statement: FOR PARENL for_body PARENR

   33 forall_statement: FORALL PARENL in_set PARENR

   34 for_body: expression_statement expression_statement expression
   35         | SEMIC expression_statement expression
   36         | many_operations

   37 if_ops: if_statement statement
   38       | if_statement statement else_statement
   39       | if_statement STFUNC statement_list ENDFUNC
   40       | if_statement STFUNC statement_list ENDFUNC else_statement

   41 if_statement: IF PARENL expression PARENR

   42 $@5: %empty

   43 else_statement: ELSE $@5 statement

   44 $@6: %empty

   45 else_statement: ELSE $@6 STFUNC statement_list ENDFUNC

   46 ret_st: RETURN expression SEMIC

   47 var_dec: TYPE ID SEMIC

   48 io_ops: READ PARENL ID PARENR SEMIC
   49       | WRITE PARENL expression PARENR SEMIC
   50       | WRITELN PARENL expression PARENR SEMIC

   51 expression: many_operations
   52           | func_call
   53           | assign_value

   54 term: math_term
   55     | str_term

   56 math_term: ID
   57          | INTEGER
   58          | DECIMAL
   59          | PARENL expression PARENR

   60 str_term: CHAR
   61         | STRING
   62         | EMPTY

   63 math_op: math_op ADD math_op_muldiv
   64        | math_op SUB math_op_muldiv
   65        | math_op_muldiv

   66 math_op_muldiv: math_op_muldiv DIV math_term
   67               | math_op_muldiv MULT math_term
   68               | math_term

   69 many_operations: ADDSET PARENL many_operations PARENR
   70                | REMOVE PARENL many_operations PARENR
   71                | EXISTS PARENL many_operations PARENR
   72                | operation

   73 operation: in_set
   74          | ISTYPE PARENL expression PARENR
   75          | or_operation

   76 or_operation: or_operation OR and_operation
   77             | and_operation

   78 and_operation: and_operation AND equality_operation
   79              | equality_operation

   80 equality_operation: equality_operation EQUALS relational_operation
   81                   | equality_operation DIFFERENT relational_operation
   82                   | relational_operation

   83 relational_operation: relational_operation SMALLER negation_operation
   84                     | relational_operation GREATER negation_operation
   85                     | relational_operation SMALLEQ negation_operation
   86                     | relational_operation GREATEQ negation_operation
   87                     | negation_operation

   88 negation_operation: NEG math_op
   89                   | math_op

   90 func_call: ID PARENL args_list PARENR
   91          | str_term

   92 in_set: term IN expression

   93 args_list: args_list COMMA expression
   94          | expression
   95          | %empty

   96 assign_value: ID ASSIGN expression


Terminals, with rules where they appear

    $end (0) 0
    error <tree_node> (256) 4 16 20
    ID <str> (258) 9 17 47 48 56 90 96
    TYPE <str> (259) 9 12 17 47
    STRING <str> (260) 61
    CHAR <str> (261) 60
    EMPTY <str> (262) 62
    MAIN <str> (263) 12
    INTEGER <integer> (264) 57
    DECIMAL <dec> (265) 58
    ADD <str> (266) 63
    SUB <str> (267) 64
    MULT <str> (268) 67
    DIV <str> (269) 66
    OR <str> (270) 76
    AND <str> (271) 78
    SMALLER <str> (272) 83
    GREATER <str> (273) 84
    SMALLEQ <str> (274) 85
    GREATEQ <str> (275) 86
    EQUALS <str> (276) 80
    DIFFERENT <str> (277) 81
    ASSIGN <str> (278) 96
    NEG <str> (279) 88
    IF <str> (280) 41
    ELSE <str> (281) 43 45
    FOR <str> (282) 32
    READ <str> (283) 48
    WRITE <str> (284) 49
    WRITELN <str> (285) 50
    RETURN <str> (286) 46
    IN <str> (287) 92
    ISTYPE <str> (288) 74
    ADDSET <str> (289) 69
    REMOVE <str> (290) 70
    EXISTS <str> (291) 71
    FORALL <str> (292) 33
    COMMA <str> (293) 13 93
    STFUNC <str> (294) 9 12 28 31 39 40 45
    ENDFUNC <str> (295) 9 12 28 31 39 40 45
    PARENL <str> (296) 9 12 32 33 41 48 49 50 59 69 70 71 74 90
    PARENR <str> (297) 9 12 32 33 41 48 49 50 59 69 70 71 74 90
    SEMIC <str> (298) 26 35 46 47 48 49 50
    OUTERTHEN (299)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program <tree_node> (46)
        on left: 1
        on right: 0
    declarations_list <tree_node> (47)
        on left: 2 3 4
        on right: 1 2
    declaration <tree_node> (48)
        on left: 5 6
        on right: 2 3
    func_dec <tree_node> (49)
        on left: 9 12
        on right: 6
    $@1 (50)
        on left: 7
        on right: 9
    $@2 (51)
        on left: 8
        on right: 9
    $@3 (52)
        on left: 10
        on right: 12
    $@4 (53)
        on left: 11
        on right: 12
    params_list <tree_node> (54)
        on left: 13 14 15 16
        on right: 9 12 13
    parameter <tree_node> (55)
        on left: 17
        on right: 13 14
    statement_list <tree_node> (56)
        on left: 18 19 20
        on right: 9 12 18 28 31 39 40 45
    statement <tree_node> (57)
        on left: 21 22 23 24 25
        on right: 18 29 30 37 38 43
    expression_statement <tree_node> (58)
        on left: 26
        on right: 21 34 35
    basic_ops <tree_node> (59)
        on left: 27 28 29 30 31
        on right: 25
    for_statement <tree_node> (60)
        on left: 32
        on right: 28 29
    forall_statement <tree_node> (61)
        on left: 33
        on right: 30 31
    for_body <tree_node> (62)
        on left: 34 35 36
        on right: 32
    if_ops <tree_node> (63)
        on left: 37 38 39 40
        on right: 27
    if_statement <tree_node> (64)
        on left: 41
        on right: 37 38 39 40
    else_statement <tree_node> (65)
        on left: 43 45
        on right: 38 40
    $@5 (66)
        on left: 42
        on right: 43
    $@6 (67)
        on left: 44
        on right: 45
    ret_st <tree_node> (68)
        on left: 46
        on right: 22
    var_dec <tree_node> (69)
        on left: 47
        on right: 5 23
    io_ops <tree_node> (70)
        on left: 48 49 50
        on right: 24
    expression <tree_node> (71)
        on left: 51 52 53
        on right: 26 34 35 41 46 49 50 59 74 92 93 94 96
    term <tree_node> (72)
        on left: 54 55
        on right: 92
    math_term <tree_node> (73)
        on left: 56 57 58 59
        on right: 54 66 67 68
    str_term <tree_node> (74)
        on left: 60 61 62
        on right: 55 91
    math_op <tree_node> (75)
        on left: 63 64 65
        on right: 63 64 88 89
    math_op_muldiv <tree_node> (76)
        on left: 66 67 68
        on right: 63 64 65 66 67
    many_operations <tree_node> (77)
        on left: 69 70 71 72
        on right: 36 51 69 70 71
    operation <tree_node> (78)
        on left: 73 74 75
        on right: 72
    or_operation <tree_node> (79)
        on left: 76 77
        on right: 75 76
    and_operation <tree_node> (80)
        on left: 78 79
        on right: 76 77 78
    equality_operation <tree_node> (81)
        on left: 80 81 82
        on right: 78 79 80 81
    relational_operation <tree_node> (82)
        on left: 83 84 85 86 87
        on right: 80 81 82 83 84 85 86
    negation_operation <tree_node> (83)
        on left: 88 89
        on right: 83 84 85 86 87
    func_call <tree_node> (84)
        on left: 90 91
        on right: 52
    in_set <tree_node> (85)
        on left: 92
        on right: 33 73
    args_list <tree_node> (86)
        on left: 93 94 95
        on right: 90 93
    assign_value <tree_node> (87)
        on left: 96
        on right: 53


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    program            go to state 3
    declarations_list  go to state 4
    declaration        go to state 5
    func_dec           go to state 6
    var_dec            go to state 7


State 1

    4 declarations_list: error •

    $end  reduce using rule 4 (declarations_list)
    TYPE  reduce using rule 4 (declarations_list)


State 2

    9 func_dec: TYPE • ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC
   12         | TYPE • MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC
   47 var_dec: TYPE • ID SEMIC

    ID    shift, and go to state 8
    MAIN  shift, and go to state 9


State 3

    0 $accept: program • $end

    $end  shift, and go to state 10


State 4

    1 program: declarations_list •
    2 declarations_list: declarations_list • declaration

    TYPE  shift, and go to state 2

    $end  reduce using rule 1 (program)

    declaration  go to state 11
    func_dec     go to state 6
    var_dec      go to state 7


State 5

    3 declarations_list: declaration •

    $end  reduce using rule 3 (declarations_list)
    TYPE  reduce using rule 3 (declarations_list)


State 6

    6 declaration: func_dec •

    $end  reduce using rule 6 (declaration)
    TYPE  reduce using rule 6 (declaration)


State 7

    5 declaration: var_dec •

    $end  reduce using rule 5 (declaration)
    TYPE  reduce using rule 5 (declaration)


State 8

    9 func_dec: TYPE ID • PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC
   47 var_dec: TYPE ID • SEMIC

    PARENL  shift, and go to state 12
    SEMIC   shift, and go to state 13


State 9

   12 func_dec: TYPE MAIN • PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC

    PARENL  shift, and go to state 14


State 10

    0 $accept: program $end •

    $default  accept


State 11

    2 declarations_list: declarations_list declaration •

    $end  reduce using rule 2 (declarations_list)
    TYPE  reduce using rule 2 (declarations_list)


State 12

    9 func_dec: TYPE ID PARENL • $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC

    error   reduce using rule 7 ($@1)
    TYPE    reduce using rule 7 ($@1)
    COMMA   reduce using rule 7 ($@1)
    PARENR  reduce using rule 7 ($@1)

    $@1  go to state 15


State 13

   47 var_dec: TYPE ID SEMIC •

    $end  reduce using rule 47 (var_dec)
    TYPE  reduce using rule 47 (var_dec)


State 14

   12 func_dec: TYPE MAIN PARENL • $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC

    error   reduce using rule 10 ($@3)
    TYPE    reduce using rule 10 ($@3)
    COMMA   reduce using rule 10 ($@3)
    PARENR  reduce using rule 10 ($@3)

    $@3  go to state 16


State 15

    9 func_dec: TYPE ID PARENL $@1 • params_list PARENR STFUNC $@2 statement_list ENDFUNC

    error  shift, and go to state 17
    TYPE   shift, and go to state 18

    COMMA   reduce using rule 15 (params_list)
    PARENR  reduce using rule 15 (params_list)

    params_list  go to state 19
    parameter    go to state 20


State 16

   12 func_dec: TYPE MAIN PARENL $@3 • params_list PARENR STFUNC $@4 statement_list ENDFUNC

    error  shift, and go to state 17
    TYPE   shift, and go to state 18

    COMMA   reduce using rule 15 (params_list)
    PARENR  reduce using rule 15 (params_list)

    params_list  go to state 21
    parameter    go to state 20


State 17

   16 params_list: error •

    COMMA   reduce using rule 16 (params_list)
    PARENR  reduce using rule 16 (params_list)


State 18

   17 parameter: TYPE • ID

    ID  shift, and go to state 22


State 19

    9 func_dec: TYPE ID PARENL $@1 params_list • PARENR STFUNC $@2 statement_list ENDFUNC
   13 params_list: params_list • COMMA parameter

    COMMA   shift, and go to state 23
    PARENR  shift, and go to state 24


State 20

   14 params_list: parameter •

    COMMA   reduce using rule 14 (params_list)
    PARENR  reduce using rule 14 (params_list)


State 21

   12 func_dec: TYPE MAIN PARENL $@3 params_list • PARENR STFUNC $@4 statement_list ENDFUNC
   13 params_list: params_list • COMMA parameter

    COMMA   shift, and go to state 23
    PARENR  shift, and go to state 25


State 22

   17 parameter: TYPE ID •

    COMMA   reduce using rule 17 (parameter)
    PARENR  reduce using rule 17 (parameter)


State 23

   13 params_list: params_list COMMA • parameter

    TYPE  shift, and go to state 18

    parameter  go to state 26


State 24

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR • STFUNC $@2 statement_list ENDFUNC

    STFUNC  shift, and go to state 27


State 25

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR • STFUNC $@4 statement_list ENDFUNC

    STFUNC  shift, and go to state 28


State 26

   13 params_list: params_list COMMA parameter •

    COMMA   reduce using rule 13 (params_list)
    PARENR  reduce using rule 13 (params_list)


State 27

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC • $@2 statement_list ENDFUNC

    error    reduce using rule 8 ($@2)
    ID       reduce using rule 8 ($@2)
    TYPE     reduce using rule 8 ($@2)
    STRING   reduce using rule 8 ($@2)
    CHAR     reduce using rule 8 ($@2)
    EMPTY    reduce using rule 8 ($@2)
    INTEGER  reduce using rule 8 ($@2)
    DECIMAL  reduce using rule 8 ($@2)
    NEG      reduce using rule 8 ($@2)
    IF       reduce using rule 8 ($@2)
    FOR      reduce using rule 8 ($@2)
    READ     reduce using rule 8 ($@2)
    WRITE    reduce using rule 8 ($@2)
    WRITELN  reduce using rule 8 ($@2)
    RETURN   reduce using rule 8 ($@2)
    ISTYPE   reduce using rule 8 ($@2)
    ADDSET   reduce using rule 8 ($@2)
    REMOVE   reduce using rule 8 ($@2)
    EXISTS   reduce using rule 8 ($@2)
    FORALL   reduce using rule 8 ($@2)
    ENDFUNC  reduce using rule 8 ($@2)
    PARENL   reduce using rule 8 ($@2)

    $@2  go to state 29


State 28

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC • $@4 statement_list ENDFUNC

    error    reduce using rule 11 ($@4)
    ID       reduce using rule 11 ($@4)
    TYPE     reduce using rule 11 ($@4)
    STRING   reduce using rule 11 ($@4)
    CHAR     reduce using rule 11 ($@4)
    EMPTY    reduce using rule 11 ($@4)
    INTEGER  reduce using rule 11 ($@4)
    DECIMAL  reduce using rule 11 ($@4)
    NEG      reduce using rule 11 ($@4)
    IF       reduce using rule 11 ($@4)
    FOR      reduce using rule 11 ($@4)
    READ     reduce using rule 11 ($@4)
    WRITE    reduce using rule 11 ($@4)
    WRITELN  reduce using rule 11 ($@4)
    RETURN   reduce using rule 11 ($@4)
    ISTYPE   reduce using rule 11 ($@4)
    ADDSET   reduce using rule 11 ($@4)
    REMOVE   reduce using rule 11 ($@4)
    EXISTS   reduce using rule 11 ($@4)
    FORALL   reduce using rule 11 ($@4)
    ENDFUNC  reduce using rule 11 ($@4)
    PARENL   reduce using rule 11 ($@4)

    $@4  go to state 30


State 29

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 • statement_list ENDFUNC

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 32


State 30

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 • statement_list ENDFUNC

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 33


State 31

   20 statement_list: error •

    ID       reduce using rule 20 (statement_list)
    TYPE     reduce using rule 20 (statement_list)
    STRING   reduce using rule 20 (statement_list)
    CHAR     reduce using rule 20 (statement_list)
    EMPTY    reduce using rule 20 (statement_list)
    INTEGER  reduce using rule 20 (statement_list)
    DECIMAL  reduce using rule 20 (statement_list)
    NEG      reduce using rule 20 (statement_list)
    IF       reduce using rule 20 (statement_list)
    FOR      reduce using rule 20 (statement_list)
    READ     reduce using rule 20 (statement_list)
    WRITE    reduce using rule 20 (statement_list)
    WRITELN  reduce using rule 20 (statement_list)
    RETURN   reduce using rule 20 (statement_list)
    ISTYPE   reduce using rule 20 (statement_list)
    ADDSET   reduce using rule 20 (statement_list)
    REMOVE   reduce using rule 20 (statement_list)
    EXISTS   reduce using rule 20 (statement_list)
    FORALL   reduce using rule 20 (statement_list)
    ENDFUNC  reduce using rule 20 (statement_list)
    PARENL   reduce using rule 20 (statement_list)


State 32

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list • ENDFUNC
   18 statement_list: statement_list • statement

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 53
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    for_statement         go to state 58
    forall_statement      go to state 59
    if_ops                go to state 60
    if_statement          go to state 61
    ret_st                go to state 62
    var_dec               go to state 63
    io_ops                go to state 64
    expression            go to state 65
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 33

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list • ENDFUNC
   18 statement_list: statement_list • statement

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 81
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    for_statement         go to state 58
    forall_statement      go to state 59
    if_ops                go to state 60
    if_statement          go to state 61
    ret_st                go to state 62
    var_dec               go to state 63
    io_ops                go to state 64
    expression            go to state 65
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 34

   56 math_term: ID •
   90 func_call: ID • PARENL args_list PARENR
   96 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 82
    PARENL  shift, and go to state 83

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    IN         reduce using rule 56 (math_term)
    SEMIC      reduce using rule 56 (math_term)


State 35

   47 var_dec: TYPE • ID SEMIC

    ID  shift, and go to state 84


State 36

   61 str_term: STRING •

    IN     reduce using rule 61 (str_term)
    SEMIC  reduce using rule 61 (str_term)


State 37

   60 str_term: CHAR •

    IN     reduce using rule 60 (str_term)
    SEMIC  reduce using rule 60 (str_term)


State 38

   62 str_term: EMPTY •

    IN     reduce using rule 62 (str_term)
    SEMIC  reduce using rule 62 (str_term)


State 39

   57 math_term: INTEGER •

    ADD        reduce using rule 57 (math_term)
    SUB        reduce using rule 57 (math_term)
    MULT       reduce using rule 57 (math_term)
    DIV        reduce using rule 57 (math_term)
    OR         reduce using rule 57 (math_term)
    AND        reduce using rule 57 (math_term)
    SMALLER    reduce using rule 57 (math_term)
    GREATER    reduce using rule 57 (math_term)
    SMALLEQ    reduce using rule 57 (math_term)
    GREATEQ    reduce using rule 57 (math_term)
    EQUALS     reduce using rule 57 (math_term)
    DIFFERENT  reduce using rule 57 (math_term)
    IN         reduce using rule 57 (math_term)
    SEMIC      reduce using rule 57 (math_term)


State 40

   58 math_term: DECIMAL •

    ADD        reduce using rule 58 (math_term)
    SUB        reduce using rule 58 (math_term)
    MULT       reduce using rule 58 (math_term)
    DIV        reduce using rule 58 (math_term)
    OR         reduce using rule 58 (math_term)
    AND        reduce using rule 58 (math_term)
    SMALLER    reduce using rule 58 (math_term)
    GREATER    reduce using rule 58 (math_term)
    SMALLEQ    reduce using rule 58 (math_term)
    GREATEQ    reduce using rule 58 (math_term)
    EQUALS     reduce using rule 58 (math_term)
    DIFFERENT  reduce using rule 58 (math_term)
    IN         reduce using rule 58 (math_term)
    SEMIC      reduce using rule 58 (math_term)


State 41

   88 negation_operation: NEG • math_op

    ID       shift, and go to state 85
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    math_term       go to state 86
    math_op         go to state 87
    math_op_muldiv  go to state 70


State 42

   41 if_statement: IF • PARENL expression PARENR

    PARENL  shift, and go to state 88


State 43

   32 for_statement: FOR • PARENL for_body PARENR

    PARENL  shift, and go to state 89


State 44

   48 io_ops: READ • PARENL ID PARENR SEMIC

    PARENL  shift, and go to state 90


State 45

   49 io_ops: WRITE • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 91


State 46

   50 io_ops: WRITELN • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 92


State 47

   46 ret_st: RETURN • expression SEMIC

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression            go to state 93
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 48

   74 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 94


State 49

   69 many_operations: ADDSET • PARENL many_operations PARENR

    PARENL  shift, and go to state 95


State 50

   70 many_operations: REMOVE • PARENL many_operations PARENR

    PARENL  shift, and go to state 96


State 51

   71 many_operations: EXISTS • PARENL many_operations PARENR

    PARENL  shift, and go to state 97


State 52

   33 forall_statement: FORALL • PARENL in_set PARENR

    PARENL  shift, and go to state 98


State 53

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC •

    $end  reduce using rule 9 (func_dec)
    TYPE  reduce using rule 9 (func_dec)


State 54

   59 math_term: PARENL • expression PARENR

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 99
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 55

   18 statement_list: statement_list statement •

    ID       reduce using rule 18 (statement_list)
    TYPE     reduce using rule 18 (statement_list)
    STRING   reduce using rule 18 (statement_list)
    CHAR     reduce using rule 18 (statement_list)
    EMPTY    reduce using rule 18 (statement_list)
    INTEGER  reduce using rule 18 (statement_list)
    DECIMAL  reduce using rule 18 (statement_list)
    NEG      reduce using rule 18 (statement_list)
    IF       reduce using rule 18 (statement_list)
    FOR      reduce using rule 18 (statement_list)
    READ     reduce using rule 18 (statement_list)
    WRITE    reduce using rule 18 (statement_list)
    WRITELN  reduce using rule 18 (statement_list)
    RETURN   reduce using rule 18 (statement_list)
    ISTYPE   reduce using rule 18 (statement_list)
    ADDSET   reduce using rule 18 (statement_list)
    REMOVE   reduce using rule 18 (statement_list)
    EXISTS   reduce using rule 18 (statement_list)
    FORALL   reduce using rule 18 (statement_list)
    ENDFUNC  reduce using rule 18 (statement_list)
    PARENL   reduce using rule 18 (statement_list)


State 56

   21 statement: expression_statement •

    ID       reduce using rule 21 (statement)
    TYPE     reduce using rule 21 (statement)
    STRING   reduce using rule 21 (statement)
    CHAR     reduce using rule 21 (statement)
    EMPTY    reduce using rule 21 (statement)
    INTEGER  reduce using rule 21 (statement)
    DECIMAL  reduce using rule 21 (statement)
    NEG      reduce using rule 21 (statement)
    IF       reduce using rule 21 (statement)
    FOR      reduce using rule 21 (statement)
    READ     reduce using rule 21 (statement)
    WRITE    reduce using rule 21 (statement)
    WRITELN  reduce using rule 21 (statement)
    RETURN   reduce using rule 21 (statement)
    ISTYPE   reduce using rule 21 (statement)
    ADDSET   reduce using rule 21 (statement)
    REMOVE   reduce using rule 21 (statement)
    EXISTS   reduce using rule 21 (statement)
    FORALL   reduce using rule 21 (statement)
    ENDFUNC  reduce using rule 21 (statement)
    PARENL   reduce using rule 21 (statement)


State 57

   25 statement: basic_ops •

    ID       reduce using rule 25 (statement)
    TYPE     reduce using rule 25 (statement)
    STRING   reduce using rule 25 (statement)
    CHAR     reduce using rule 25 (statement)
    EMPTY    reduce using rule 25 (statement)
    INTEGER  reduce using rule 25 (statement)
    DECIMAL  reduce using rule 25 (statement)
    NEG      reduce using rule 25 (statement)
    IF       reduce using rule 25 (statement)
    FOR      reduce using rule 25 (statement)
    READ     reduce using rule 25 (statement)
    WRITE    reduce using rule 25 (statement)
    WRITELN  reduce using rule 25 (statement)
    RETURN   reduce using rule 25 (statement)
    ISTYPE   reduce using rule 25 (statement)
    ADDSET   reduce using rule 25 (statement)
    REMOVE   reduce using rule 25 (statement)
    EXISTS   reduce using rule 25 (statement)
    FORALL   reduce using rule 25 (statement)
    ENDFUNC  reduce using rule 25 (statement)
    PARENL   reduce using rule 25 (statement)


State 58

   28 basic_ops: for_statement • STFUNC statement_list ENDFUNC
   29          | for_statement • statement

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    STFUNC   shift, and go to state 100
    PARENL   shift, and go to state 54

    statement             go to state 101
    expression_statement  go to state 56
    basic_ops             go to state 57
    for_statement         go to state 58
    forall_statement      go to state 59
    if_ops                go to state 60
    if_statement          go to state 61
    ret_st                go to state 62
    var_dec               go to state 63
    io_ops                go to state 64
    expression            go to state 65
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 59

   30 basic_ops: forall_statement • statement
   31          | forall_statement • STFUNC statement_list ENDFUNC

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    STFUNC   shift, and go to state 102
    PARENL   shift, and go to state 54

    statement             go to state 103
    expression_statement  go to state 56
    basic_ops             go to state 57
    for_statement         go to state 58
    forall_statement      go to state 59
    if_ops                go to state 60
    if_statement          go to state 61
    ret_st                go to state 62
    var_dec               go to state 63
    io_ops                go to state 64
    expression            go to state 65
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 60

   27 basic_ops: if_ops •

    ID       reduce using rule 27 (basic_ops)
    TYPE     reduce using rule 27 (basic_ops)
    STRING   reduce using rule 27 (basic_ops)
    CHAR     reduce using rule 27 (basic_ops)
    EMPTY    reduce using rule 27 (basic_ops)
    INTEGER  reduce using rule 27 (basic_ops)
    DECIMAL  reduce using rule 27 (basic_ops)
    NEG      reduce using rule 27 (basic_ops)
    IF       reduce using rule 27 (basic_ops)
    FOR      reduce using rule 27 (basic_ops)
    READ     reduce using rule 27 (basic_ops)
    WRITE    reduce using rule 27 (basic_ops)
    WRITELN  reduce using rule 27 (basic_ops)
    RETURN   reduce using rule 27 (basic_ops)
    ISTYPE   reduce using rule 27 (basic_ops)
    ADDSET   reduce using rule 27 (basic_ops)
    REMOVE   reduce using rule 27 (basic_ops)
    EXISTS   reduce using rule 27 (basic_ops)
    FORALL   reduce using rule 27 (basic_ops)
    ENDFUNC  reduce using rule 27 (basic_ops)
    PARENL   reduce using rule 27 (basic_ops)


State 61

   37 if_ops: if_statement • statement
   38       | if_statement • statement else_statement
   39       | if_statement • STFUNC statement_list ENDFUNC
   40       | if_statement • STFUNC statement_list ENDFUNC else_statement

    ID       shift, and go to state 34
    TYPE     shift, and go to state 218
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 219
    WRITE    shift, and go to state 220
    WRITELN  shift, and go to state 221
    RETURN   shift, and go to state 222
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    STFUNC   shift, and go to state 104
    PARENL   shift, and go to state 54

    statement             go to state 105
    expression_statement  go to state 223
    basic_ops             go to state 224
    for_statement         go to state 225
    forall_statement      go to state 226
    if_ops                go to state 227
    if_statement          go to state 228
    ret_st                go to state 229
    var_dec               go to state 230
    io_ops                go to state 231
    expression            go to state 232
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 62

   22 statement: ret_st •

    ID       reduce using rule 22 (statement)
    TYPE     reduce using rule 22 (statement)
    STRING   reduce using rule 22 (statement)
    CHAR     reduce using rule 22 (statement)
    EMPTY    reduce using rule 22 (statement)
    INTEGER  reduce using rule 22 (statement)
    DECIMAL  reduce using rule 22 (statement)
    NEG      reduce using rule 22 (statement)
    IF       reduce using rule 22 (statement)
    FOR      reduce using rule 22 (statement)
    READ     reduce using rule 22 (statement)
    WRITE    reduce using rule 22 (statement)
    WRITELN  reduce using rule 22 (statement)
    RETURN   reduce using rule 22 (statement)
    ISTYPE   reduce using rule 22 (statement)
    ADDSET   reduce using rule 22 (statement)
    REMOVE   reduce using rule 22 (statement)
    EXISTS   reduce using rule 22 (statement)
    FORALL   reduce using rule 22 (statement)
    ENDFUNC  reduce using rule 22 (statement)
    PARENL   reduce using rule 22 (statement)


State 63

   23 statement: var_dec •

    ID       reduce using rule 23 (statement)
    TYPE     reduce using rule 23 (statement)
    STRING   reduce using rule 23 (statement)
    CHAR     reduce using rule 23 (statement)
    EMPTY    reduce using rule 23 (statement)
    INTEGER  reduce using rule 23 (statement)
    DECIMAL  reduce using rule 23 (statement)
    NEG      reduce using rule 23 (statement)
    IF       reduce using rule 23 (statement)
    FOR      reduce using rule 23 (statement)
    READ     reduce using rule 23 (statement)
    WRITE    reduce using rule 23 (statement)
    WRITELN  reduce using rule 23 (statement)
    RETURN   reduce using rule 23 (statement)
    ISTYPE   reduce using rule 23 (statement)
    ADDSET   reduce using rule 23 (statement)
    REMOVE   reduce using rule 23 (statement)
    EXISTS   reduce using rule 23 (statement)
    FORALL   reduce using rule 23 (statement)
    ENDFUNC  reduce using rule 23 (statement)
    PARENL   reduce using rule 23 (statement)


State 64

   24 statement: io_ops •

    ID       reduce using rule 24 (statement)
    TYPE     reduce using rule 24 (statement)
    STRING   reduce using rule 24 (statement)
    CHAR     reduce using rule 24 (statement)
    EMPTY    reduce using rule 24 (statement)
    INTEGER  reduce using rule 24 (statement)
    DECIMAL  reduce using rule 24 (statement)
    NEG      reduce using rule 24 (statement)
    IF       reduce using rule 24 (statement)
    FOR      reduce using rule 24 (statement)
    READ     reduce using rule 24 (statement)
    WRITE    reduce using rule 24 (statement)
    WRITELN  reduce using rule 24 (statement)
    RETURN   reduce using rule 24 (statement)
    ISTYPE   reduce using rule 24 (statement)
    ADDSET   reduce using rule 24 (statement)
    REMOVE   reduce using rule 24 (statement)
    EXISTS   reduce using rule 24 (statement)
    FORALL   reduce using rule 24 (statement)
    ENDFUNC  reduce using rule 24 (statement)
    PARENL   reduce using rule 24 (statement)


State 65

   26 expression_statement: expression • SEMIC

    SEMIC  shift, and go to state 106


State 66

   92 in_set: term • IN expression

    IN  shift, and go to state 107


State 67

   54 term: math_term •
   68 math_op_muldiv: math_term •

    ADD        reduce using rule 68 (math_op_muldiv)
    SUB        reduce using rule 68 (math_op_muldiv)
    MULT       reduce using rule 68 (math_op_muldiv)
    DIV        reduce using rule 68 (math_op_muldiv)
    OR         reduce using rule 68 (math_op_muldiv)
    AND        reduce using rule 68 (math_op_muldiv)
    SMALLER    reduce using rule 68 (math_op_muldiv)
    GREATER    reduce using rule 68 (math_op_muldiv)
    SMALLEQ    reduce using rule 68 (math_op_muldiv)
    GREATEQ    reduce using rule 68 (math_op_muldiv)
    EQUALS     reduce using rule 68 (math_op_muldiv)
    DIFFERENT  reduce using rule 68 (math_op_muldiv)
    IN         reduce using rule 54 (term)
    SEMIC      reduce using rule 68 (math_op_muldiv)


State 68

   55 term: str_term •
   91 func_call: str_term •

    IN     reduce using rule 55 (term)
    SEMIC  reduce using rule 91 (func_call)


State 69

   63 math_op: math_op • ADD math_op_muldiv
   64        | math_op • SUB math_op_muldiv
   89 negation_operation: math_op •

    ADD  shift, and go to state 108
    SUB  shift, and go to state 109

    OR         reduce using rule 89 (negation_operation)
    AND        reduce using rule 89 (negation_operation)
    SMALLER    reduce using rule 89 (negation_operation)
    GREATER    reduce using rule 89 (negation_operation)
    SMALLEQ    reduce using rule 89 (negation_operation)
    GREATEQ    reduce using rule 89 (negation_operation)
    EQUALS     reduce using rule 89 (negation_operation)
    DIFFERENT  reduce using rule 89 (negation_operation)
    SEMIC      reduce using rule 89 (negation_operation)


State 70

   65 math_op: math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 110
    DIV   shift, and go to state 111

    ADD        reduce using rule 65 (math_op)
    SUB        reduce using rule 65 (math_op)
    OR         reduce using rule 65 (math_op)
    AND        reduce using rule 65 (math_op)
    SMALLER    reduce using rule 65 (math_op)
    GREATER    reduce using rule 65 (math_op)
    SMALLEQ    reduce using rule 65 (math_op)
    GREATEQ    reduce using rule 65 (math_op)
    EQUALS     reduce using rule 65 (math_op)
    DIFFERENT  reduce using rule 65 (math_op)
    SEMIC      reduce using rule 65 (math_op)


State 71

   51 expression: many_operations •

    SEMIC  reduce using rule 51 (expression)


State 72

   72 many_operations: operation •

    SEMIC  reduce using rule 72 (many_operations)


State 73

   75 operation: or_operation •
   76 or_operation: or_operation • OR and_operation

    OR  shift, and go to state 112

    SEMIC  reduce using rule 75 (operation)


State 74

   77 or_operation: and_operation •
   78 and_operation: and_operation • AND equality_operation

    AND  shift, and go to state 113

    OR     reduce using rule 77 (or_operation)
    SEMIC  reduce using rule 77 (or_operation)


State 75

   79 and_operation: equality_operation •
   80 equality_operation: equality_operation • EQUALS relational_operation
   81                   | equality_operation • DIFFERENT relational_operation

    EQUALS     shift, and go to state 114
    DIFFERENT  shift, and go to state 115

    OR     reduce using rule 79 (and_operation)
    AND    reduce using rule 79 (and_operation)
    SEMIC  reduce using rule 79 (and_operation)


State 76

   82 equality_operation: relational_operation •
   83 relational_operation: relational_operation • SMALLER negation_operation
   84                     | relational_operation • GREATER negation_operation
   85                     | relational_operation • SMALLEQ negation_operation
   86                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 116
    GREATER  shift, and go to state 117
    SMALLEQ  shift, and go to state 118
    GREATEQ  shift, and go to state 119

    OR         reduce using rule 82 (equality_operation)
    AND        reduce using rule 82 (equality_operation)
    EQUALS     reduce using rule 82 (equality_operation)
    DIFFERENT  reduce using rule 82 (equality_operation)
    SEMIC      reduce using rule 82 (equality_operation)


State 77

   87 relational_operation: negation_operation •

    OR         reduce using rule 87 (relational_operation)
    AND        reduce using rule 87 (relational_operation)
    SMALLER    reduce using rule 87 (relational_operation)
    GREATER    reduce using rule 87 (relational_operation)
    SMALLEQ    reduce using rule 87 (relational_operation)
    GREATEQ    reduce using rule 87 (relational_operation)
    EQUALS     reduce using rule 87 (relational_operation)
    DIFFERENT  reduce using rule 87 (relational_operation)
    SEMIC      reduce using rule 87 (relational_operation)


State 78

   52 expression: func_call •

    SEMIC  reduce using rule 52 (expression)


State 79

   73 operation: in_set •

    SEMIC  reduce using rule 73 (operation)


State 80

   53 expression: assign_value •

    SEMIC  reduce using rule 53 (expression)


State 81

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC •

    $end  reduce using rule 12 (func_dec)
    TYPE  reduce using rule 12 (func_dec)


State 82

   96 assign_value: ID ASSIGN • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression            go to state 120
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 83

   90 func_call: ID PARENL • args_list PARENR

    ID       shift, and go to state 233
    STRING   shift, and go to state 234
    CHAR     shift, and go to state 235
    EMPTY    shift, and go to state 236
    INTEGER  shift, and go to state 237
    DECIMAL  shift, and go to state 238
    NEG      shift, and go to state 239
    ISTYPE   shift, and go to state 240
    ADDSET   shift, and go to state 241
    REMOVE   shift, and go to state 242
    EXISTS   shift, and go to state 243
    PARENL   shift, and go to state 244

    COMMA   reduce using rule 95 (args_list)
    PARENR  reduce using rule 95 (args_list)

    expression            go to state 121
    term                  go to state 245
    math_term             go to state 246
    str_term              go to state 247
    math_op               go to state 248
    math_op_muldiv        go to state 249
    many_operations       go to state 250
    operation             go to state 251
    or_operation          go to state 252
    and_operation         go to state 253
    equality_operation    go to state 254
    relational_operation  go to state 255
    negation_operation    go to state 256
    func_call             go to state 257
    in_set                go to state 258
    args_list             go to state 122
    assign_value          go to state 259


State 84

   47 var_dec: TYPE ID • SEMIC

    SEMIC  shift, and go to state 260


State 85

   56 math_term: ID •

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    SEMIC      reduce using rule 56 (math_term)


State 86

   68 math_op_muldiv: math_term •

    ADD        reduce using rule 68 (math_op_muldiv)
    SUB        reduce using rule 68 (math_op_muldiv)
    MULT       reduce using rule 68 (math_op_muldiv)
    DIV        reduce using rule 68 (math_op_muldiv)
    OR         reduce using rule 68 (math_op_muldiv)
    AND        reduce using rule 68 (math_op_muldiv)
    SMALLER    reduce using rule 68 (math_op_muldiv)
    GREATER    reduce using rule 68 (math_op_muldiv)
    SMALLEQ    reduce using rule 68 (math_op_muldiv)
    GREATEQ    reduce using rule 68 (math_op_muldiv)
    EQUALS     reduce using rule 68 (math_op_muldiv)
    DIFFERENT  reduce using rule 68 (math_op_muldiv)
    SEMIC      reduce using rule 68 (math_op_muldiv)


State 87

   63 math_op: math_op • ADD math_op_muldiv
   64        | math_op • SUB math_op_muldiv
   88 negation_operation: NEG math_op •

    ADD  shift, and go to state 108
    SUB  shift, and go to state 109

    OR         reduce using rule 88 (negation_operation)
    AND        reduce using rule 88 (negation_operation)
    SMALLER    reduce using rule 88 (negation_operation)
    GREATER    reduce using rule 88 (negation_operation)
    SMALLEQ    reduce using rule 88 (negation_operation)
    GREATEQ    reduce using rule 88 (negation_operation)
    EQUALS     reduce using rule 88 (negation_operation)
    DIFFERENT  reduce using rule 88 (negation_operation)
    SEMIC      reduce using rule 88 (negation_operation)


State 88

   41 if_statement: IF PARENL • expression PARENR

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 123
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 89

   32 for_statement: FOR PARENL • for_body PARENR

    ID       shift, and go to state 261
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 262
    DECIMAL  shift, and go to state 263
    NEG      shift, and go to state 264
    ISTYPE   shift, and go to state 265
    ADDSET   shift, and go to state 266
    REMOVE   shift, and go to state 267
    EXISTS   shift, and go to state 268
    PARENL   shift, and go to state 269
    SEMIC    shift, and go to state 124

    expression_statement  go to state 125
    for_body              go to state 126
    expression            go to state 270
    term                  go to state 271
    math_term             go to state 272
    str_term              go to state 68
    math_op               go to state 273
    math_op_muldiv        go to state 274
    many_operations       go to state 127
    operation             go to state 275
    or_operation          go to state 276
    and_operation         go to state 277
    equality_operation    go to state 278
    relational_operation  go to state 279
    negation_operation    go to state 280
    func_call             go to state 78
    in_set                go to state 281
    assign_value          go to state 80


State 90

   48 io_ops: READ PARENL • ID PARENR SEMIC

    ID  shift, and go to state 128


State 91

   49 io_ops: WRITE PARENL • expression PARENR SEMIC

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 129
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 92

   50 io_ops: WRITELN PARENL • expression PARENR SEMIC

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 130
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 93

   46 ret_st: RETURN expression • SEMIC

    SEMIC  shift, and go to state 131


State 94

   74 operation: ISTYPE PARENL • expression PARENR

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 132
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 95

   69 many_operations: ADDSET PARENL • many_operations PARENR

    ID       shift, and go to state 282
    STRING   shift, and go to state 283
    CHAR     shift, and go to state 284
    EMPTY    shift, and go to state 285
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 133
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 134
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    in_set                go to state 216


State 96

   70 many_operations: REMOVE PARENL • many_operations PARENR

    ID       shift, and go to state 282
    STRING   shift, and go to state 283
    CHAR     shift, and go to state 284
    EMPTY    shift, and go to state 285
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 133
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 135
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    in_set                go to state 216


State 97

   71 many_operations: EXISTS PARENL • many_operations PARENR

    ID       shift, and go to state 282
    STRING   shift, and go to state 283
    CHAR     shift, and go to state 284
    EMPTY    shift, and go to state 285
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 133
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 136
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    in_set                go to state 216


State 98

   33 forall_statement: FORALL PARENL • in_set PARENR

    ID       shift, and go to state 286
    STRING   shift, and go to state 283
    CHAR     shift, and go to state 284
    EMPTY    shift, and go to state 285
    INTEGER  shift, and go to state 287
    DECIMAL  shift, and go to state 288
    PARENL   shift, and go to state 289

    term       go to state 203
    math_term  go to state 137
    str_term   go to state 133
    in_set     go to state 138


State 99

   59 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 139


State 100

   28 basic_ops: for_statement STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 140


State 101

   29 basic_ops: for_statement statement •

    ID       reduce using rule 29 (basic_ops)
    TYPE     reduce using rule 29 (basic_ops)
    STRING   reduce using rule 29 (basic_ops)
    CHAR     reduce using rule 29 (basic_ops)
    EMPTY    reduce using rule 29 (basic_ops)
    INTEGER  reduce using rule 29 (basic_ops)
    DECIMAL  reduce using rule 29 (basic_ops)
    NEG      reduce using rule 29 (basic_ops)
    IF       reduce using rule 29 (basic_ops)
    FOR      reduce using rule 29 (basic_ops)
    READ     reduce using rule 29 (basic_ops)
    WRITE    reduce using rule 29 (basic_ops)
    WRITELN  reduce using rule 29 (basic_ops)
    RETURN   reduce using rule 29 (basic_ops)
    ISTYPE   reduce using rule 29 (basic_ops)
    ADDSET   reduce using rule 29 (basic_ops)
    REMOVE   reduce using rule 29 (basic_ops)
    EXISTS   reduce using rule 29 (basic_ops)
    FORALL   reduce using rule 29 (basic_ops)
    ENDFUNC  reduce using rule 29 (basic_ops)
    PARENL   reduce using rule 29 (basic_ops)


State 102

   31 basic_ops: forall_statement STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 141


State 103

   30 basic_ops: forall_statement statement •

    ID       reduce using rule 30 (basic_ops)
    TYPE     reduce using rule 30 (basic_ops)
    STRING   reduce using rule 30 (basic_ops)
    CHAR     reduce using rule 30 (basic_ops)
    EMPTY    reduce using rule 30 (basic_ops)
    INTEGER  reduce using rule 30 (basic_ops)
    DECIMAL  reduce using rule 30 (basic_ops)
    NEG      reduce using rule 30 (basic_ops)
    IF       reduce using rule 30 (basic_ops)
    FOR      reduce using rule 30 (basic_ops)
    READ     reduce using rule 30 (basic_ops)
    WRITE    reduce using rule 30 (basic_ops)
    WRITELN  reduce using rule 30 (basic_ops)
    RETURN   reduce using rule 30 (basic_ops)
    ISTYPE   reduce using rule 30 (basic_ops)
    ADDSET   reduce using rule 30 (basic_ops)
    REMOVE   reduce using rule 30 (basic_ops)
    EXISTS   reduce using rule 30 (basic_ops)
    FORALL   reduce using rule 30 (basic_ops)
    ENDFUNC  reduce using rule 30 (basic_ops)
    PARENL   reduce using rule 30 (basic_ops)


State 104

   39 if_ops: if_statement STFUNC • statement_list ENDFUNC
   40       | if_statement STFUNC • statement_list ENDFUNC else_statement

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 142


State 105

   37 if_ops: if_statement statement •
   38       | if_statement statement • else_statement

    ELSE  shift, and go to state 143

    ID       reduce using rule 37 (if_ops)
    TYPE     reduce using rule 37 (if_ops)
    STRING   reduce using rule 37 (if_ops)
    CHAR     reduce using rule 37 (if_ops)
    EMPTY    reduce using rule 37 (if_ops)
    INTEGER  reduce using rule 37 (if_ops)
    DECIMAL  reduce using rule 37 (if_ops)
    NEG      reduce using rule 37 (if_ops)
    IF       reduce using rule 37 (if_ops)
    FOR      reduce using rule 37 (if_ops)
    READ     reduce using rule 37 (if_ops)
    WRITE    reduce using rule 37 (if_ops)
    WRITELN  reduce using rule 37 (if_ops)
    RETURN   reduce using rule 37 (if_ops)
    ISTYPE   reduce using rule 37 (if_ops)
    ADDSET   reduce using rule 37 (if_ops)
    REMOVE   reduce using rule 37 (if_ops)
    EXISTS   reduce using rule 37 (if_ops)
    FORALL   reduce using rule 37 (if_ops)
    ENDFUNC  reduce using rule 37 (if_ops)
    PARENL   reduce using rule 37 (if_ops)

    else_statement  go to state 144


State 106

   26 expression_statement: expression SEMIC •

    ID       reduce using rule 26 (expression_statement)
    TYPE     reduce using rule 26 (expression_statement)
    STRING   reduce using rule 26 (expression_statement)
    CHAR     reduce using rule 26 (expression_statement)
    EMPTY    reduce using rule 26 (expression_statement)
    INTEGER  reduce using rule 26 (expression_statement)
    DECIMAL  reduce using rule 26 (expression_statement)
    NEG      reduce using rule 26 (expression_statement)
    IF       reduce using rule 26 (expression_statement)
    FOR      reduce using rule 26 (expression_statement)
    READ     reduce using rule 26 (expression_statement)
    WRITE    reduce using rule 26 (expression_statement)
    WRITELN  reduce using rule 26 (expression_statement)
    RETURN   reduce using rule 26 (expression_statement)
    ISTYPE   reduce using rule 26 (expression_statement)
    ADDSET   reduce using rule 26 (expression_statement)
    REMOVE   reduce using rule 26 (expression_statement)
    EXISTS   reduce using rule 26 (expression_statement)
    FORALL   reduce using rule 26 (expression_statement)
    ENDFUNC  reduce using rule 26 (expression_statement)
    PARENL   reduce using rule 26 (expression_statement)


State 107

   92 in_set: term IN • expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression            go to state 145
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 108

   63 math_op: math_op ADD • math_op_muldiv

    ID       shift, and go to state 85
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    math_term       go to state 86
    math_op_muldiv  go to state 146


State 109

   64 math_op: math_op SUB • math_op_muldiv

    ID       shift, and go to state 85
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    math_term       go to state 86
    math_op_muldiv  go to state 147


State 110

   67 math_op_muldiv: math_op_muldiv MULT • math_term

    ID       shift, and go to state 85
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    math_term  go to state 148


State 111

   66 math_op_muldiv: math_op_muldiv DIV • math_term

    ID       shift, and go to state 85
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    PARENL   shift, and go to state 190

    math_term  go to state 149


State 112

   76 or_operation: or_operation OR • and_operation

    ID       shift, and go to state 85
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 41
    PARENL   shift, and go to state 190

    math_term             go to state 86
    math_op               go to state 69
    math_op_muldiv        go to state 70
    and_operation         go to state 150
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77


State 113

   78 and_operation: and_operation AND • equality_operation

    ID       shift, and go to state 85
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 41
    PARENL   shift, and go to state 190

    math_term             go to state 86
    math_op               go to state 69
    math_op_muldiv        go to state 70
    equality_operation    go to state 151
    relational_operation  go to state 76
    negation_operation    go to state 77


State 114

   80 equality_operation: equality_operation EQUALS • relational_operation

    ID       shift, and go to state 85
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 41
    PARENL   shift, and go to state 190

    math_term             go to state 86
    math_op               go to state 69
    math_op_muldiv        go to state 70
    relational_operation  go to state 152
    negation_operation    go to state 77


State 115

   81 equality_operation: equality_operation DIFFERENT • relational_operation

    ID       shift, and go to state 85
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 41
    PARENL   shift, and go to state 190

    math_term             go to state 86
    math_op               go to state 69
    math_op_muldiv        go to state 70
    relational_operation  go to state 153
    negation_operation    go to state 77


State 116

   83 relational_operation: relational_operation SMALLER • negation_operation

    ID       shift, and go to state 85
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 41
    PARENL   shift, and go to state 190

    math_term           go to state 86
    math_op             go to state 69
    math_op_muldiv      go to state 70
    negation_operation  go to state 154


State 117

   84 relational_operation: relational_operation GREATER • negation_operation

    ID       shift, and go to state 85
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 41
    PARENL   shift, and go to state 190

    math_term           go to state 86
    math_op             go to state 69
    math_op_muldiv      go to state 70
    negation_operation  go to state 155


State 118

   85 relational_operation: relational_operation SMALLEQ • negation_operation

    ID       shift, and go to state 85
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 41
    PARENL   shift, and go to state 190

    math_term           go to state 86
    math_op             go to state 69
    math_op_muldiv      go to state 70
    negation_operation  go to state 156


State 119

   86 relational_operation: relational_operation GREATEQ • negation_operation

    ID       shift, and go to state 85
    INTEGER  shift, and go to state 188
    DECIMAL  shift, and go to state 189
    NEG      shift, and go to state 41
    PARENL   shift, and go to state 190

    math_term           go to state 86
    math_op             go to state 69
    math_op_muldiv      go to state 70
    negation_operation  go to state 157


State 120

   96 assign_value: ID ASSIGN expression •

    SEMIC  reduce using rule 96 (assign_value)


State 121

   94 args_list: expression •

    COMMA   reduce using rule 94 (args_list)
    PARENR  reduce using rule 94 (args_list)


State 122

   90 func_call: ID PARENL args_list • PARENR
   93 args_list: args_list • COMMA expression

    COMMA   shift, and go to state 158
    PARENR  shift, and go to state 159


State 123

   41 if_statement: IF PARENL expression • PARENR

    PARENR  shift, and go to state 160


State 124

   35 for_body: SEMIC • expression_statement expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression_statement  go to state 161
    expression            go to state 270
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 125

   34 for_body: expression_statement • expression_statement expression

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression_statement  go to state 162
    expression            go to state 270
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 126

   32 for_statement: FOR PARENL for_body • PARENR

    PARENR  shift, and go to state 163


State 127

   36 for_body: many_operations •
   51 expression: many_operations •

    PARENR  reduce using rule 36 (for_body)
    SEMIC   reduce using rule 51 (expression)


State 128

   48 io_ops: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 164


State 129

   49 io_ops: WRITE PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 165


State 130

   50 io_ops: WRITELN PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 166


State 131

   46 ret_st: RETURN expression SEMIC •

    ID       reduce using rule 46 (ret_st)
    TYPE     reduce using rule 46 (ret_st)
    STRING   reduce using rule 46 (ret_st)
    CHAR     reduce using rule 46 (ret_st)
    EMPTY    reduce using rule 46 (ret_st)
    INTEGER  reduce using rule 46 (ret_st)
    DECIMAL  reduce using rule 46 (ret_st)
    NEG      reduce using rule 46 (ret_st)
    IF       reduce using rule 46 (ret_st)
    FOR      reduce using rule 46 (ret_st)
    READ     reduce using rule 46 (ret_st)
    WRITE    reduce using rule 46 (ret_st)
    WRITELN  reduce using rule 46 (ret_st)
    RETURN   reduce using rule 46 (ret_st)
    ISTYPE   reduce using rule 46 (ret_st)
    ADDSET   reduce using rule 46 (ret_st)
    REMOVE   reduce using rule 46 (ret_st)
    EXISTS   reduce using rule 46 (ret_st)
    FORALL   reduce using rule 46 (ret_st)
    ENDFUNC  reduce using rule 46 (ret_st)
    PARENL   reduce using rule 46 (ret_st)


State 132

   74 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 167


State 133

   55 term: str_term •

    IN  reduce using rule 55 (term)


State 134

   69 many_operations: ADDSET PARENL many_operations • PARENR

    PARENR  shift, and go to state 168


State 135

   70 many_operations: REMOVE PARENL many_operations • PARENR

    PARENR  shift, and go to state 169


State 136

   71 many_operations: EXISTS PARENL many_operations • PARENR

    PARENR  shift, and go to state 170


State 137

   54 term: math_term •

    IN  reduce using rule 54 (term)


State 138

   33 forall_statement: FORALL PARENL in_set • PARENR

    PARENR  shift, and go to state 171


State 139

   59 math_term: PARENL expression PARENR •

    ADD        reduce using rule 59 (math_term)
    SUB        reduce using rule 59 (math_term)
    MULT       reduce using rule 59 (math_term)
    DIV        reduce using rule 59 (math_term)
    OR         reduce using rule 59 (math_term)
    AND        reduce using rule 59 (math_term)
    SMALLER    reduce using rule 59 (math_term)
    GREATER    reduce using rule 59 (math_term)
    SMALLEQ    reduce using rule 59 (math_term)
    GREATEQ    reduce using rule 59 (math_term)
    EQUALS     reduce using rule 59 (math_term)
    DIFFERENT  reduce using rule 59 (math_term)
    IN         reduce using rule 59 (math_term)
    SEMIC      reduce using rule 59 (math_term)


State 140

   18 statement_list: statement_list • statement
   28 basic_ops: for_statement STFUNC statement_list • ENDFUNC

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 172
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    for_statement         go to state 58
    forall_statement      go to state 59
    if_ops                go to state 60
    if_statement          go to state 61
    ret_st                go to state 62
    var_dec               go to state 63
    io_ops                go to state 64
    expression            go to state 65
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 141

   18 statement_list: statement_list • statement
   31 basic_ops: forall_statement STFUNC statement_list • ENDFUNC

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 173
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    for_statement         go to state 58
    forall_statement      go to state 59
    if_ops                go to state 60
    if_statement          go to state 61
    ret_st                go to state 62
    var_dec               go to state 63
    io_ops                go to state 64
    expression            go to state 65
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 142

   18 statement_list: statement_list • statement
   39 if_ops: if_statement STFUNC statement_list • ENDFUNC
   40       | if_statement STFUNC statement_list • ENDFUNC else_statement

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 174
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    for_statement         go to state 58
    forall_statement      go to state 59
    if_ops                go to state 60
    if_statement          go to state 61
    ret_st                go to state 62
    var_dec               go to state 63
    io_ops                go to state 64
    expression            go to state 65
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 143

   43 else_statement: ELSE • $@5 statement
   45               | ELSE • $@6 STFUNC statement_list ENDFUNC

    ID       reduce using rule 42 ($@5)
    TYPE     reduce using rule 42 ($@5)
    STRING   reduce using rule 42 ($@5)
    CHAR     reduce using rule 42 ($@5)
    EMPTY    reduce using rule 42 ($@5)
    INTEGER  reduce using rule 42 ($@5)
    DECIMAL  reduce using rule 42 ($@5)
    NEG      reduce using rule 42 ($@5)
    IF       reduce using rule 42 ($@5)
    FOR      reduce using rule 42 ($@5)
    READ     reduce using rule 42 ($@5)
    WRITE    reduce using rule 42 ($@5)
    WRITELN  reduce using rule 42 ($@5)
    RETURN   reduce using rule 42 ($@5)
    ISTYPE   reduce using rule 42 ($@5)
    ADDSET   reduce using rule 42 ($@5)
    REMOVE   reduce using rule 42 ($@5)
    EXISTS   reduce using rule 42 ($@5)
    FORALL   reduce using rule 42 ($@5)
    STFUNC   reduce using rule 44 ($@6)
    PARENL   reduce using rule 42 ($@5)

    $@5  go to state 175
    $@6  go to state 176


State 144

   38 if_ops: if_statement statement else_statement •

    ID       reduce using rule 38 (if_ops)
    TYPE     reduce using rule 38 (if_ops)
    STRING   reduce using rule 38 (if_ops)
    CHAR     reduce using rule 38 (if_ops)
    EMPTY    reduce using rule 38 (if_ops)
    INTEGER  reduce using rule 38 (if_ops)
    DECIMAL  reduce using rule 38 (if_ops)
    NEG      reduce using rule 38 (if_ops)
    IF       reduce using rule 38 (if_ops)
    FOR      reduce using rule 38 (if_ops)
    READ     reduce using rule 38 (if_ops)
    WRITE    reduce using rule 38 (if_ops)
    WRITELN  reduce using rule 38 (if_ops)
    RETURN   reduce using rule 38 (if_ops)
    ISTYPE   reduce using rule 38 (if_ops)
    ADDSET   reduce using rule 38 (if_ops)
    REMOVE   reduce using rule 38 (if_ops)
    EXISTS   reduce using rule 38 (if_ops)
    FORALL   reduce using rule 38 (if_ops)
    ENDFUNC  reduce using rule 38 (if_ops)
    PARENL   reduce using rule 38 (if_ops)


State 145

   92 in_set: term IN expression •

    SEMIC  reduce using rule 92 (in_set)


State 146

   63 math_op: math_op ADD math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 110
    DIV   shift, and go to state 111

    ADD        reduce using rule 63 (math_op)
    SUB        reduce using rule 63 (math_op)
    OR         reduce using rule 63 (math_op)
    AND        reduce using rule 63 (math_op)
    SMALLER    reduce using rule 63 (math_op)
    GREATER    reduce using rule 63 (math_op)
    SMALLEQ    reduce using rule 63 (math_op)
    GREATEQ    reduce using rule 63 (math_op)
    EQUALS     reduce using rule 63 (math_op)
    DIFFERENT  reduce using rule 63 (math_op)
    SEMIC      reduce using rule 63 (math_op)


State 147

   64 math_op: math_op SUB math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 110
    DIV   shift, and go to state 111

    ADD        reduce using rule 64 (math_op)
    SUB        reduce using rule 64 (math_op)
    OR         reduce using rule 64 (math_op)
    AND        reduce using rule 64 (math_op)
    SMALLER    reduce using rule 64 (math_op)
    GREATER    reduce using rule 64 (math_op)
    SMALLEQ    reduce using rule 64 (math_op)
    GREATEQ    reduce using rule 64 (math_op)
    EQUALS     reduce using rule 64 (math_op)
    DIFFERENT  reduce using rule 64 (math_op)
    SEMIC      reduce using rule 64 (math_op)


State 148

   67 math_op_muldiv: math_op_muldiv MULT math_term •

    ADD        reduce using rule 67 (math_op_muldiv)
    SUB        reduce using rule 67 (math_op_muldiv)
    MULT       reduce using rule 67 (math_op_muldiv)
    DIV        reduce using rule 67 (math_op_muldiv)
    OR         reduce using rule 67 (math_op_muldiv)
    AND        reduce using rule 67 (math_op_muldiv)
    SMALLER    reduce using rule 67 (math_op_muldiv)
    GREATER    reduce using rule 67 (math_op_muldiv)
    SMALLEQ    reduce using rule 67 (math_op_muldiv)
    GREATEQ    reduce using rule 67 (math_op_muldiv)
    EQUALS     reduce using rule 67 (math_op_muldiv)
    DIFFERENT  reduce using rule 67 (math_op_muldiv)
    SEMIC      reduce using rule 67 (math_op_muldiv)


State 149

   66 math_op_muldiv: math_op_muldiv DIV math_term •

    ADD        reduce using rule 66 (math_op_muldiv)
    SUB        reduce using rule 66 (math_op_muldiv)
    MULT       reduce using rule 66 (math_op_muldiv)
    DIV        reduce using rule 66 (math_op_muldiv)
    OR         reduce using rule 66 (math_op_muldiv)
    AND        reduce using rule 66 (math_op_muldiv)
    SMALLER    reduce using rule 66 (math_op_muldiv)
    GREATER    reduce using rule 66 (math_op_muldiv)
    SMALLEQ    reduce using rule 66 (math_op_muldiv)
    GREATEQ    reduce using rule 66 (math_op_muldiv)
    EQUALS     reduce using rule 66 (math_op_muldiv)
    DIFFERENT  reduce using rule 66 (math_op_muldiv)
    SEMIC      reduce using rule 66 (math_op_muldiv)


State 150

   76 or_operation: or_operation OR and_operation •
   78 and_operation: and_operation • AND equality_operation

    AND  shift, and go to state 113

    OR     reduce using rule 76 (or_operation)
    SEMIC  reduce using rule 76 (or_operation)


State 151

   78 and_operation: and_operation AND equality_operation •
   80 equality_operation: equality_operation • EQUALS relational_operation
   81                   | equality_operation • DIFFERENT relational_operation

    EQUALS     shift, and go to state 114
    DIFFERENT  shift, and go to state 115

    OR     reduce using rule 78 (and_operation)
    AND    reduce using rule 78 (and_operation)
    SEMIC  reduce using rule 78 (and_operation)


State 152

   80 equality_operation: equality_operation EQUALS relational_operation •
   83 relational_operation: relational_operation • SMALLER negation_operation
   84                     | relational_operation • GREATER negation_operation
   85                     | relational_operation • SMALLEQ negation_operation
   86                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 116
    GREATER  shift, and go to state 117
    SMALLEQ  shift, and go to state 118
    GREATEQ  shift, and go to state 119

    OR         reduce using rule 80 (equality_operation)
    AND        reduce using rule 80 (equality_operation)
    EQUALS     reduce using rule 80 (equality_operation)
    DIFFERENT  reduce using rule 80 (equality_operation)
    SEMIC      reduce using rule 80 (equality_operation)


State 153

   81 equality_operation: equality_operation DIFFERENT relational_operation •
   83 relational_operation: relational_operation • SMALLER negation_operation
   84                     | relational_operation • GREATER negation_operation
   85                     | relational_operation • SMALLEQ negation_operation
   86                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 116
    GREATER  shift, and go to state 117
    SMALLEQ  shift, and go to state 118
    GREATEQ  shift, and go to state 119

    OR         reduce using rule 81 (equality_operation)
    AND        reduce using rule 81 (equality_operation)
    EQUALS     reduce using rule 81 (equality_operation)
    DIFFERENT  reduce using rule 81 (equality_operation)
    SEMIC      reduce using rule 81 (equality_operation)


State 154

   83 relational_operation: relational_operation SMALLER negation_operation •

    OR         reduce using rule 83 (relational_operation)
    AND        reduce using rule 83 (relational_operation)
    SMALLER    reduce using rule 83 (relational_operation)
    GREATER    reduce using rule 83 (relational_operation)
    SMALLEQ    reduce using rule 83 (relational_operation)
    GREATEQ    reduce using rule 83 (relational_operation)
    EQUALS     reduce using rule 83 (relational_operation)
    DIFFERENT  reduce using rule 83 (relational_operation)
    SEMIC      reduce using rule 83 (relational_operation)


State 155

   84 relational_operation: relational_operation GREATER negation_operation •

    OR         reduce using rule 84 (relational_operation)
    AND        reduce using rule 84 (relational_operation)
    SMALLER    reduce using rule 84 (relational_operation)
    GREATER    reduce using rule 84 (relational_operation)
    SMALLEQ    reduce using rule 84 (relational_operation)
    GREATEQ    reduce using rule 84 (relational_operation)
    EQUALS     reduce using rule 84 (relational_operation)
    DIFFERENT  reduce using rule 84 (relational_operation)
    SEMIC      reduce using rule 84 (relational_operation)


State 156

   85 relational_operation: relational_operation SMALLEQ negation_operation •

    OR         reduce using rule 85 (relational_operation)
    AND        reduce using rule 85 (relational_operation)
    SMALLER    reduce using rule 85 (relational_operation)
    GREATER    reduce using rule 85 (relational_operation)
    SMALLEQ    reduce using rule 85 (relational_operation)
    GREATEQ    reduce using rule 85 (relational_operation)
    EQUALS     reduce using rule 85 (relational_operation)
    DIFFERENT  reduce using rule 85 (relational_operation)
    SEMIC      reduce using rule 85 (relational_operation)


State 157

   86 relational_operation: relational_operation GREATEQ negation_operation •

    OR         reduce using rule 86 (relational_operation)
    AND        reduce using rule 86 (relational_operation)
    SMALLER    reduce using rule 86 (relational_operation)
    GREATER    reduce using rule 86 (relational_operation)
    SMALLEQ    reduce using rule 86 (relational_operation)
    GREATEQ    reduce using rule 86 (relational_operation)
    EQUALS     reduce using rule 86 (relational_operation)
    DIFFERENT  reduce using rule 86 (relational_operation)
    SEMIC      reduce using rule 86 (relational_operation)


State 158

   93 args_list: args_list COMMA • expression

    ID       shift, and go to state 233
    STRING   shift, and go to state 234
    CHAR     shift, and go to state 235
    EMPTY    shift, and go to state 236
    INTEGER  shift, and go to state 237
    DECIMAL  shift, and go to state 238
    NEG      shift, and go to state 239
    ISTYPE   shift, and go to state 240
    ADDSET   shift, and go to state 241
    REMOVE   shift, and go to state 242
    EXISTS   shift, and go to state 243
    PARENL   shift, and go to state 244

    expression            go to state 177
    term                  go to state 245
    math_term             go to state 246
    str_term              go to state 247
    math_op               go to state 248
    math_op_muldiv        go to state 249
    many_operations       go to state 250
    operation             go to state 251
    or_operation          go to state 252
    and_operation         go to state 253
    equality_operation    go to state 254
    relational_operation  go to state 255
    negation_operation    go to state 256
    func_call             go to state 257
    in_set                go to state 258
    assign_value          go to state 259


State 159

   90 func_call: ID PARENL args_list PARENR •

    SEMIC  reduce using rule 90 (func_call)


State 160

   41 if_statement: IF PARENL expression PARENR •

    ID       reduce using rule 41 (if_statement)
    TYPE     reduce using rule 41 (if_statement)
    STRING   reduce using rule 41 (if_statement)
    CHAR     reduce using rule 41 (if_statement)
    EMPTY    reduce using rule 41 (if_statement)
    INTEGER  reduce using rule 41 (if_statement)
    DECIMAL  reduce using rule 41 (if_statement)
    NEG      reduce using rule 41 (if_statement)
    IF       reduce using rule 41 (if_statement)
    FOR      reduce using rule 41 (if_statement)
    READ     reduce using rule 41 (if_statement)
    WRITE    reduce using rule 41 (if_statement)
    WRITELN  reduce using rule 41 (if_statement)
    RETURN   reduce using rule 41 (if_statement)
    ISTYPE   reduce using rule 41 (if_statement)
    ADDSET   reduce using rule 41 (if_statement)
    REMOVE   reduce using rule 41 (if_statement)
    EXISTS   reduce using rule 41 (if_statement)
    FORALL   reduce using rule 41 (if_statement)
    STFUNC   reduce using rule 41 (if_statement)
    PARENL   reduce using rule 41 (if_statement)


State 161

   35 for_body: SEMIC expression_statement • expression

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 178
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 162

   34 for_body: expression_statement expression_statement • expression

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 179
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 163

   32 for_statement: FOR PARENL for_body PARENR •

    ID       reduce using rule 32 (for_statement)
    TYPE     reduce using rule 32 (for_statement)
    STRING   reduce using rule 32 (for_statement)
    CHAR     reduce using rule 32 (for_statement)
    EMPTY    reduce using rule 32 (for_statement)
    INTEGER  reduce using rule 32 (for_statement)
    DECIMAL  reduce using rule 32 (for_statement)
    NEG      reduce using rule 32 (for_statement)
    IF       reduce using rule 32 (for_statement)
    FOR      reduce using rule 32 (for_statement)
    READ     reduce using rule 32 (for_statement)
    WRITE    reduce using rule 32 (for_statement)
    WRITELN  reduce using rule 32 (for_statement)
    RETURN   reduce using rule 32 (for_statement)
    ISTYPE   reduce using rule 32 (for_statement)
    ADDSET   reduce using rule 32 (for_statement)
    REMOVE   reduce using rule 32 (for_statement)
    EXISTS   reduce using rule 32 (for_statement)
    FORALL   reduce using rule 32 (for_statement)
    STFUNC   reduce using rule 32 (for_statement)
    PARENL   reduce using rule 32 (for_statement)


State 164

   48 io_ops: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 180


State 165

   49 io_ops: WRITE PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 181


State 166

   50 io_ops: WRITELN PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 182


State 167

   74 operation: ISTYPE PARENL expression PARENR •

    SEMIC  reduce using rule 74 (operation)


State 168

   69 many_operations: ADDSET PARENL many_operations PARENR •

    SEMIC  reduce using rule 69 (many_operations)


State 169

   70 many_operations: REMOVE PARENL many_operations PARENR •

    SEMIC  reduce using rule 70 (many_operations)


State 170

   71 many_operations: EXISTS PARENL many_operations PARENR •

    SEMIC  reduce using rule 71 (many_operations)


State 171

   33 forall_statement: FORALL PARENL in_set PARENR •

    ID       reduce using rule 33 (forall_statement)
    TYPE     reduce using rule 33 (forall_statement)
    STRING   reduce using rule 33 (forall_statement)
    CHAR     reduce using rule 33 (forall_statement)
    EMPTY    reduce using rule 33 (forall_statement)
    INTEGER  reduce using rule 33 (forall_statement)
    DECIMAL  reduce using rule 33 (forall_statement)
    NEG      reduce using rule 33 (forall_statement)
    IF       reduce using rule 33 (forall_statement)
    FOR      reduce using rule 33 (forall_statement)
    READ     reduce using rule 33 (forall_statement)
    WRITE    reduce using rule 33 (forall_statement)
    WRITELN  reduce using rule 33 (forall_statement)
    RETURN   reduce using rule 33 (forall_statement)
    ISTYPE   reduce using rule 33 (forall_statement)
    ADDSET   reduce using rule 33 (forall_statement)
    REMOVE   reduce using rule 33 (forall_statement)
    EXISTS   reduce using rule 33 (forall_statement)
    FORALL   reduce using rule 33 (forall_statement)
    STFUNC   reduce using rule 33 (forall_statement)
    PARENL   reduce using rule 33 (forall_statement)


State 172

   28 basic_ops: for_statement STFUNC statement_list ENDFUNC •

    ID       reduce using rule 28 (basic_ops)
    TYPE     reduce using rule 28 (basic_ops)
    STRING   reduce using rule 28 (basic_ops)
    CHAR     reduce using rule 28 (basic_ops)
    EMPTY    reduce using rule 28 (basic_ops)
    INTEGER  reduce using rule 28 (basic_ops)
    DECIMAL  reduce using rule 28 (basic_ops)
    NEG      reduce using rule 28 (basic_ops)
    IF       reduce using rule 28 (basic_ops)
    FOR      reduce using rule 28 (basic_ops)
    READ     reduce using rule 28 (basic_ops)
    WRITE    reduce using rule 28 (basic_ops)
    WRITELN  reduce using rule 28 (basic_ops)
    RETURN   reduce using rule 28 (basic_ops)
    ISTYPE   reduce using rule 28 (basic_ops)
    ADDSET   reduce using rule 28 (basic_ops)
    REMOVE   reduce using rule 28 (basic_ops)
    EXISTS   reduce using rule 28 (basic_ops)
    FORALL   reduce using rule 28 (basic_ops)
    ENDFUNC  reduce using rule 28 (basic_ops)
    PARENL   reduce using rule 28 (basic_ops)


State 173

   31 basic_ops: forall_statement STFUNC statement_list ENDFUNC •

    ID       reduce using rule 31 (basic_ops)
    TYPE     reduce using rule 31 (basic_ops)
    STRING   reduce using rule 31 (basic_ops)
    CHAR     reduce using rule 31 (basic_ops)
    EMPTY    reduce using rule 31 (basic_ops)
    INTEGER  reduce using rule 31 (basic_ops)
    DECIMAL  reduce using rule 31 (basic_ops)
    NEG      reduce using rule 31 (basic_ops)
    IF       reduce using rule 31 (basic_ops)
    FOR      reduce using rule 31 (basic_ops)
    READ     reduce using rule 31 (basic_ops)
    WRITE    reduce using rule 31 (basic_ops)
    WRITELN  reduce using rule 31 (basic_ops)
    RETURN   reduce using rule 31 (basic_ops)
    ISTYPE   reduce using rule 31 (basic_ops)
    ADDSET   reduce using rule 31 (basic_ops)
    REMOVE   reduce using rule 31 (basic_ops)
    EXISTS   reduce using rule 31 (basic_ops)
    FORALL   reduce using rule 31 (basic_ops)
    ENDFUNC  reduce using rule 31 (basic_ops)
    PARENL   reduce using rule 31 (basic_ops)


State 174

   39 if_ops: if_statement STFUNC statement_list ENDFUNC •
   40       | if_statement STFUNC statement_list ENDFUNC • else_statement

    ELSE  shift, and go to state 143

    ID       reduce using rule 39 (if_ops)
    TYPE     reduce using rule 39 (if_ops)
    STRING   reduce using rule 39 (if_ops)
    CHAR     reduce using rule 39 (if_ops)
    EMPTY    reduce using rule 39 (if_ops)
    INTEGER  reduce using rule 39 (if_ops)
    DECIMAL  reduce using rule 39 (if_ops)
    NEG      reduce using rule 39 (if_ops)
    IF       reduce using rule 39 (if_ops)
    FOR      reduce using rule 39 (if_ops)
    READ     reduce using rule 39 (if_ops)
    WRITE    reduce using rule 39 (if_ops)
    WRITELN  reduce using rule 39 (if_ops)
    RETURN   reduce using rule 39 (if_ops)
    ISTYPE   reduce using rule 39 (if_ops)
    ADDSET   reduce using rule 39 (if_ops)
    REMOVE   reduce using rule 39 (if_ops)
    EXISTS   reduce using rule 39 (if_ops)
    FORALL   reduce using rule 39 (if_ops)
    ENDFUNC  reduce using rule 39 (if_ops)
    PARENL   reduce using rule 39 (if_ops)

    else_statement  go to state 183


State 175

   43 else_statement: ELSE $@5 • statement

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    PARENL   shift, and go to state 54

    statement             go to state 184
    expression_statement  go to state 56
    basic_ops             go to state 57
    for_statement         go to state 58
    forall_statement      go to state 59
    if_ops                go to state 60
    if_statement          go to state 61
    ret_st                go to state 62
    var_dec               go to state 63
    io_ops                go to state 64
    expression            go to state 65
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 176

   45 else_statement: ELSE $@6 • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 185


State 177

   93 args_list: args_list COMMA expression •

    COMMA   reduce using rule 93 (args_list)
    PARENR  reduce using rule 93 (args_list)


State 178

   35 for_body: SEMIC expression_statement expression •

    PARENR  reduce using rule 35 (for_body)


State 179

   34 for_body: expression_statement expression_statement expression •

    PARENR  reduce using rule 34 (for_body)


State 180

   48 io_ops: READ PARENL ID PARENR SEMIC •

    ID       reduce using rule 48 (io_ops)
    TYPE     reduce using rule 48 (io_ops)
    STRING   reduce using rule 48 (io_ops)
    CHAR     reduce using rule 48 (io_ops)
    EMPTY    reduce using rule 48 (io_ops)
    INTEGER  reduce using rule 48 (io_ops)
    DECIMAL  reduce using rule 48 (io_ops)
    NEG      reduce using rule 48 (io_ops)
    IF       reduce using rule 48 (io_ops)
    FOR      reduce using rule 48 (io_ops)
    READ     reduce using rule 48 (io_ops)
    WRITE    reduce using rule 48 (io_ops)
    WRITELN  reduce using rule 48 (io_ops)
    RETURN   reduce using rule 48 (io_ops)
    ISTYPE   reduce using rule 48 (io_ops)
    ADDSET   reduce using rule 48 (io_ops)
    REMOVE   reduce using rule 48 (io_ops)
    EXISTS   reduce using rule 48 (io_ops)
    FORALL   reduce using rule 48 (io_ops)
    ENDFUNC  reduce using rule 48 (io_ops)
    PARENL   reduce using rule 48 (io_ops)


State 181

   49 io_ops: WRITE PARENL expression PARENR SEMIC •

    ID       reduce using rule 49 (io_ops)
    TYPE     reduce using rule 49 (io_ops)
    STRING   reduce using rule 49 (io_ops)
    CHAR     reduce using rule 49 (io_ops)
    EMPTY    reduce using rule 49 (io_ops)
    INTEGER  reduce using rule 49 (io_ops)
    DECIMAL  reduce using rule 49 (io_ops)
    NEG      reduce using rule 49 (io_ops)
    IF       reduce using rule 49 (io_ops)
    FOR      reduce using rule 49 (io_ops)
    READ     reduce using rule 49 (io_ops)
    WRITE    reduce using rule 49 (io_ops)
    WRITELN  reduce using rule 49 (io_ops)
    RETURN   reduce using rule 49 (io_ops)
    ISTYPE   reduce using rule 49 (io_ops)
    ADDSET   reduce using rule 49 (io_ops)
    REMOVE   reduce using rule 49 (io_ops)
    EXISTS   reduce using rule 49 (io_ops)
    FORALL   reduce using rule 49 (io_ops)
    ENDFUNC  reduce using rule 49 (io_ops)
    PARENL   reduce using rule 49 (io_ops)


State 182

   50 io_ops: WRITELN PARENL expression PARENR SEMIC •

    ID       reduce using rule 50 (io_ops)
    TYPE     reduce using rule 50 (io_ops)
    STRING   reduce using rule 50 (io_ops)
    CHAR     reduce using rule 50 (io_ops)
    EMPTY    reduce using rule 50 (io_ops)
    INTEGER  reduce using rule 50 (io_ops)
    DECIMAL  reduce using rule 50 (io_ops)
    NEG      reduce using rule 50 (io_ops)
    IF       reduce using rule 50 (io_ops)
    FOR      reduce using rule 50 (io_ops)
    READ     reduce using rule 50 (io_ops)
    WRITE    reduce using rule 50 (io_ops)
    WRITELN  reduce using rule 50 (io_ops)
    RETURN   reduce using rule 50 (io_ops)
    ISTYPE   reduce using rule 50 (io_ops)
    ADDSET   reduce using rule 50 (io_ops)
    REMOVE   reduce using rule 50 (io_ops)
    EXISTS   reduce using rule 50 (io_ops)
    FORALL   reduce using rule 50 (io_ops)
    ENDFUNC  reduce using rule 50 (io_ops)
    PARENL   reduce using rule 50 (io_ops)


State 183

   40 if_ops: if_statement STFUNC statement_list ENDFUNC else_statement •

    ID       reduce using rule 40 (if_ops)
    TYPE     reduce using rule 40 (if_ops)
    STRING   reduce using rule 40 (if_ops)
    CHAR     reduce using rule 40 (if_ops)
    EMPTY    reduce using rule 40 (if_ops)
    INTEGER  reduce using rule 40 (if_ops)
    DECIMAL  reduce using rule 40 (if_ops)
    NEG      reduce using rule 40 (if_ops)
    IF       reduce using rule 40 (if_ops)
    FOR      reduce using rule 40 (if_ops)
    READ     reduce using rule 40 (if_ops)
    WRITE    reduce using rule 40 (if_ops)
    WRITELN  reduce using rule 40 (if_ops)
    RETURN   reduce using rule 40 (if_ops)
    ISTYPE   reduce using rule 40 (if_ops)
    ADDSET   reduce using rule 40 (if_ops)
    REMOVE   reduce using rule 40 (if_ops)
    EXISTS   reduce using rule 40 (if_ops)
    FORALL   reduce using rule 40 (if_ops)
    ENDFUNC  reduce using rule 40 (if_ops)
    PARENL   reduce using rule 40 (if_ops)


State 184

   43 else_statement: ELSE $@5 statement •

    ID       reduce using rule 43 (else_statement)
    TYPE     reduce using rule 43 (else_statement)
    STRING   reduce using rule 43 (else_statement)
    CHAR     reduce using rule 43 (else_statement)
    EMPTY    reduce using rule 43 (else_statement)
    INTEGER  reduce using rule 43 (else_statement)
    DECIMAL  reduce using rule 43 (else_statement)
    NEG      reduce using rule 43 (else_statement)
    IF       reduce using rule 43 (else_statement)
    FOR      reduce using rule 43 (else_statement)
    READ     reduce using rule 43 (else_statement)
    WRITE    reduce using rule 43 (else_statement)
    WRITELN  reduce using rule 43 (else_statement)
    RETURN   reduce using rule 43 (else_statement)
    ISTYPE   reduce using rule 43 (else_statement)
    ADDSET   reduce using rule 43 (else_statement)
    REMOVE   reduce using rule 43 (else_statement)
    EXISTS   reduce using rule 43 (else_statement)
    FORALL   reduce using rule 43 (else_statement)
    ENDFUNC  reduce using rule 43 (else_statement)
    PARENL   reduce using rule 43 (else_statement)


State 185

   45 else_statement: ELSE $@6 STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 186


State 186

   18 statement_list: statement_list • statement
   45 else_statement: ELSE $@6 STFUNC statement_list • ENDFUNC

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 187
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    for_statement         go to state 58
    forall_statement      go to state 59
    if_ops                go to state 60
    if_statement          go to state 61
    ret_st                go to state 62
    var_dec               go to state 63
    io_ops                go to state 64
    expression            go to state 65
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 187

   45 else_statement: ELSE $@6 STFUNC statement_list ENDFUNC •

    ID       reduce using rule 45 (else_statement)
    TYPE     reduce using rule 45 (else_statement)
    STRING   reduce using rule 45 (else_statement)
    CHAR     reduce using rule 45 (else_statement)
    EMPTY    reduce using rule 45 (else_statement)
    INTEGER  reduce using rule 45 (else_statement)
    DECIMAL  reduce using rule 45 (else_statement)
    NEG      reduce using rule 45 (else_statement)
    IF       reduce using rule 45 (else_statement)
    FOR      reduce using rule 45 (else_statement)
    READ     reduce using rule 45 (else_statement)
    WRITE    reduce using rule 45 (else_statement)
    WRITELN  reduce using rule 45 (else_statement)
    RETURN   reduce using rule 45 (else_statement)
    ISTYPE   reduce using rule 45 (else_statement)
    ADDSET   reduce using rule 45 (else_statement)
    REMOVE   reduce using rule 45 (else_statement)
    EXISTS   reduce using rule 45 (else_statement)
    FORALL   reduce using rule 45 (else_statement)
    ENDFUNC  reduce using rule 45 (else_statement)
    PARENL   reduce using rule 45 (else_statement)


State 188

   57 math_term: INTEGER •

    ADD        reduce using rule 57 (math_term)
    SUB        reduce using rule 57 (math_term)
    MULT       reduce using rule 57 (math_term)
    DIV        reduce using rule 57 (math_term)
    OR         reduce using rule 57 (math_term)
    AND        reduce using rule 57 (math_term)
    SMALLER    reduce using rule 57 (math_term)
    GREATER    reduce using rule 57 (math_term)
    SMALLEQ    reduce using rule 57 (math_term)
    GREATEQ    reduce using rule 57 (math_term)
    EQUALS     reduce using rule 57 (math_term)
    DIFFERENT  reduce using rule 57 (math_term)
    SEMIC      reduce using rule 57 (math_term)


State 189

   58 math_term: DECIMAL •

    ADD        reduce using rule 58 (math_term)
    SUB        reduce using rule 58 (math_term)
    MULT       reduce using rule 58 (math_term)
    DIV        reduce using rule 58 (math_term)
    OR         reduce using rule 58 (math_term)
    AND        reduce using rule 58 (math_term)
    SMALLER    reduce using rule 58 (math_term)
    GREATER    reduce using rule 58 (math_term)
    SMALLEQ    reduce using rule 58 (math_term)
    GREATEQ    reduce using rule 58 (math_term)
    EQUALS     reduce using rule 58 (math_term)
    DIFFERENT  reduce using rule 58 (math_term)
    SEMIC      reduce using rule 58 (math_term)


State 190

   59 math_term: PARENL • expression PARENR

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 290
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 191

   56 math_term: ID •
   90 func_call: ID • PARENL args_list PARENR
   96 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 291
    PARENL  shift, and go to state 292

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    IN         reduce using rule 56 (math_term)
    PARENR     reduce using rule 56 (math_term)


State 192

   61 str_term: STRING •

    IN      reduce using rule 61 (str_term)
    PARENR  reduce using rule 61 (str_term)


State 193

   60 str_term: CHAR •

    IN      reduce using rule 60 (str_term)
    PARENR  reduce using rule 60 (str_term)


State 194

   62 str_term: EMPTY •

    IN      reduce using rule 62 (str_term)
    PARENR  reduce using rule 62 (str_term)


State 195

   57 math_term: INTEGER •

    ADD        reduce using rule 57 (math_term)
    SUB        reduce using rule 57 (math_term)
    MULT       reduce using rule 57 (math_term)
    DIV        reduce using rule 57 (math_term)
    OR         reduce using rule 57 (math_term)
    AND        reduce using rule 57 (math_term)
    SMALLER    reduce using rule 57 (math_term)
    GREATER    reduce using rule 57 (math_term)
    SMALLEQ    reduce using rule 57 (math_term)
    GREATEQ    reduce using rule 57 (math_term)
    EQUALS     reduce using rule 57 (math_term)
    DIFFERENT  reduce using rule 57 (math_term)
    IN         reduce using rule 57 (math_term)
    PARENR     reduce using rule 57 (math_term)


State 196

   58 math_term: DECIMAL •

    ADD        reduce using rule 58 (math_term)
    SUB        reduce using rule 58 (math_term)
    MULT       reduce using rule 58 (math_term)
    DIV        reduce using rule 58 (math_term)
    OR         reduce using rule 58 (math_term)
    AND        reduce using rule 58 (math_term)
    SMALLER    reduce using rule 58 (math_term)
    GREATER    reduce using rule 58 (math_term)
    SMALLEQ    reduce using rule 58 (math_term)
    GREATEQ    reduce using rule 58 (math_term)
    EQUALS     reduce using rule 58 (math_term)
    DIFFERENT  reduce using rule 58 (math_term)
    IN         reduce using rule 58 (math_term)
    PARENR     reduce using rule 58 (math_term)


State 197

   88 negation_operation: NEG • math_op

    ID       shift, and go to state 293
    INTEGER  shift, and go to state 294
    DECIMAL  shift, and go to state 295
    PARENL   shift, and go to state 296

    math_term       go to state 297
    math_op         go to state 298
    math_op_muldiv  go to state 207


State 198

   74 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 299


State 199

   69 many_operations: ADDSET • PARENL many_operations PARENR

    PARENL  shift, and go to state 300


State 200

   70 many_operations: REMOVE • PARENL many_operations PARENR

    PARENL  shift, and go to state 301


State 201

   71 many_operations: EXISTS • PARENL many_operations PARENR

    PARENL  shift, and go to state 302


State 202

   59 math_term: PARENL • expression PARENR

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 303
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 203

   92 in_set: term • IN expression

    IN  shift, and go to state 304


State 204

   54 term: math_term •
   68 math_op_muldiv: math_term •

    ADD        reduce using rule 68 (math_op_muldiv)
    SUB        reduce using rule 68 (math_op_muldiv)
    MULT       reduce using rule 68 (math_op_muldiv)
    DIV        reduce using rule 68 (math_op_muldiv)
    OR         reduce using rule 68 (math_op_muldiv)
    AND        reduce using rule 68 (math_op_muldiv)
    SMALLER    reduce using rule 68 (math_op_muldiv)
    GREATER    reduce using rule 68 (math_op_muldiv)
    SMALLEQ    reduce using rule 68 (math_op_muldiv)
    GREATEQ    reduce using rule 68 (math_op_muldiv)
    EQUALS     reduce using rule 68 (math_op_muldiv)
    DIFFERENT  reduce using rule 68 (math_op_muldiv)
    IN         reduce using rule 54 (term)
    PARENR     reduce using rule 68 (math_op_muldiv)


State 205

   55 term: str_term •
   91 func_call: str_term •

    IN      reduce using rule 55 (term)
    PARENR  reduce using rule 91 (func_call)


State 206

   63 math_op: math_op • ADD math_op_muldiv
   64        | math_op • SUB math_op_muldiv
   89 negation_operation: math_op •

    ADD  shift, and go to state 305
    SUB  shift, and go to state 306

    OR         reduce using rule 89 (negation_operation)
    AND        reduce using rule 89 (negation_operation)
    SMALLER    reduce using rule 89 (negation_operation)
    GREATER    reduce using rule 89 (negation_operation)
    SMALLEQ    reduce using rule 89 (negation_operation)
    GREATEQ    reduce using rule 89 (negation_operation)
    EQUALS     reduce using rule 89 (negation_operation)
    DIFFERENT  reduce using rule 89 (negation_operation)
    PARENR     reduce using rule 89 (negation_operation)


State 207

   65 math_op: math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 307
    DIV   shift, and go to state 308

    ADD        reduce using rule 65 (math_op)
    SUB        reduce using rule 65 (math_op)
    OR         reduce using rule 65 (math_op)
    AND        reduce using rule 65 (math_op)
    SMALLER    reduce using rule 65 (math_op)
    GREATER    reduce using rule 65 (math_op)
    SMALLEQ    reduce using rule 65 (math_op)
    GREATEQ    reduce using rule 65 (math_op)
    EQUALS     reduce using rule 65 (math_op)
    DIFFERENT  reduce using rule 65 (math_op)
    PARENR     reduce using rule 65 (math_op)


State 208

   51 expression: many_operations •

    PARENR  reduce using rule 51 (expression)


State 209

   72 many_operations: operation •

    PARENR  reduce using rule 72 (many_operations)


State 210

   75 operation: or_operation •
   76 or_operation: or_operation • OR and_operation

    OR  shift, and go to state 309

    PARENR  reduce using rule 75 (operation)


State 211

   77 or_operation: and_operation •
   78 and_operation: and_operation • AND equality_operation

    AND  shift, and go to state 310

    OR      reduce using rule 77 (or_operation)
    PARENR  reduce using rule 77 (or_operation)


State 212

   79 and_operation: equality_operation •
   80 equality_operation: equality_operation • EQUALS relational_operation
   81                   | equality_operation • DIFFERENT relational_operation

    EQUALS     shift, and go to state 311
    DIFFERENT  shift, and go to state 312

    OR      reduce using rule 79 (and_operation)
    AND     reduce using rule 79 (and_operation)
    PARENR  reduce using rule 79 (and_operation)


State 213

   82 equality_operation: relational_operation •
   83 relational_operation: relational_operation • SMALLER negation_operation
   84                     | relational_operation • GREATER negation_operation
   85                     | relational_operation • SMALLEQ negation_operation
   86                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 313
    GREATER  shift, and go to state 314
    SMALLEQ  shift, and go to state 315
    GREATEQ  shift, and go to state 316

    OR         reduce using rule 82 (equality_operation)
    AND        reduce using rule 82 (equality_operation)
    EQUALS     reduce using rule 82 (equality_operation)
    DIFFERENT  reduce using rule 82 (equality_operation)
    PARENR     reduce using rule 82 (equality_operation)


State 214

   87 relational_operation: negation_operation •

    OR         reduce using rule 87 (relational_operation)
    AND        reduce using rule 87 (relational_operation)
    SMALLER    reduce using rule 87 (relational_operation)
    GREATER    reduce using rule 87 (relational_operation)
    SMALLEQ    reduce using rule 87 (relational_operation)
    GREATEQ    reduce using rule 87 (relational_operation)
    EQUALS     reduce using rule 87 (relational_operation)
    DIFFERENT  reduce using rule 87 (relational_operation)
    PARENR     reduce using rule 87 (relational_operation)


State 215

   52 expression: func_call •

    PARENR  reduce using rule 52 (expression)


State 216

   73 operation: in_set •

    PARENR  reduce using rule 73 (operation)


State 217

   53 expression: assign_value •

    PARENR  reduce using rule 53 (expression)


State 218

   47 var_dec: TYPE • ID SEMIC

    ID  shift, and go to state 317


State 219

   48 io_ops: READ • PARENL ID PARENR SEMIC

    PARENL  shift, and go to state 318


State 220

   49 io_ops: WRITE • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 319


State 221

   50 io_ops: WRITELN • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 320


State 222

   46 ret_st: RETURN • expression SEMIC

    ID       shift, and go to state 34
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    PARENL   shift, and go to state 54

    expression            go to state 321
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 223

   21 statement: expression_statement •

    ID       reduce using rule 21 (statement)
    TYPE     reduce using rule 21 (statement)
    STRING   reduce using rule 21 (statement)
    CHAR     reduce using rule 21 (statement)
    EMPTY    reduce using rule 21 (statement)
    INTEGER  reduce using rule 21 (statement)
    DECIMAL  reduce using rule 21 (statement)
    NEG      reduce using rule 21 (statement)
    IF       reduce using rule 21 (statement)
    ELSE     reduce using rule 21 (statement)
    FOR      reduce using rule 21 (statement)
    READ     reduce using rule 21 (statement)
    WRITE    reduce using rule 21 (statement)
    WRITELN  reduce using rule 21 (statement)
    RETURN   reduce using rule 21 (statement)
    ISTYPE   reduce using rule 21 (statement)
    ADDSET   reduce using rule 21 (statement)
    REMOVE   reduce using rule 21 (statement)
    EXISTS   reduce using rule 21 (statement)
    FORALL   reduce using rule 21 (statement)
    ENDFUNC  reduce using rule 21 (statement)
    PARENL   reduce using rule 21 (statement)


State 224

   25 statement: basic_ops •

    ID       reduce using rule 25 (statement)
    TYPE     reduce using rule 25 (statement)
    STRING   reduce using rule 25 (statement)
    CHAR     reduce using rule 25 (statement)
    EMPTY    reduce using rule 25 (statement)
    INTEGER  reduce using rule 25 (statement)
    DECIMAL  reduce using rule 25 (statement)
    NEG      reduce using rule 25 (statement)
    IF       reduce using rule 25 (statement)
    ELSE     reduce using rule 25 (statement)
    FOR      reduce using rule 25 (statement)
    READ     reduce using rule 25 (statement)
    WRITE    reduce using rule 25 (statement)
    WRITELN  reduce using rule 25 (statement)
    RETURN   reduce using rule 25 (statement)
    ISTYPE   reduce using rule 25 (statement)
    ADDSET   reduce using rule 25 (statement)
    REMOVE   reduce using rule 25 (statement)
    EXISTS   reduce using rule 25 (statement)
    FORALL   reduce using rule 25 (statement)
    ENDFUNC  reduce using rule 25 (statement)
    PARENL   reduce using rule 25 (statement)


State 225

   28 basic_ops: for_statement • STFUNC statement_list ENDFUNC
   29          | for_statement • statement

    ID       shift, and go to state 34
    TYPE     shift, and go to state 218
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 219
    WRITE    shift, and go to state 220
    WRITELN  shift, and go to state 221
    RETURN   shift, and go to state 222
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    STFUNC   shift, and go to state 322
    PARENL   shift, and go to state 54

    statement             go to state 323
    expression_statement  go to state 223
    basic_ops             go to state 224
    for_statement         go to state 225
    forall_statement      go to state 226
    if_ops                go to state 227
    if_statement          go to state 228
    ret_st                go to state 229
    var_dec               go to state 230
    io_ops                go to state 231
    expression            go to state 232
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 226

   30 basic_ops: forall_statement • statement
   31          | forall_statement • STFUNC statement_list ENDFUNC

    ID       shift, and go to state 34
    TYPE     shift, and go to state 218
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 219
    WRITE    shift, and go to state 220
    WRITELN  shift, and go to state 221
    RETURN   shift, and go to state 222
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    STFUNC   shift, and go to state 324
    PARENL   shift, and go to state 54

    statement             go to state 325
    expression_statement  go to state 223
    basic_ops             go to state 224
    for_statement         go to state 225
    forall_statement      go to state 226
    if_ops                go to state 227
    if_statement          go to state 228
    ret_st                go to state 229
    var_dec               go to state 230
    io_ops                go to state 231
    expression            go to state 232
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 227

   27 basic_ops: if_ops •

    ID       reduce using rule 27 (basic_ops)
    TYPE     reduce using rule 27 (basic_ops)
    STRING   reduce using rule 27 (basic_ops)
    CHAR     reduce using rule 27 (basic_ops)
    EMPTY    reduce using rule 27 (basic_ops)
    INTEGER  reduce using rule 27 (basic_ops)
    DECIMAL  reduce using rule 27 (basic_ops)
    NEG      reduce using rule 27 (basic_ops)
    IF       reduce using rule 27 (basic_ops)
    ELSE     reduce using rule 27 (basic_ops)
    FOR      reduce using rule 27 (basic_ops)
    READ     reduce using rule 27 (basic_ops)
    WRITE    reduce using rule 27 (basic_ops)
    WRITELN  reduce using rule 27 (basic_ops)
    RETURN   reduce using rule 27 (basic_ops)
    ISTYPE   reduce using rule 27 (basic_ops)
    ADDSET   reduce using rule 27 (basic_ops)
    REMOVE   reduce using rule 27 (basic_ops)
    EXISTS   reduce using rule 27 (basic_ops)
    FORALL   reduce using rule 27 (basic_ops)
    ENDFUNC  reduce using rule 27 (basic_ops)
    PARENL   reduce using rule 27 (basic_ops)


State 228

   37 if_ops: if_statement • statement
   38       | if_statement • statement else_statement
   39       | if_statement • STFUNC statement_list ENDFUNC
   40       | if_statement • STFUNC statement_list ENDFUNC else_statement

    ID       shift, and go to state 34
    TYPE     shift, and go to state 218
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 219
    WRITE    shift, and go to state 220
    WRITELN  shift, and go to state 221
    RETURN   shift, and go to state 222
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    STFUNC   shift, and go to state 326
    PARENL   shift, and go to state 54

    statement             go to state 327
    expression_statement  go to state 223
    basic_ops             go to state 224
    for_statement         go to state 225
    forall_statement      go to state 226
    if_ops                go to state 227
    if_statement          go to state 228
    ret_st                go to state 229
    var_dec               go to state 230
    io_ops                go to state 231
    expression            go to state 232
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 229

   22 statement: ret_st •

    ID       reduce using rule 22 (statement)
    TYPE     reduce using rule 22 (statement)
    STRING   reduce using rule 22 (statement)
    CHAR     reduce using rule 22 (statement)
    EMPTY    reduce using rule 22 (statement)
    INTEGER  reduce using rule 22 (statement)
    DECIMAL  reduce using rule 22 (statement)
    NEG      reduce using rule 22 (statement)
    IF       reduce using rule 22 (statement)
    ELSE     reduce using rule 22 (statement)
    FOR      reduce using rule 22 (statement)
    READ     reduce using rule 22 (statement)
    WRITE    reduce using rule 22 (statement)
    WRITELN  reduce using rule 22 (statement)
    RETURN   reduce using rule 22 (statement)
    ISTYPE   reduce using rule 22 (statement)
    ADDSET   reduce using rule 22 (statement)
    REMOVE   reduce using rule 22 (statement)
    EXISTS   reduce using rule 22 (statement)
    FORALL   reduce using rule 22 (statement)
    ENDFUNC  reduce using rule 22 (statement)
    PARENL   reduce using rule 22 (statement)


State 230

   23 statement: var_dec •

    ID       reduce using rule 23 (statement)
    TYPE     reduce using rule 23 (statement)
    STRING   reduce using rule 23 (statement)
    CHAR     reduce using rule 23 (statement)
    EMPTY    reduce using rule 23 (statement)
    INTEGER  reduce using rule 23 (statement)
    DECIMAL  reduce using rule 23 (statement)
    NEG      reduce using rule 23 (statement)
    IF       reduce using rule 23 (statement)
    ELSE     reduce using rule 23 (statement)
    FOR      reduce using rule 23 (statement)
    READ     reduce using rule 23 (statement)
    WRITE    reduce using rule 23 (statement)
    WRITELN  reduce using rule 23 (statement)
    RETURN   reduce using rule 23 (statement)
    ISTYPE   reduce using rule 23 (statement)
    ADDSET   reduce using rule 23 (statement)
    REMOVE   reduce using rule 23 (statement)
    EXISTS   reduce using rule 23 (statement)
    FORALL   reduce using rule 23 (statement)
    ENDFUNC  reduce using rule 23 (statement)
    PARENL   reduce using rule 23 (statement)


State 231

   24 statement: io_ops •

    ID       reduce using rule 24 (statement)
    TYPE     reduce using rule 24 (statement)
    STRING   reduce using rule 24 (statement)
    CHAR     reduce using rule 24 (statement)
    EMPTY    reduce using rule 24 (statement)
    INTEGER  reduce using rule 24 (statement)
    DECIMAL  reduce using rule 24 (statement)
    NEG      reduce using rule 24 (statement)
    IF       reduce using rule 24 (statement)
    ELSE     reduce using rule 24 (statement)
    FOR      reduce using rule 24 (statement)
    READ     reduce using rule 24 (statement)
    WRITE    reduce using rule 24 (statement)
    WRITELN  reduce using rule 24 (statement)
    RETURN   reduce using rule 24 (statement)
    ISTYPE   reduce using rule 24 (statement)
    ADDSET   reduce using rule 24 (statement)
    REMOVE   reduce using rule 24 (statement)
    EXISTS   reduce using rule 24 (statement)
    FORALL   reduce using rule 24 (statement)
    ENDFUNC  reduce using rule 24 (statement)
    PARENL   reduce using rule 24 (statement)


State 232

   26 expression_statement: expression • SEMIC

    SEMIC  shift, and go to state 328


State 233

   56 math_term: ID •
   90 func_call: ID • PARENL args_list PARENR
   96 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 329
    PARENL  shift, and go to state 330

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    IN         reduce using rule 56 (math_term)
    COMMA      reduce using rule 56 (math_term)
    PARENR     reduce using rule 56 (math_term)


State 234

   61 str_term: STRING •

    IN      reduce using rule 61 (str_term)
    COMMA   reduce using rule 61 (str_term)
    PARENR  reduce using rule 61 (str_term)


State 235

   60 str_term: CHAR •

    IN      reduce using rule 60 (str_term)
    COMMA   reduce using rule 60 (str_term)
    PARENR  reduce using rule 60 (str_term)


State 236

   62 str_term: EMPTY •

    IN      reduce using rule 62 (str_term)
    COMMA   reduce using rule 62 (str_term)
    PARENR  reduce using rule 62 (str_term)


State 237

   57 math_term: INTEGER •

    ADD        reduce using rule 57 (math_term)
    SUB        reduce using rule 57 (math_term)
    MULT       reduce using rule 57 (math_term)
    DIV        reduce using rule 57 (math_term)
    OR         reduce using rule 57 (math_term)
    AND        reduce using rule 57 (math_term)
    SMALLER    reduce using rule 57 (math_term)
    GREATER    reduce using rule 57 (math_term)
    SMALLEQ    reduce using rule 57 (math_term)
    GREATEQ    reduce using rule 57 (math_term)
    EQUALS     reduce using rule 57 (math_term)
    DIFFERENT  reduce using rule 57 (math_term)
    IN         reduce using rule 57 (math_term)
    COMMA      reduce using rule 57 (math_term)
    PARENR     reduce using rule 57 (math_term)


State 238

   58 math_term: DECIMAL •

    ADD        reduce using rule 58 (math_term)
    SUB        reduce using rule 58 (math_term)
    MULT       reduce using rule 58 (math_term)
    DIV        reduce using rule 58 (math_term)
    OR         reduce using rule 58 (math_term)
    AND        reduce using rule 58 (math_term)
    SMALLER    reduce using rule 58 (math_term)
    GREATER    reduce using rule 58 (math_term)
    SMALLEQ    reduce using rule 58 (math_term)
    GREATEQ    reduce using rule 58 (math_term)
    EQUALS     reduce using rule 58 (math_term)
    DIFFERENT  reduce using rule 58 (math_term)
    IN         reduce using rule 58 (math_term)
    COMMA      reduce using rule 58 (math_term)
    PARENR     reduce using rule 58 (math_term)


State 239

   88 negation_operation: NEG • math_op

    ID       shift, and go to state 331
    INTEGER  shift, and go to state 332
    DECIMAL  shift, and go to state 333
    PARENL   shift, and go to state 334

    math_term       go to state 335
    math_op         go to state 336
    math_op_muldiv  go to state 249


State 240

   74 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 337


State 241

   69 many_operations: ADDSET • PARENL many_operations PARENR

    PARENL  shift, and go to state 338


State 242

   70 many_operations: REMOVE • PARENL many_operations PARENR

    PARENL  shift, and go to state 339


State 243

   71 many_operations: EXISTS • PARENL many_operations PARENR

    PARENL  shift, and go to state 340


State 244

   59 math_term: PARENL • expression PARENR

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 341
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 245

   92 in_set: term • IN expression

    IN  shift, and go to state 342


State 246

   54 term: math_term •
   68 math_op_muldiv: math_term •

    ADD        reduce using rule 68 (math_op_muldiv)
    SUB        reduce using rule 68 (math_op_muldiv)
    MULT       reduce using rule 68 (math_op_muldiv)
    DIV        reduce using rule 68 (math_op_muldiv)
    OR         reduce using rule 68 (math_op_muldiv)
    AND        reduce using rule 68 (math_op_muldiv)
    SMALLER    reduce using rule 68 (math_op_muldiv)
    GREATER    reduce using rule 68 (math_op_muldiv)
    SMALLEQ    reduce using rule 68 (math_op_muldiv)
    GREATEQ    reduce using rule 68 (math_op_muldiv)
    EQUALS     reduce using rule 68 (math_op_muldiv)
    DIFFERENT  reduce using rule 68 (math_op_muldiv)
    IN         reduce using rule 54 (term)
    COMMA      reduce using rule 68 (math_op_muldiv)
    PARENR     reduce using rule 68 (math_op_muldiv)


State 247

   55 term: str_term •
   91 func_call: str_term •

    IN      reduce using rule 55 (term)
    COMMA   reduce using rule 91 (func_call)
    PARENR  reduce using rule 91 (func_call)


State 248

   63 math_op: math_op • ADD math_op_muldiv
   64        | math_op • SUB math_op_muldiv
   89 negation_operation: math_op •

    ADD  shift, and go to state 343
    SUB  shift, and go to state 344

    OR         reduce using rule 89 (negation_operation)
    AND        reduce using rule 89 (negation_operation)
    SMALLER    reduce using rule 89 (negation_operation)
    GREATER    reduce using rule 89 (negation_operation)
    SMALLEQ    reduce using rule 89 (negation_operation)
    GREATEQ    reduce using rule 89 (negation_operation)
    EQUALS     reduce using rule 89 (negation_operation)
    DIFFERENT  reduce using rule 89 (negation_operation)
    COMMA      reduce using rule 89 (negation_operation)
    PARENR     reduce using rule 89 (negation_operation)


State 249

   65 math_op: math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 345
    DIV   shift, and go to state 346

    ADD        reduce using rule 65 (math_op)
    SUB        reduce using rule 65 (math_op)
    OR         reduce using rule 65 (math_op)
    AND        reduce using rule 65 (math_op)
    SMALLER    reduce using rule 65 (math_op)
    GREATER    reduce using rule 65 (math_op)
    SMALLEQ    reduce using rule 65 (math_op)
    GREATEQ    reduce using rule 65 (math_op)
    EQUALS     reduce using rule 65 (math_op)
    DIFFERENT  reduce using rule 65 (math_op)
    COMMA      reduce using rule 65 (math_op)
    PARENR     reduce using rule 65 (math_op)


State 250

   51 expression: many_operations •

    COMMA   reduce using rule 51 (expression)
    PARENR  reduce using rule 51 (expression)


State 251

   72 many_operations: operation •

    COMMA   reduce using rule 72 (many_operations)
    PARENR  reduce using rule 72 (many_operations)


State 252

   75 operation: or_operation •
   76 or_operation: or_operation • OR and_operation

    OR  shift, and go to state 347

    COMMA   reduce using rule 75 (operation)
    PARENR  reduce using rule 75 (operation)


State 253

   77 or_operation: and_operation •
   78 and_operation: and_operation • AND equality_operation

    AND  shift, and go to state 348

    OR      reduce using rule 77 (or_operation)
    COMMA   reduce using rule 77 (or_operation)
    PARENR  reduce using rule 77 (or_operation)


State 254

   79 and_operation: equality_operation •
   80 equality_operation: equality_operation • EQUALS relational_operation
   81                   | equality_operation • DIFFERENT relational_operation

    EQUALS     shift, and go to state 349
    DIFFERENT  shift, and go to state 350

    OR      reduce using rule 79 (and_operation)
    AND     reduce using rule 79 (and_operation)
    COMMA   reduce using rule 79 (and_operation)
    PARENR  reduce using rule 79 (and_operation)


State 255

   82 equality_operation: relational_operation •
   83 relational_operation: relational_operation • SMALLER negation_operation
   84                     | relational_operation • GREATER negation_operation
   85                     | relational_operation • SMALLEQ negation_operation
   86                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 351
    GREATER  shift, and go to state 352
    SMALLEQ  shift, and go to state 353
    GREATEQ  shift, and go to state 354

    OR         reduce using rule 82 (equality_operation)
    AND        reduce using rule 82 (equality_operation)
    EQUALS     reduce using rule 82 (equality_operation)
    DIFFERENT  reduce using rule 82 (equality_operation)
    COMMA      reduce using rule 82 (equality_operation)
    PARENR     reduce using rule 82 (equality_operation)


State 256

   87 relational_operation: negation_operation •

    OR         reduce using rule 87 (relational_operation)
    AND        reduce using rule 87 (relational_operation)
    SMALLER    reduce using rule 87 (relational_operation)
    GREATER    reduce using rule 87 (relational_operation)
    SMALLEQ    reduce using rule 87 (relational_operation)
    GREATEQ    reduce using rule 87 (relational_operation)
    EQUALS     reduce using rule 87 (relational_operation)
    DIFFERENT  reduce using rule 87 (relational_operation)
    COMMA      reduce using rule 87 (relational_operation)
    PARENR     reduce using rule 87 (relational_operation)


State 257

   52 expression: func_call •

    COMMA   reduce using rule 52 (expression)
    PARENR  reduce using rule 52 (expression)


State 258

   73 operation: in_set •

    COMMA   reduce using rule 73 (operation)
    PARENR  reduce using rule 73 (operation)


State 259

   53 expression: assign_value •

    COMMA   reduce using rule 53 (expression)
    PARENR  reduce using rule 53 (expression)


State 260

   47 var_dec: TYPE ID SEMIC •

    ID       reduce using rule 47 (var_dec)
    TYPE     reduce using rule 47 (var_dec)
    STRING   reduce using rule 47 (var_dec)
    CHAR     reduce using rule 47 (var_dec)
    EMPTY    reduce using rule 47 (var_dec)
    INTEGER  reduce using rule 47 (var_dec)
    DECIMAL  reduce using rule 47 (var_dec)
    NEG      reduce using rule 47 (var_dec)
    IF       reduce using rule 47 (var_dec)
    FOR      reduce using rule 47 (var_dec)
    READ     reduce using rule 47 (var_dec)
    WRITE    reduce using rule 47 (var_dec)
    WRITELN  reduce using rule 47 (var_dec)
    RETURN   reduce using rule 47 (var_dec)
    ISTYPE   reduce using rule 47 (var_dec)
    ADDSET   reduce using rule 47 (var_dec)
    REMOVE   reduce using rule 47 (var_dec)
    EXISTS   reduce using rule 47 (var_dec)
    FORALL   reduce using rule 47 (var_dec)
    ENDFUNC  reduce using rule 47 (var_dec)
    PARENL   reduce using rule 47 (var_dec)


State 261

   56 math_term: ID •
   90 func_call: ID • PARENL args_list PARENR
   96 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 82
    PARENL  shift, and go to state 83

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    IN         reduce using rule 56 (math_term)
    PARENR     reduce using rule 56 (math_term)
    SEMIC      reduce using rule 56 (math_term)


State 262

   57 math_term: INTEGER •

    ADD        reduce using rule 57 (math_term)
    SUB        reduce using rule 57 (math_term)
    MULT       reduce using rule 57 (math_term)
    DIV        reduce using rule 57 (math_term)
    OR         reduce using rule 57 (math_term)
    AND        reduce using rule 57 (math_term)
    SMALLER    reduce using rule 57 (math_term)
    GREATER    reduce using rule 57 (math_term)
    SMALLEQ    reduce using rule 57 (math_term)
    GREATEQ    reduce using rule 57 (math_term)
    EQUALS     reduce using rule 57 (math_term)
    DIFFERENT  reduce using rule 57 (math_term)
    IN         reduce using rule 57 (math_term)
    PARENR     reduce using rule 57 (math_term)
    SEMIC      reduce using rule 57 (math_term)


State 263

   58 math_term: DECIMAL •

    ADD        reduce using rule 58 (math_term)
    SUB        reduce using rule 58 (math_term)
    MULT       reduce using rule 58 (math_term)
    DIV        reduce using rule 58 (math_term)
    OR         reduce using rule 58 (math_term)
    AND        reduce using rule 58 (math_term)
    SMALLER    reduce using rule 58 (math_term)
    GREATER    reduce using rule 58 (math_term)
    SMALLEQ    reduce using rule 58 (math_term)
    GREATEQ    reduce using rule 58 (math_term)
    EQUALS     reduce using rule 58 (math_term)
    DIFFERENT  reduce using rule 58 (math_term)
    IN         reduce using rule 58 (math_term)
    PARENR     reduce using rule 58 (math_term)
    SEMIC      reduce using rule 58 (math_term)


State 264

   88 negation_operation: NEG • math_op

    ID       shift, and go to state 355
    INTEGER  shift, and go to state 356
    DECIMAL  shift, and go to state 357
    PARENL   shift, and go to state 358

    math_term       go to state 359
    math_op         go to state 360
    math_op_muldiv  go to state 274


State 265

   74 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 361


State 266

   69 many_operations: ADDSET • PARENL many_operations PARENR

    PARENL  shift, and go to state 362


State 267

   70 many_operations: REMOVE • PARENL many_operations PARENR

    PARENL  shift, and go to state 363


State 268

   71 many_operations: EXISTS • PARENL many_operations PARENR

    PARENL  shift, and go to state 364


State 269

   59 math_term: PARENL • expression PARENR

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 365
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 270

   26 expression_statement: expression • SEMIC

    SEMIC  shift, and go to state 366


State 271

   92 in_set: term • IN expression

    IN  shift, and go to state 367


State 272

   54 term: math_term •
   68 math_op_muldiv: math_term •

    ADD        reduce using rule 68 (math_op_muldiv)
    SUB        reduce using rule 68 (math_op_muldiv)
    MULT       reduce using rule 68 (math_op_muldiv)
    DIV        reduce using rule 68 (math_op_muldiv)
    OR         reduce using rule 68 (math_op_muldiv)
    AND        reduce using rule 68 (math_op_muldiv)
    SMALLER    reduce using rule 68 (math_op_muldiv)
    GREATER    reduce using rule 68 (math_op_muldiv)
    SMALLEQ    reduce using rule 68 (math_op_muldiv)
    GREATEQ    reduce using rule 68 (math_op_muldiv)
    EQUALS     reduce using rule 68 (math_op_muldiv)
    DIFFERENT  reduce using rule 68 (math_op_muldiv)
    IN         reduce using rule 54 (term)
    PARENR     reduce using rule 68 (math_op_muldiv)
    SEMIC      reduce using rule 68 (math_op_muldiv)


State 273

   63 math_op: math_op • ADD math_op_muldiv
   64        | math_op • SUB math_op_muldiv
   89 negation_operation: math_op •

    ADD  shift, and go to state 368
    SUB  shift, and go to state 369

    OR         reduce using rule 89 (negation_operation)
    AND        reduce using rule 89 (negation_operation)
    SMALLER    reduce using rule 89 (negation_operation)
    GREATER    reduce using rule 89 (negation_operation)
    SMALLEQ    reduce using rule 89 (negation_operation)
    GREATEQ    reduce using rule 89 (negation_operation)
    EQUALS     reduce using rule 89 (negation_operation)
    DIFFERENT  reduce using rule 89 (negation_operation)
    PARENR     reduce using rule 89 (negation_operation)
    SEMIC      reduce using rule 89 (negation_operation)


State 274

   65 math_op: math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 370
    DIV   shift, and go to state 371

    ADD        reduce using rule 65 (math_op)
    SUB        reduce using rule 65 (math_op)
    OR         reduce using rule 65 (math_op)
    AND        reduce using rule 65 (math_op)
    SMALLER    reduce using rule 65 (math_op)
    GREATER    reduce using rule 65 (math_op)
    SMALLEQ    reduce using rule 65 (math_op)
    GREATEQ    reduce using rule 65 (math_op)
    EQUALS     reduce using rule 65 (math_op)
    DIFFERENT  reduce using rule 65 (math_op)
    PARENR     reduce using rule 65 (math_op)
    SEMIC      reduce using rule 65 (math_op)


State 275

   72 many_operations: operation •

    PARENR  reduce using rule 72 (many_operations)
    SEMIC   reduce using rule 72 (many_operations)


State 276

   75 operation: or_operation •
   76 or_operation: or_operation • OR and_operation

    OR  shift, and go to state 372

    PARENR  reduce using rule 75 (operation)
    SEMIC   reduce using rule 75 (operation)


State 277

   77 or_operation: and_operation •
   78 and_operation: and_operation • AND equality_operation

    AND  shift, and go to state 373

    OR      reduce using rule 77 (or_operation)
    PARENR  reduce using rule 77 (or_operation)
    SEMIC   reduce using rule 77 (or_operation)


State 278

   79 and_operation: equality_operation •
   80 equality_operation: equality_operation • EQUALS relational_operation
   81                   | equality_operation • DIFFERENT relational_operation

    EQUALS     shift, and go to state 374
    DIFFERENT  shift, and go to state 375

    OR      reduce using rule 79 (and_operation)
    AND     reduce using rule 79 (and_operation)
    PARENR  reduce using rule 79 (and_operation)
    SEMIC   reduce using rule 79 (and_operation)


State 279

   82 equality_operation: relational_operation •
   83 relational_operation: relational_operation • SMALLER negation_operation
   84                     | relational_operation • GREATER negation_operation
   85                     | relational_operation • SMALLEQ negation_operation
   86                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 376
    GREATER  shift, and go to state 377
    SMALLEQ  shift, and go to state 378
    GREATEQ  shift, and go to state 379

    OR         reduce using rule 82 (equality_operation)
    AND        reduce using rule 82 (equality_operation)
    EQUALS     reduce using rule 82 (equality_operation)
    DIFFERENT  reduce using rule 82 (equality_operation)
    PARENR     reduce using rule 82 (equality_operation)
    SEMIC      reduce using rule 82 (equality_operation)


State 280

   87 relational_operation: negation_operation •

    OR         reduce using rule 87 (relational_operation)
    AND        reduce using rule 87 (relational_operation)
    SMALLER    reduce using rule 87 (relational_operation)
    GREATER    reduce using rule 87 (relational_operation)
    SMALLEQ    reduce using rule 87 (relational_operation)
    GREATEQ    reduce using rule 87 (relational_operation)
    EQUALS     reduce using rule 87 (relational_operation)
    DIFFERENT  reduce using rule 87 (relational_operation)
    PARENR     reduce using rule 87 (relational_operation)
    SEMIC      reduce using rule 87 (relational_operation)


State 281

   73 operation: in_set •

    PARENR  reduce using rule 73 (operation)
    SEMIC   reduce using rule 73 (operation)


State 282

   56 math_term: ID •

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    IN         reduce using rule 56 (math_term)
    PARENR     reduce using rule 56 (math_term)


State 283

   61 str_term: STRING •

    IN  reduce using rule 61 (str_term)


State 284

   60 str_term: CHAR •

    IN  reduce using rule 60 (str_term)


State 285

   62 str_term: EMPTY •

    IN  reduce using rule 62 (str_term)


State 286

   56 math_term: ID •

    IN  reduce using rule 56 (math_term)


State 287

   57 math_term: INTEGER •

    IN  reduce using rule 57 (math_term)


State 288

   58 math_term: DECIMAL •

    IN  reduce using rule 58 (math_term)


State 289

   59 math_term: PARENL • expression PARENR

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 380
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 290

   59 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 381


State 291

   96 assign_value: ID ASSIGN • expression

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 382
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 292

   90 func_call: ID PARENL • args_list PARENR

    ID       shift, and go to state 233
    STRING   shift, and go to state 234
    CHAR     shift, and go to state 235
    EMPTY    shift, and go to state 236
    INTEGER  shift, and go to state 237
    DECIMAL  shift, and go to state 238
    NEG      shift, and go to state 239
    ISTYPE   shift, and go to state 240
    ADDSET   shift, and go to state 241
    REMOVE   shift, and go to state 242
    EXISTS   shift, and go to state 243
    PARENL   shift, and go to state 244

    COMMA   reduce using rule 95 (args_list)
    PARENR  reduce using rule 95 (args_list)

    expression            go to state 121
    term                  go to state 245
    math_term             go to state 246
    str_term              go to state 247
    math_op               go to state 248
    math_op_muldiv        go to state 249
    many_operations       go to state 250
    operation             go to state 251
    or_operation          go to state 252
    and_operation         go to state 253
    equality_operation    go to state 254
    relational_operation  go to state 255
    negation_operation    go to state 256
    func_call             go to state 257
    in_set                go to state 258
    args_list             go to state 383
    assign_value          go to state 259


State 293

   56 math_term: ID •

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    PARENR     reduce using rule 56 (math_term)


State 294

   57 math_term: INTEGER •

    ADD        reduce using rule 57 (math_term)
    SUB        reduce using rule 57 (math_term)
    MULT       reduce using rule 57 (math_term)
    DIV        reduce using rule 57 (math_term)
    OR         reduce using rule 57 (math_term)
    AND        reduce using rule 57 (math_term)
    SMALLER    reduce using rule 57 (math_term)
    GREATER    reduce using rule 57 (math_term)
    SMALLEQ    reduce using rule 57 (math_term)
    GREATEQ    reduce using rule 57 (math_term)
    EQUALS     reduce using rule 57 (math_term)
    DIFFERENT  reduce using rule 57 (math_term)
    PARENR     reduce using rule 57 (math_term)


State 295

   58 math_term: DECIMAL •

    ADD        reduce using rule 58 (math_term)
    SUB        reduce using rule 58 (math_term)
    MULT       reduce using rule 58 (math_term)
    DIV        reduce using rule 58 (math_term)
    OR         reduce using rule 58 (math_term)
    AND        reduce using rule 58 (math_term)
    SMALLER    reduce using rule 58 (math_term)
    GREATER    reduce using rule 58 (math_term)
    SMALLEQ    reduce using rule 58 (math_term)
    GREATEQ    reduce using rule 58 (math_term)
    EQUALS     reduce using rule 58 (math_term)
    DIFFERENT  reduce using rule 58 (math_term)
    PARENR     reduce using rule 58 (math_term)


State 296

   59 math_term: PARENL • expression PARENR

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 384
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 297

   68 math_op_muldiv: math_term •

    ADD        reduce using rule 68 (math_op_muldiv)
    SUB        reduce using rule 68 (math_op_muldiv)
    MULT       reduce using rule 68 (math_op_muldiv)
    DIV        reduce using rule 68 (math_op_muldiv)
    OR         reduce using rule 68 (math_op_muldiv)
    AND        reduce using rule 68 (math_op_muldiv)
    SMALLER    reduce using rule 68 (math_op_muldiv)
    GREATER    reduce using rule 68 (math_op_muldiv)
    SMALLEQ    reduce using rule 68 (math_op_muldiv)
    GREATEQ    reduce using rule 68 (math_op_muldiv)
    EQUALS     reduce using rule 68 (math_op_muldiv)
    DIFFERENT  reduce using rule 68 (math_op_muldiv)
    PARENR     reduce using rule 68 (math_op_muldiv)


State 298

   63 math_op: math_op • ADD math_op_muldiv
   64        | math_op • SUB math_op_muldiv
   88 negation_operation: NEG math_op •

    ADD  shift, and go to state 305
    SUB  shift, and go to state 306

    OR         reduce using rule 88 (negation_operation)
    AND        reduce using rule 88 (negation_operation)
    SMALLER    reduce using rule 88 (negation_operation)
    GREATER    reduce using rule 88 (negation_operation)
    SMALLEQ    reduce using rule 88 (negation_operation)
    GREATEQ    reduce using rule 88 (negation_operation)
    EQUALS     reduce using rule 88 (negation_operation)
    DIFFERENT  reduce using rule 88 (negation_operation)
    PARENR     reduce using rule 88 (negation_operation)


State 299

   74 operation: ISTYPE PARENL • expression PARENR

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 385
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 300

   69 many_operations: ADDSET PARENL • many_operations PARENR

    ID       shift, and go to state 282
    STRING   shift, and go to state 283
    CHAR     shift, and go to state 284
    EMPTY    shift, and go to state 285
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 133
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 386
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    in_set                go to state 216


State 301

   70 many_operations: REMOVE PARENL • many_operations PARENR

    ID       shift, and go to state 282
    STRING   shift, and go to state 283
    CHAR     shift, and go to state 284
    EMPTY    shift, and go to state 285
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 133
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 387
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    in_set                go to state 216


State 302

   71 many_operations: EXISTS PARENL • many_operations PARENR

    ID       shift, and go to state 282
    STRING   shift, and go to state 283
    CHAR     shift, and go to state 284
    EMPTY    shift, and go to state 285
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 133
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 388
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    in_set                go to state 216


State 303

   59 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 389


State 304

   92 in_set: term IN • expression

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 390
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 305

   63 math_op: math_op ADD • math_op_muldiv

    ID       shift, and go to state 293
    INTEGER  shift, and go to state 294
    DECIMAL  shift, and go to state 295
    PARENL   shift, and go to state 296

    math_term       go to state 297
    math_op_muldiv  go to state 391


State 306

   64 math_op: math_op SUB • math_op_muldiv

    ID       shift, and go to state 293
    INTEGER  shift, and go to state 294
    DECIMAL  shift, and go to state 295
    PARENL   shift, and go to state 296

    math_term       go to state 297
    math_op_muldiv  go to state 392


State 307

   67 math_op_muldiv: math_op_muldiv MULT • math_term

    ID       shift, and go to state 293
    INTEGER  shift, and go to state 294
    DECIMAL  shift, and go to state 295
    PARENL   shift, and go to state 296

    math_term  go to state 393


State 308

   66 math_op_muldiv: math_op_muldiv DIV • math_term

    ID       shift, and go to state 293
    INTEGER  shift, and go to state 294
    DECIMAL  shift, and go to state 295
    PARENL   shift, and go to state 296

    math_term  go to state 394


State 309

   76 or_operation: or_operation OR • and_operation

    ID       shift, and go to state 293
    INTEGER  shift, and go to state 294
    DECIMAL  shift, and go to state 295
    NEG      shift, and go to state 197
    PARENL   shift, and go to state 296

    math_term             go to state 297
    math_op               go to state 206
    math_op_muldiv        go to state 207
    and_operation         go to state 395
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214


State 310

   78 and_operation: and_operation AND • equality_operation

    ID       shift, and go to state 293
    INTEGER  shift, and go to state 294
    DECIMAL  shift, and go to state 295
    NEG      shift, and go to state 197
    PARENL   shift, and go to state 296

    math_term             go to state 297
    math_op               go to state 206
    math_op_muldiv        go to state 207
    equality_operation    go to state 396
    relational_operation  go to state 213
    negation_operation    go to state 214


State 311

   80 equality_operation: equality_operation EQUALS • relational_operation

    ID       shift, and go to state 293
    INTEGER  shift, and go to state 294
    DECIMAL  shift, and go to state 295
    NEG      shift, and go to state 197
    PARENL   shift, and go to state 296

    math_term             go to state 297
    math_op               go to state 206
    math_op_muldiv        go to state 207
    relational_operation  go to state 397
    negation_operation    go to state 214


State 312

   81 equality_operation: equality_operation DIFFERENT • relational_operation

    ID       shift, and go to state 293
    INTEGER  shift, and go to state 294
    DECIMAL  shift, and go to state 295
    NEG      shift, and go to state 197
    PARENL   shift, and go to state 296

    math_term             go to state 297
    math_op               go to state 206
    math_op_muldiv        go to state 207
    relational_operation  go to state 398
    negation_operation    go to state 214


State 313

   83 relational_operation: relational_operation SMALLER • negation_operation

    ID       shift, and go to state 293
    INTEGER  shift, and go to state 294
    DECIMAL  shift, and go to state 295
    NEG      shift, and go to state 197
    PARENL   shift, and go to state 296

    math_term           go to state 297
    math_op             go to state 206
    math_op_muldiv      go to state 207
    negation_operation  go to state 399


State 314

   84 relational_operation: relational_operation GREATER • negation_operation

    ID       shift, and go to state 293
    INTEGER  shift, and go to state 294
    DECIMAL  shift, and go to state 295
    NEG      shift, and go to state 197
    PARENL   shift, and go to state 296

    math_term           go to state 297
    math_op             go to state 206
    math_op_muldiv      go to state 207
    negation_operation  go to state 400


State 315

   85 relational_operation: relational_operation SMALLEQ • negation_operation

    ID       shift, and go to state 293
    INTEGER  shift, and go to state 294
    DECIMAL  shift, and go to state 295
    NEG      shift, and go to state 197
    PARENL   shift, and go to state 296

    math_term           go to state 297
    math_op             go to state 206
    math_op_muldiv      go to state 207
    negation_operation  go to state 401


State 316

   86 relational_operation: relational_operation GREATEQ • negation_operation

    ID       shift, and go to state 293
    INTEGER  shift, and go to state 294
    DECIMAL  shift, and go to state 295
    NEG      shift, and go to state 197
    PARENL   shift, and go to state 296

    math_term           go to state 297
    math_op             go to state 206
    math_op_muldiv      go to state 207
    negation_operation  go to state 402


State 317

   47 var_dec: TYPE ID • SEMIC

    SEMIC  shift, and go to state 403


State 318

   48 io_ops: READ PARENL • ID PARENR SEMIC

    ID  shift, and go to state 404


State 319

   49 io_ops: WRITE PARENL • expression PARENR SEMIC

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 405
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 320

   50 io_ops: WRITELN PARENL • expression PARENR SEMIC

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 406
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 321

   46 ret_st: RETURN expression • SEMIC

    SEMIC  shift, and go to state 407


State 322

   28 basic_ops: for_statement STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 408


State 323

   29 basic_ops: for_statement statement •

    ID       reduce using rule 29 (basic_ops)
    TYPE     reduce using rule 29 (basic_ops)
    STRING   reduce using rule 29 (basic_ops)
    CHAR     reduce using rule 29 (basic_ops)
    EMPTY    reduce using rule 29 (basic_ops)
    INTEGER  reduce using rule 29 (basic_ops)
    DECIMAL  reduce using rule 29 (basic_ops)
    NEG      reduce using rule 29 (basic_ops)
    IF       reduce using rule 29 (basic_ops)
    ELSE     reduce using rule 29 (basic_ops)
    FOR      reduce using rule 29 (basic_ops)
    READ     reduce using rule 29 (basic_ops)
    WRITE    reduce using rule 29 (basic_ops)
    WRITELN  reduce using rule 29 (basic_ops)
    RETURN   reduce using rule 29 (basic_ops)
    ISTYPE   reduce using rule 29 (basic_ops)
    ADDSET   reduce using rule 29 (basic_ops)
    REMOVE   reduce using rule 29 (basic_ops)
    EXISTS   reduce using rule 29 (basic_ops)
    FORALL   reduce using rule 29 (basic_ops)
    ENDFUNC  reduce using rule 29 (basic_ops)
    PARENL   reduce using rule 29 (basic_ops)


State 324

   31 basic_ops: forall_statement STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 409


State 325

   30 basic_ops: forall_statement statement •

    ID       reduce using rule 30 (basic_ops)
    TYPE     reduce using rule 30 (basic_ops)
    STRING   reduce using rule 30 (basic_ops)
    CHAR     reduce using rule 30 (basic_ops)
    EMPTY    reduce using rule 30 (basic_ops)
    INTEGER  reduce using rule 30 (basic_ops)
    DECIMAL  reduce using rule 30 (basic_ops)
    NEG      reduce using rule 30 (basic_ops)
    IF       reduce using rule 30 (basic_ops)
    ELSE     reduce using rule 30 (basic_ops)
    FOR      reduce using rule 30 (basic_ops)
    READ     reduce using rule 30 (basic_ops)
    WRITE    reduce using rule 30 (basic_ops)
    WRITELN  reduce using rule 30 (basic_ops)
    RETURN   reduce using rule 30 (basic_ops)
    ISTYPE   reduce using rule 30 (basic_ops)
    ADDSET   reduce using rule 30 (basic_ops)
    REMOVE   reduce using rule 30 (basic_ops)
    EXISTS   reduce using rule 30 (basic_ops)
    FORALL   reduce using rule 30 (basic_ops)
    ENDFUNC  reduce using rule 30 (basic_ops)
    PARENL   reduce using rule 30 (basic_ops)


State 326

   39 if_ops: if_statement STFUNC • statement_list ENDFUNC
   40       | if_statement STFUNC • statement_list ENDFUNC else_statement

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 410


State 327

   37 if_ops: if_statement statement •
   38       | if_statement statement • else_statement

    ELSE  shift, and go to state 411

    ID       reduce using rule 37 (if_ops)
    TYPE     reduce using rule 37 (if_ops)
    STRING   reduce using rule 37 (if_ops)
    CHAR     reduce using rule 37 (if_ops)
    EMPTY    reduce using rule 37 (if_ops)
    INTEGER  reduce using rule 37 (if_ops)
    DECIMAL  reduce using rule 37 (if_ops)
    NEG      reduce using rule 37 (if_ops)
    IF       reduce using rule 37 (if_ops)
    FOR      reduce using rule 37 (if_ops)
    READ     reduce using rule 37 (if_ops)
    WRITE    reduce using rule 37 (if_ops)
    WRITELN  reduce using rule 37 (if_ops)
    RETURN   reduce using rule 37 (if_ops)
    ISTYPE   reduce using rule 37 (if_ops)
    ADDSET   reduce using rule 37 (if_ops)
    REMOVE   reduce using rule 37 (if_ops)
    EXISTS   reduce using rule 37 (if_ops)
    FORALL   reduce using rule 37 (if_ops)
    ENDFUNC  reduce using rule 37 (if_ops)
    PARENL   reduce using rule 37 (if_ops)

    else_statement  go to state 412


State 328

   26 expression_statement: expression SEMIC •

    ID       reduce using rule 26 (expression_statement)
    TYPE     reduce using rule 26 (expression_statement)
    STRING   reduce using rule 26 (expression_statement)
    CHAR     reduce using rule 26 (expression_statement)
    EMPTY    reduce using rule 26 (expression_statement)
    INTEGER  reduce using rule 26 (expression_statement)
    DECIMAL  reduce using rule 26 (expression_statement)
    NEG      reduce using rule 26 (expression_statement)
    IF       reduce using rule 26 (expression_statement)
    ELSE     reduce using rule 26 (expression_statement)
    FOR      reduce using rule 26 (expression_statement)
    READ     reduce using rule 26 (expression_statement)
    WRITE    reduce using rule 26 (expression_statement)
    WRITELN  reduce using rule 26 (expression_statement)
    RETURN   reduce using rule 26 (expression_statement)
    ISTYPE   reduce using rule 26 (expression_statement)
    ADDSET   reduce using rule 26 (expression_statement)
    REMOVE   reduce using rule 26 (expression_statement)
    EXISTS   reduce using rule 26 (expression_statement)
    FORALL   reduce using rule 26 (expression_statement)
    ENDFUNC  reduce using rule 26 (expression_statement)
    PARENL   reduce using rule 26 (expression_statement)


State 329

   96 assign_value: ID ASSIGN • expression

    ID       shift, and go to state 233
    STRING   shift, and go to state 234
    CHAR     shift, and go to state 235
    EMPTY    shift, and go to state 236
    INTEGER  shift, and go to state 237
    DECIMAL  shift, and go to state 238
    NEG      shift, and go to state 239
    ISTYPE   shift, and go to state 240
    ADDSET   shift, and go to state 241
    REMOVE   shift, and go to state 242
    EXISTS   shift, and go to state 243
    PARENL   shift, and go to state 244

    expression            go to state 413
    term                  go to state 245
    math_term             go to state 246
    str_term              go to state 247
    math_op               go to state 248
    math_op_muldiv        go to state 249
    many_operations       go to state 250
    operation             go to state 251
    or_operation          go to state 252
    and_operation         go to state 253
    equality_operation    go to state 254
    relational_operation  go to state 255
    negation_operation    go to state 256
    func_call             go to state 257
    in_set                go to state 258
    assign_value          go to state 259


State 330

   90 func_call: ID PARENL • args_list PARENR

    ID       shift, and go to state 233
    STRING   shift, and go to state 234
    CHAR     shift, and go to state 235
    EMPTY    shift, and go to state 236
    INTEGER  shift, and go to state 237
    DECIMAL  shift, and go to state 238
    NEG      shift, and go to state 239
    ISTYPE   shift, and go to state 240
    ADDSET   shift, and go to state 241
    REMOVE   shift, and go to state 242
    EXISTS   shift, and go to state 243
    PARENL   shift, and go to state 244

    COMMA   reduce using rule 95 (args_list)
    PARENR  reduce using rule 95 (args_list)

    expression            go to state 121
    term                  go to state 245
    math_term             go to state 246
    str_term              go to state 247
    math_op               go to state 248
    math_op_muldiv        go to state 249
    many_operations       go to state 250
    operation             go to state 251
    or_operation          go to state 252
    and_operation         go to state 253
    equality_operation    go to state 254
    relational_operation  go to state 255
    negation_operation    go to state 256
    func_call             go to state 257
    in_set                go to state 258
    args_list             go to state 414
    assign_value          go to state 259


State 331

   56 math_term: ID •

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    COMMA      reduce using rule 56 (math_term)
    PARENR     reduce using rule 56 (math_term)


State 332

   57 math_term: INTEGER •

    ADD        reduce using rule 57 (math_term)
    SUB        reduce using rule 57 (math_term)
    MULT       reduce using rule 57 (math_term)
    DIV        reduce using rule 57 (math_term)
    OR         reduce using rule 57 (math_term)
    AND        reduce using rule 57 (math_term)
    SMALLER    reduce using rule 57 (math_term)
    GREATER    reduce using rule 57 (math_term)
    SMALLEQ    reduce using rule 57 (math_term)
    GREATEQ    reduce using rule 57 (math_term)
    EQUALS     reduce using rule 57 (math_term)
    DIFFERENT  reduce using rule 57 (math_term)
    COMMA      reduce using rule 57 (math_term)
    PARENR     reduce using rule 57 (math_term)


State 333

   58 math_term: DECIMAL •

    ADD        reduce using rule 58 (math_term)
    SUB        reduce using rule 58 (math_term)
    MULT       reduce using rule 58 (math_term)
    DIV        reduce using rule 58 (math_term)
    OR         reduce using rule 58 (math_term)
    AND        reduce using rule 58 (math_term)
    SMALLER    reduce using rule 58 (math_term)
    GREATER    reduce using rule 58 (math_term)
    SMALLEQ    reduce using rule 58 (math_term)
    GREATEQ    reduce using rule 58 (math_term)
    EQUALS     reduce using rule 58 (math_term)
    DIFFERENT  reduce using rule 58 (math_term)
    COMMA      reduce using rule 58 (math_term)
    PARENR     reduce using rule 58 (math_term)


State 334

   59 math_term: PARENL • expression PARENR

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 415
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 335

   68 math_op_muldiv: math_term •

    ADD        reduce using rule 68 (math_op_muldiv)
    SUB        reduce using rule 68 (math_op_muldiv)
    MULT       reduce using rule 68 (math_op_muldiv)
    DIV        reduce using rule 68 (math_op_muldiv)
    OR         reduce using rule 68 (math_op_muldiv)
    AND        reduce using rule 68 (math_op_muldiv)
    SMALLER    reduce using rule 68 (math_op_muldiv)
    GREATER    reduce using rule 68 (math_op_muldiv)
    SMALLEQ    reduce using rule 68 (math_op_muldiv)
    GREATEQ    reduce using rule 68 (math_op_muldiv)
    EQUALS     reduce using rule 68 (math_op_muldiv)
    DIFFERENT  reduce using rule 68 (math_op_muldiv)
    COMMA      reduce using rule 68 (math_op_muldiv)
    PARENR     reduce using rule 68 (math_op_muldiv)


State 336

   63 math_op: math_op • ADD math_op_muldiv
   64        | math_op • SUB math_op_muldiv
   88 negation_operation: NEG math_op •

    ADD  shift, and go to state 343
    SUB  shift, and go to state 344

    OR         reduce using rule 88 (negation_operation)
    AND        reduce using rule 88 (negation_operation)
    SMALLER    reduce using rule 88 (negation_operation)
    GREATER    reduce using rule 88 (negation_operation)
    SMALLEQ    reduce using rule 88 (negation_operation)
    GREATEQ    reduce using rule 88 (negation_operation)
    EQUALS     reduce using rule 88 (negation_operation)
    DIFFERENT  reduce using rule 88 (negation_operation)
    COMMA      reduce using rule 88 (negation_operation)
    PARENR     reduce using rule 88 (negation_operation)


State 337

   74 operation: ISTYPE PARENL • expression PARENR

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 416
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 338

   69 many_operations: ADDSET PARENL • many_operations PARENR

    ID       shift, and go to state 282
    STRING   shift, and go to state 283
    CHAR     shift, and go to state 284
    EMPTY    shift, and go to state 285
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 133
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 417
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    in_set                go to state 216


State 339

   70 many_operations: REMOVE PARENL • many_operations PARENR

    ID       shift, and go to state 282
    STRING   shift, and go to state 283
    CHAR     shift, and go to state 284
    EMPTY    shift, and go to state 285
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 133
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 418
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    in_set                go to state 216


State 340

   71 many_operations: EXISTS PARENL • many_operations PARENR

    ID       shift, and go to state 282
    STRING   shift, and go to state 283
    CHAR     shift, and go to state 284
    EMPTY    shift, and go to state 285
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 133
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 419
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    in_set                go to state 216


State 341

   59 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 420


State 342

   92 in_set: term IN • expression

    ID       shift, and go to state 233
    STRING   shift, and go to state 234
    CHAR     shift, and go to state 235
    EMPTY    shift, and go to state 236
    INTEGER  shift, and go to state 237
    DECIMAL  shift, and go to state 238
    NEG      shift, and go to state 239
    ISTYPE   shift, and go to state 240
    ADDSET   shift, and go to state 241
    REMOVE   shift, and go to state 242
    EXISTS   shift, and go to state 243
    PARENL   shift, and go to state 244

    expression            go to state 421
    term                  go to state 245
    math_term             go to state 246
    str_term              go to state 247
    math_op               go to state 248
    math_op_muldiv        go to state 249
    many_operations       go to state 250
    operation             go to state 251
    or_operation          go to state 252
    and_operation         go to state 253
    equality_operation    go to state 254
    relational_operation  go to state 255
    negation_operation    go to state 256
    func_call             go to state 257
    in_set                go to state 258
    assign_value          go to state 259


State 343

   63 math_op: math_op ADD • math_op_muldiv

    ID       shift, and go to state 331
    INTEGER  shift, and go to state 332
    DECIMAL  shift, and go to state 333
    PARENL   shift, and go to state 334

    math_term       go to state 335
    math_op_muldiv  go to state 422


State 344

   64 math_op: math_op SUB • math_op_muldiv

    ID       shift, and go to state 331
    INTEGER  shift, and go to state 332
    DECIMAL  shift, and go to state 333
    PARENL   shift, and go to state 334

    math_term       go to state 335
    math_op_muldiv  go to state 423


State 345

   67 math_op_muldiv: math_op_muldiv MULT • math_term

    ID       shift, and go to state 331
    INTEGER  shift, and go to state 332
    DECIMAL  shift, and go to state 333
    PARENL   shift, and go to state 334

    math_term  go to state 424


State 346

   66 math_op_muldiv: math_op_muldiv DIV • math_term

    ID       shift, and go to state 331
    INTEGER  shift, and go to state 332
    DECIMAL  shift, and go to state 333
    PARENL   shift, and go to state 334

    math_term  go to state 425


State 347

   76 or_operation: or_operation OR • and_operation

    ID       shift, and go to state 331
    INTEGER  shift, and go to state 332
    DECIMAL  shift, and go to state 333
    NEG      shift, and go to state 239
    PARENL   shift, and go to state 334

    math_term             go to state 335
    math_op               go to state 248
    math_op_muldiv        go to state 249
    and_operation         go to state 426
    equality_operation    go to state 254
    relational_operation  go to state 255
    negation_operation    go to state 256


State 348

   78 and_operation: and_operation AND • equality_operation

    ID       shift, and go to state 331
    INTEGER  shift, and go to state 332
    DECIMAL  shift, and go to state 333
    NEG      shift, and go to state 239
    PARENL   shift, and go to state 334

    math_term             go to state 335
    math_op               go to state 248
    math_op_muldiv        go to state 249
    equality_operation    go to state 427
    relational_operation  go to state 255
    negation_operation    go to state 256


State 349

   80 equality_operation: equality_operation EQUALS • relational_operation

    ID       shift, and go to state 331
    INTEGER  shift, and go to state 332
    DECIMAL  shift, and go to state 333
    NEG      shift, and go to state 239
    PARENL   shift, and go to state 334

    math_term             go to state 335
    math_op               go to state 248
    math_op_muldiv        go to state 249
    relational_operation  go to state 428
    negation_operation    go to state 256


State 350

   81 equality_operation: equality_operation DIFFERENT • relational_operation

    ID       shift, and go to state 331
    INTEGER  shift, and go to state 332
    DECIMAL  shift, and go to state 333
    NEG      shift, and go to state 239
    PARENL   shift, and go to state 334

    math_term             go to state 335
    math_op               go to state 248
    math_op_muldiv        go to state 249
    relational_operation  go to state 429
    negation_operation    go to state 256


State 351

   83 relational_operation: relational_operation SMALLER • negation_operation

    ID       shift, and go to state 331
    INTEGER  shift, and go to state 332
    DECIMAL  shift, and go to state 333
    NEG      shift, and go to state 239
    PARENL   shift, and go to state 334

    math_term           go to state 335
    math_op             go to state 248
    math_op_muldiv      go to state 249
    negation_operation  go to state 430


State 352

   84 relational_operation: relational_operation GREATER • negation_operation

    ID       shift, and go to state 331
    INTEGER  shift, and go to state 332
    DECIMAL  shift, and go to state 333
    NEG      shift, and go to state 239
    PARENL   shift, and go to state 334

    math_term           go to state 335
    math_op             go to state 248
    math_op_muldiv      go to state 249
    negation_operation  go to state 431


State 353

   85 relational_operation: relational_operation SMALLEQ • negation_operation

    ID       shift, and go to state 331
    INTEGER  shift, and go to state 332
    DECIMAL  shift, and go to state 333
    NEG      shift, and go to state 239
    PARENL   shift, and go to state 334

    math_term           go to state 335
    math_op             go to state 248
    math_op_muldiv      go to state 249
    negation_operation  go to state 432


State 354

   86 relational_operation: relational_operation GREATEQ • negation_operation

    ID       shift, and go to state 331
    INTEGER  shift, and go to state 332
    DECIMAL  shift, and go to state 333
    NEG      shift, and go to state 239
    PARENL   shift, and go to state 334

    math_term           go to state 335
    math_op             go to state 248
    math_op_muldiv      go to state 249
    negation_operation  go to state 433


State 355

   56 math_term: ID •

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    PARENR     reduce using rule 56 (math_term)
    SEMIC      reduce using rule 56 (math_term)


State 356

   57 math_term: INTEGER •

    ADD        reduce using rule 57 (math_term)
    SUB        reduce using rule 57 (math_term)
    MULT       reduce using rule 57 (math_term)
    DIV        reduce using rule 57 (math_term)
    OR         reduce using rule 57 (math_term)
    AND        reduce using rule 57 (math_term)
    SMALLER    reduce using rule 57 (math_term)
    GREATER    reduce using rule 57 (math_term)
    SMALLEQ    reduce using rule 57 (math_term)
    GREATEQ    reduce using rule 57 (math_term)
    EQUALS     reduce using rule 57 (math_term)
    DIFFERENT  reduce using rule 57 (math_term)
    PARENR     reduce using rule 57 (math_term)
    SEMIC      reduce using rule 57 (math_term)


State 357

   58 math_term: DECIMAL •

    ADD        reduce using rule 58 (math_term)
    SUB        reduce using rule 58 (math_term)
    MULT       reduce using rule 58 (math_term)
    DIV        reduce using rule 58 (math_term)
    OR         reduce using rule 58 (math_term)
    AND        reduce using rule 58 (math_term)
    SMALLER    reduce using rule 58 (math_term)
    GREATER    reduce using rule 58 (math_term)
    SMALLEQ    reduce using rule 58 (math_term)
    GREATEQ    reduce using rule 58 (math_term)
    EQUALS     reduce using rule 58 (math_term)
    DIFFERENT  reduce using rule 58 (math_term)
    PARENR     reduce using rule 58 (math_term)
    SEMIC      reduce using rule 58 (math_term)


State 358

   59 math_term: PARENL • expression PARENR

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 434
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 359

   68 math_op_muldiv: math_term •

    ADD        reduce using rule 68 (math_op_muldiv)
    SUB        reduce using rule 68 (math_op_muldiv)
    MULT       reduce using rule 68 (math_op_muldiv)
    DIV        reduce using rule 68 (math_op_muldiv)
    OR         reduce using rule 68 (math_op_muldiv)
    AND        reduce using rule 68 (math_op_muldiv)
    SMALLER    reduce using rule 68 (math_op_muldiv)
    GREATER    reduce using rule 68 (math_op_muldiv)
    SMALLEQ    reduce using rule 68 (math_op_muldiv)
    GREATEQ    reduce using rule 68 (math_op_muldiv)
    EQUALS     reduce using rule 68 (math_op_muldiv)
    DIFFERENT  reduce using rule 68 (math_op_muldiv)
    PARENR     reduce using rule 68 (math_op_muldiv)
    SEMIC      reduce using rule 68 (math_op_muldiv)


State 360

   63 math_op: math_op • ADD math_op_muldiv
   64        | math_op • SUB math_op_muldiv
   88 negation_operation: NEG math_op •

    ADD  shift, and go to state 368
    SUB  shift, and go to state 369

    OR         reduce using rule 88 (negation_operation)
    AND        reduce using rule 88 (negation_operation)
    SMALLER    reduce using rule 88 (negation_operation)
    GREATER    reduce using rule 88 (negation_operation)
    SMALLEQ    reduce using rule 88 (negation_operation)
    GREATEQ    reduce using rule 88 (negation_operation)
    EQUALS     reduce using rule 88 (negation_operation)
    DIFFERENT  reduce using rule 88 (negation_operation)
    PARENR     reduce using rule 88 (negation_operation)
    SEMIC      reduce using rule 88 (negation_operation)


State 361

   74 operation: ISTYPE PARENL • expression PARENR

    ID       shift, and go to state 191
    STRING   shift, and go to state 192
    CHAR     shift, and go to state 193
    EMPTY    shift, and go to state 194
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    expression            go to state 435
    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 205
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 208
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    func_call             go to state 215
    in_set                go to state 216
    assign_value          go to state 217


State 362

   69 many_operations: ADDSET PARENL • many_operations PARENR

    ID       shift, and go to state 282
    STRING   shift, and go to state 283
    CHAR     shift, and go to state 284
    EMPTY    shift, and go to state 285
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 133
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 436
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    in_set                go to state 216


State 363

   70 many_operations: REMOVE PARENL • many_operations PARENR

    ID       shift, and go to state 282
    STRING   shift, and go to state 283
    CHAR     shift, and go to state 284
    EMPTY    shift, and go to state 285
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 133
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 437
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    in_set                go to state 216


State 364

   71 many_operations: EXISTS PARENL • many_operations PARENR

    ID       shift, and go to state 282
    STRING   shift, and go to state 283
    CHAR     shift, and go to state 284
    EMPTY    shift, and go to state 285
    INTEGER  shift, and go to state 195
    DECIMAL  shift, and go to state 196
    NEG      shift, and go to state 197
    ISTYPE   shift, and go to state 198
    ADDSET   shift, and go to state 199
    REMOVE   shift, and go to state 200
    EXISTS   shift, and go to state 201
    PARENL   shift, and go to state 202

    term                  go to state 203
    math_term             go to state 204
    str_term              go to state 133
    math_op               go to state 206
    math_op_muldiv        go to state 207
    many_operations       go to state 438
    operation             go to state 209
    or_operation          go to state 210
    and_operation         go to state 211
    equality_operation    go to state 212
    relational_operation  go to state 213
    negation_operation    go to state 214
    in_set                go to state 216


State 365

   59 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 439


State 366

   26 expression_statement: expression SEMIC •

    ID       reduce using rule 26 (expression_statement)
    STRING   reduce using rule 26 (expression_statement)
    CHAR     reduce using rule 26 (expression_statement)
    EMPTY    reduce using rule 26 (expression_statement)
    INTEGER  reduce using rule 26 (expression_statement)
    DECIMAL  reduce using rule 26 (expression_statement)
    NEG      reduce using rule 26 (expression_statement)
    ISTYPE   reduce using rule 26 (expression_statement)
    ADDSET   reduce using rule 26 (expression_statement)
    REMOVE   reduce using rule 26 (expression_statement)
    EXISTS   reduce using rule 26 (expression_statement)
    PARENL   reduce using rule 26 (expression_statement)


State 367

   92 in_set: term IN • expression

    ID       shift, and go to state 440
    STRING   shift, and go to state 441
    CHAR     shift, and go to state 442
    EMPTY    shift, and go to state 443
    INTEGER  shift, and go to state 262
    DECIMAL  shift, and go to state 263
    NEG      shift, and go to state 264
    ISTYPE   shift, and go to state 265
    ADDSET   shift, and go to state 266
    REMOVE   shift, and go to state 267
    EXISTS   shift, and go to state 268
    PARENL   shift, and go to state 269

    expression            go to state 444
    term                  go to state 271
    math_term             go to state 272
    str_term              go to state 445
    math_op               go to state 273
    math_op_muldiv        go to state 274
    many_operations       go to state 446
    operation             go to state 275
    or_operation          go to state 276
    and_operation         go to state 277
    equality_operation    go to state 278
    relational_operation  go to state 279
    negation_operation    go to state 280
    func_call             go to state 447
    in_set                go to state 281
    assign_value          go to state 448


State 368

   63 math_op: math_op ADD • math_op_muldiv

    ID       shift, and go to state 355
    INTEGER  shift, and go to state 356
    DECIMAL  shift, and go to state 357
    PARENL   shift, and go to state 358

    math_term       go to state 359
    math_op_muldiv  go to state 449


State 369

   64 math_op: math_op SUB • math_op_muldiv

    ID       shift, and go to state 355
    INTEGER  shift, and go to state 356
    DECIMAL  shift, and go to state 357
    PARENL   shift, and go to state 358

    math_term       go to state 359
    math_op_muldiv  go to state 450


State 370

   67 math_op_muldiv: math_op_muldiv MULT • math_term

    ID       shift, and go to state 355
    INTEGER  shift, and go to state 356
    DECIMAL  shift, and go to state 357
    PARENL   shift, and go to state 358

    math_term  go to state 451


State 371

   66 math_op_muldiv: math_op_muldiv DIV • math_term

    ID       shift, and go to state 355
    INTEGER  shift, and go to state 356
    DECIMAL  shift, and go to state 357
    PARENL   shift, and go to state 358

    math_term  go to state 452


State 372

   76 or_operation: or_operation OR • and_operation

    ID       shift, and go to state 355
    INTEGER  shift, and go to state 356
    DECIMAL  shift, and go to state 357
    NEG      shift, and go to state 264
    PARENL   shift, and go to state 358

    math_term             go to state 359
    math_op               go to state 273
    math_op_muldiv        go to state 274
    and_operation         go to state 453
    equality_operation    go to state 278
    relational_operation  go to state 279
    negation_operation    go to state 280


State 373

   78 and_operation: and_operation AND • equality_operation

    ID       shift, and go to state 355
    INTEGER  shift, and go to state 356
    DECIMAL  shift, and go to state 357
    NEG      shift, and go to state 264
    PARENL   shift, and go to state 358

    math_term             go to state 359
    math_op               go to state 273
    math_op_muldiv        go to state 274
    equality_operation    go to state 454
    relational_operation  go to state 279
    negation_operation    go to state 280


State 374

   80 equality_operation: equality_operation EQUALS • relational_operation

    ID       shift, and go to state 355
    INTEGER  shift, and go to state 356
    DECIMAL  shift, and go to state 357
    NEG      shift, and go to state 264
    PARENL   shift, and go to state 358

    math_term             go to state 359
    math_op               go to state 273
    math_op_muldiv        go to state 274
    relational_operation  go to state 455
    negation_operation    go to state 280


State 375

   81 equality_operation: equality_operation DIFFERENT • relational_operation

    ID       shift, and go to state 355
    INTEGER  shift, and go to state 356
    DECIMAL  shift, and go to state 357
    NEG      shift, and go to state 264
    PARENL   shift, and go to state 358

    math_term             go to state 359
    math_op               go to state 273
    math_op_muldiv        go to state 274
    relational_operation  go to state 456
    negation_operation    go to state 280


State 376

   83 relational_operation: relational_operation SMALLER • negation_operation

    ID       shift, and go to state 355
    INTEGER  shift, and go to state 356
    DECIMAL  shift, and go to state 357
    NEG      shift, and go to state 264
    PARENL   shift, and go to state 358

    math_term           go to state 359
    math_op             go to state 273
    math_op_muldiv      go to state 274
    negation_operation  go to state 457


State 377

   84 relational_operation: relational_operation GREATER • negation_operation

    ID       shift, and go to state 355
    INTEGER  shift, and go to state 356
    DECIMAL  shift, and go to state 357
    NEG      shift, and go to state 264
    PARENL   shift, and go to state 358

    math_term           go to state 359
    math_op             go to state 273
    math_op_muldiv      go to state 274
    negation_operation  go to state 458


State 378

   85 relational_operation: relational_operation SMALLEQ • negation_operation

    ID       shift, and go to state 355
    INTEGER  shift, and go to state 356
    DECIMAL  shift, and go to state 357
    NEG      shift, and go to state 264
    PARENL   shift, and go to state 358

    math_term           go to state 359
    math_op             go to state 273
    math_op_muldiv      go to state 274
    negation_operation  go to state 459


State 379

   86 relational_operation: relational_operation GREATEQ • negation_operation

    ID       shift, and go to state 355
    INTEGER  shift, and go to state 356
    DECIMAL  shift, and go to state 357
    NEG      shift, and go to state 264
    PARENL   shift, and go to state 358

    math_term           go to state 359
    math_op             go to state 273
    math_op_muldiv      go to state 274
    negation_operation  go to state 460


State 380

   59 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 461


State 381

   59 math_term: PARENL expression PARENR •

    ADD        reduce using rule 59 (math_term)
    SUB        reduce using rule 59 (math_term)
    MULT       reduce using rule 59 (math_term)
    DIV        reduce using rule 59 (math_term)
    OR         reduce using rule 59 (math_term)
    AND        reduce using rule 59 (math_term)
    SMALLER    reduce using rule 59 (math_term)
    GREATER    reduce using rule 59 (math_term)
    SMALLEQ    reduce using rule 59 (math_term)
    GREATEQ    reduce using rule 59 (math_term)
    EQUALS     reduce using rule 59 (math_term)
    DIFFERENT  reduce using rule 59 (math_term)
    SEMIC      reduce using rule 59 (math_term)


State 382

   96 assign_value: ID ASSIGN expression •

    PARENR  reduce using rule 96 (assign_value)


State 383

   90 func_call: ID PARENL args_list • PARENR
   93 args_list: args_list • COMMA expression

    COMMA   shift, and go to state 158
    PARENR  shift, and go to state 462


State 384

   59 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 463


State 385

   74 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 464


State 386

   69 many_operations: ADDSET PARENL many_operations • PARENR

    PARENR  shift, and go to state 465


State 387

   70 many_operations: REMOVE PARENL many_operations • PARENR

    PARENR  shift, and go to state 466


State 388

   71 many_operations: EXISTS PARENL many_operations • PARENR

    PARENR  shift, and go to state 467


State 389

   59 math_term: PARENL expression PARENR •

    ADD        reduce using rule 59 (math_term)
    SUB        reduce using rule 59 (math_term)
    MULT       reduce using rule 59 (math_term)
    DIV        reduce using rule 59 (math_term)
    OR         reduce using rule 59 (math_term)
    AND        reduce using rule 59 (math_term)
    SMALLER    reduce using rule 59 (math_term)
    GREATER    reduce using rule 59 (math_term)
    SMALLEQ    reduce using rule 59 (math_term)
    GREATEQ    reduce using rule 59 (math_term)
    EQUALS     reduce using rule 59 (math_term)
    DIFFERENT  reduce using rule 59 (math_term)
    IN         reduce using rule 59 (math_term)
    PARENR     reduce using rule 59 (math_term)


State 390

   92 in_set: term IN expression •

    PARENR  reduce using rule 92 (in_set)


State 391

   63 math_op: math_op ADD math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 307
    DIV   shift, and go to state 308

    ADD        reduce using rule 63 (math_op)
    SUB        reduce using rule 63 (math_op)
    OR         reduce using rule 63 (math_op)
    AND        reduce using rule 63 (math_op)
    SMALLER    reduce using rule 63 (math_op)
    GREATER    reduce using rule 63 (math_op)
    SMALLEQ    reduce using rule 63 (math_op)
    GREATEQ    reduce using rule 63 (math_op)
    EQUALS     reduce using rule 63 (math_op)
    DIFFERENT  reduce using rule 63 (math_op)
    PARENR     reduce using rule 63 (math_op)


State 392

   64 math_op: math_op SUB math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 307
    DIV   shift, and go to state 308

    ADD        reduce using rule 64 (math_op)
    SUB        reduce using rule 64 (math_op)
    OR         reduce using rule 64 (math_op)
    AND        reduce using rule 64 (math_op)
    SMALLER    reduce using rule 64 (math_op)
    GREATER    reduce using rule 64 (math_op)
    SMALLEQ    reduce using rule 64 (math_op)
    GREATEQ    reduce using rule 64 (math_op)
    EQUALS     reduce using rule 64 (math_op)
    DIFFERENT  reduce using rule 64 (math_op)
    PARENR     reduce using rule 64 (math_op)


State 393

   67 math_op_muldiv: math_op_muldiv MULT math_term •

    ADD        reduce using rule 67 (math_op_muldiv)
    SUB        reduce using rule 67 (math_op_muldiv)
    MULT       reduce using rule 67 (math_op_muldiv)
    DIV        reduce using rule 67 (math_op_muldiv)
    OR         reduce using rule 67 (math_op_muldiv)
    AND        reduce using rule 67 (math_op_muldiv)
    SMALLER    reduce using rule 67 (math_op_muldiv)
    GREATER    reduce using rule 67 (math_op_muldiv)
    SMALLEQ    reduce using rule 67 (math_op_muldiv)
    GREATEQ    reduce using rule 67 (math_op_muldiv)
    EQUALS     reduce using rule 67 (math_op_muldiv)
    DIFFERENT  reduce using rule 67 (math_op_muldiv)
    PARENR     reduce using rule 67 (math_op_muldiv)


State 394

   66 math_op_muldiv: math_op_muldiv DIV math_term •

    ADD        reduce using rule 66 (math_op_muldiv)
    SUB        reduce using rule 66 (math_op_muldiv)
    MULT       reduce using rule 66 (math_op_muldiv)
    DIV        reduce using rule 66 (math_op_muldiv)
    OR         reduce using rule 66 (math_op_muldiv)
    AND        reduce using rule 66 (math_op_muldiv)
    SMALLER    reduce using rule 66 (math_op_muldiv)
    GREATER    reduce using rule 66 (math_op_muldiv)
    SMALLEQ    reduce using rule 66 (math_op_muldiv)
    GREATEQ    reduce using rule 66 (math_op_muldiv)
    EQUALS     reduce using rule 66 (math_op_muldiv)
    DIFFERENT  reduce using rule 66 (math_op_muldiv)
    PARENR     reduce using rule 66 (math_op_muldiv)


State 395

   76 or_operation: or_operation OR and_operation •
   78 and_operation: and_operation • AND equality_operation

    AND  shift, and go to state 310

    OR      reduce using rule 76 (or_operation)
    PARENR  reduce using rule 76 (or_operation)


State 396

   78 and_operation: and_operation AND equality_operation •
   80 equality_operation: equality_operation • EQUALS relational_operation
   81                   | equality_operation • DIFFERENT relational_operation

    EQUALS     shift, and go to state 311
    DIFFERENT  shift, and go to state 312

    OR      reduce using rule 78 (and_operation)
    AND     reduce using rule 78 (and_operation)
    PARENR  reduce using rule 78 (and_operation)


State 397

   80 equality_operation: equality_operation EQUALS relational_operation •
   83 relational_operation: relational_operation • SMALLER negation_operation
   84                     | relational_operation • GREATER negation_operation
   85                     | relational_operation • SMALLEQ negation_operation
   86                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 313
    GREATER  shift, and go to state 314
    SMALLEQ  shift, and go to state 315
    GREATEQ  shift, and go to state 316

    OR         reduce using rule 80 (equality_operation)
    AND        reduce using rule 80 (equality_operation)
    EQUALS     reduce using rule 80 (equality_operation)
    DIFFERENT  reduce using rule 80 (equality_operation)
    PARENR     reduce using rule 80 (equality_operation)


State 398

   81 equality_operation: equality_operation DIFFERENT relational_operation •
   83 relational_operation: relational_operation • SMALLER negation_operation
   84                     | relational_operation • GREATER negation_operation
   85                     | relational_operation • SMALLEQ negation_operation
   86                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 313
    GREATER  shift, and go to state 314
    SMALLEQ  shift, and go to state 315
    GREATEQ  shift, and go to state 316

    OR         reduce using rule 81 (equality_operation)
    AND        reduce using rule 81 (equality_operation)
    EQUALS     reduce using rule 81 (equality_operation)
    DIFFERENT  reduce using rule 81 (equality_operation)
    PARENR     reduce using rule 81 (equality_operation)


State 399

   83 relational_operation: relational_operation SMALLER negation_operation •

    OR         reduce using rule 83 (relational_operation)
    AND        reduce using rule 83 (relational_operation)
    SMALLER    reduce using rule 83 (relational_operation)
    GREATER    reduce using rule 83 (relational_operation)
    SMALLEQ    reduce using rule 83 (relational_operation)
    GREATEQ    reduce using rule 83 (relational_operation)
    EQUALS     reduce using rule 83 (relational_operation)
    DIFFERENT  reduce using rule 83 (relational_operation)
    PARENR     reduce using rule 83 (relational_operation)


State 400

   84 relational_operation: relational_operation GREATER negation_operation •

    OR         reduce using rule 84 (relational_operation)
    AND        reduce using rule 84 (relational_operation)
    SMALLER    reduce using rule 84 (relational_operation)
    GREATER    reduce using rule 84 (relational_operation)
    SMALLEQ    reduce using rule 84 (relational_operation)
    GREATEQ    reduce using rule 84 (relational_operation)
    EQUALS     reduce using rule 84 (relational_operation)
    DIFFERENT  reduce using rule 84 (relational_operation)
    PARENR     reduce using rule 84 (relational_operation)


State 401

   85 relational_operation: relational_operation SMALLEQ negation_operation •

    OR         reduce using rule 85 (relational_operation)
    AND        reduce using rule 85 (relational_operation)
    SMALLER    reduce using rule 85 (relational_operation)
    GREATER    reduce using rule 85 (relational_operation)
    SMALLEQ    reduce using rule 85 (relational_operation)
    GREATEQ    reduce using rule 85 (relational_operation)
    EQUALS     reduce using rule 85 (relational_operation)
    DIFFERENT  reduce using rule 85 (relational_operation)
    PARENR     reduce using rule 85 (relational_operation)


State 402

   86 relational_operation: relational_operation GREATEQ negation_operation •

    OR         reduce using rule 86 (relational_operation)
    AND        reduce using rule 86 (relational_operation)
    SMALLER    reduce using rule 86 (relational_operation)
    GREATER    reduce using rule 86 (relational_operation)
    SMALLEQ    reduce using rule 86 (relational_operation)
    GREATEQ    reduce using rule 86 (relational_operation)
    EQUALS     reduce using rule 86 (relational_operation)
    DIFFERENT  reduce using rule 86 (relational_operation)
    PARENR     reduce using rule 86 (relational_operation)


State 403

   47 var_dec: TYPE ID SEMIC •

    ID       reduce using rule 47 (var_dec)
    TYPE     reduce using rule 47 (var_dec)
    STRING   reduce using rule 47 (var_dec)
    CHAR     reduce using rule 47 (var_dec)
    EMPTY    reduce using rule 47 (var_dec)
    INTEGER  reduce using rule 47 (var_dec)
    DECIMAL  reduce using rule 47 (var_dec)
    NEG      reduce using rule 47 (var_dec)
    IF       reduce using rule 47 (var_dec)
    ELSE     reduce using rule 47 (var_dec)
    FOR      reduce using rule 47 (var_dec)
    READ     reduce using rule 47 (var_dec)
    WRITE    reduce using rule 47 (var_dec)
    WRITELN  reduce using rule 47 (var_dec)
    RETURN   reduce using rule 47 (var_dec)
    ISTYPE   reduce using rule 47 (var_dec)
    ADDSET   reduce using rule 47 (var_dec)
    REMOVE   reduce using rule 47 (var_dec)
    EXISTS   reduce using rule 47 (var_dec)
    FORALL   reduce using rule 47 (var_dec)
    ENDFUNC  reduce using rule 47 (var_dec)
    PARENL   reduce using rule 47 (var_dec)


State 404

   48 io_ops: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 468


State 405

   49 io_ops: WRITE PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 469


State 406

   50 io_ops: WRITELN PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 470


State 407

   46 ret_st: RETURN expression SEMIC •

    ID       reduce using rule 46 (ret_st)
    TYPE     reduce using rule 46 (ret_st)
    STRING   reduce using rule 46 (ret_st)
    CHAR     reduce using rule 46 (ret_st)
    EMPTY    reduce using rule 46 (ret_st)
    INTEGER  reduce using rule 46 (ret_st)
    DECIMAL  reduce using rule 46 (ret_st)
    NEG      reduce using rule 46 (ret_st)
    IF       reduce using rule 46 (ret_st)
    ELSE     reduce using rule 46 (ret_st)
    FOR      reduce using rule 46 (ret_st)
    READ     reduce using rule 46 (ret_st)
    WRITE    reduce using rule 46 (ret_st)
    WRITELN  reduce using rule 46 (ret_st)
    RETURN   reduce using rule 46 (ret_st)
    ISTYPE   reduce using rule 46 (ret_st)
    ADDSET   reduce using rule 46 (ret_st)
    REMOVE   reduce using rule 46 (ret_st)
    EXISTS   reduce using rule 46 (ret_st)
    FORALL   reduce using rule 46 (ret_st)
    ENDFUNC  reduce using rule 46 (ret_st)
    PARENL   reduce using rule 46 (ret_st)


State 408

   18 statement_list: statement_list • statement
   28 basic_ops: for_statement STFUNC statement_list • ENDFUNC

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 471
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    for_statement         go to state 58
    forall_statement      go to state 59
    if_ops                go to state 60
    if_statement          go to state 61
    ret_st                go to state 62
    var_dec               go to state 63
    io_ops                go to state 64
    expression            go to state 65
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 409

   18 statement_list: statement_list • statement
   31 basic_ops: forall_statement STFUNC statement_list • ENDFUNC

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 472
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    for_statement         go to state 58
    forall_statement      go to state 59
    if_ops                go to state 60
    if_statement          go to state 61
    ret_st                go to state 62
    var_dec               go to state 63
    io_ops                go to state 64
    expression            go to state 65
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 410

   18 statement_list: statement_list • statement
   39 if_ops: if_statement STFUNC statement_list • ENDFUNC
   40       | if_statement STFUNC statement_list • ENDFUNC else_statement

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 473
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    for_statement         go to state 58
    forall_statement      go to state 59
    if_ops                go to state 60
    if_statement          go to state 61
    ret_st                go to state 62
    var_dec               go to state 63
    io_ops                go to state 64
    expression            go to state 65
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 411

   43 else_statement: ELSE • $@5 statement
   45               | ELSE • $@6 STFUNC statement_list ENDFUNC

    ID       reduce using rule 42 ($@5)
    TYPE     reduce using rule 42 ($@5)
    STRING   reduce using rule 42 ($@5)
    CHAR     reduce using rule 42 ($@5)
    EMPTY    reduce using rule 42 ($@5)
    INTEGER  reduce using rule 42 ($@5)
    DECIMAL  reduce using rule 42 ($@5)
    NEG      reduce using rule 42 ($@5)
    IF       reduce using rule 42 ($@5)
    FOR      reduce using rule 42 ($@5)
    READ     reduce using rule 42 ($@5)
    WRITE    reduce using rule 42 ($@5)
    WRITELN  reduce using rule 42 ($@5)
    RETURN   reduce using rule 42 ($@5)
    ISTYPE   reduce using rule 42 ($@5)
    ADDSET   reduce using rule 42 ($@5)
    REMOVE   reduce using rule 42 ($@5)
    EXISTS   reduce using rule 42 ($@5)
    FORALL   reduce using rule 42 ($@5)
    STFUNC   reduce using rule 44 ($@6)
    PARENL   reduce using rule 42 ($@5)

    $@5  go to state 474
    $@6  go to state 475


State 412

   38 if_ops: if_statement statement else_statement •

    ID       reduce using rule 38 (if_ops)
    TYPE     reduce using rule 38 (if_ops)
    STRING   reduce using rule 38 (if_ops)
    CHAR     reduce using rule 38 (if_ops)
    EMPTY    reduce using rule 38 (if_ops)
    INTEGER  reduce using rule 38 (if_ops)
    DECIMAL  reduce using rule 38 (if_ops)
    NEG      reduce using rule 38 (if_ops)
    IF       reduce using rule 38 (if_ops)
    ELSE     reduce using rule 38 (if_ops)
    FOR      reduce using rule 38 (if_ops)
    READ     reduce using rule 38 (if_ops)
    WRITE    reduce using rule 38 (if_ops)
    WRITELN  reduce using rule 38 (if_ops)
    RETURN   reduce using rule 38 (if_ops)
    ISTYPE   reduce using rule 38 (if_ops)
    ADDSET   reduce using rule 38 (if_ops)
    REMOVE   reduce using rule 38 (if_ops)
    EXISTS   reduce using rule 38 (if_ops)
    FORALL   reduce using rule 38 (if_ops)
    ENDFUNC  reduce using rule 38 (if_ops)
    PARENL   reduce using rule 38 (if_ops)


State 413

   96 assign_value: ID ASSIGN expression •

    COMMA   reduce using rule 96 (assign_value)
    PARENR  reduce using rule 96 (assign_value)


State 414

   90 func_call: ID PARENL args_list • PARENR
   93 args_list: args_list • COMMA expression

    COMMA   shift, and go to state 158
    PARENR  shift, and go to state 476


State 415

   59 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 477


State 416

   74 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 478


State 417

   69 many_operations: ADDSET PARENL many_operations • PARENR

    PARENR  shift, and go to state 479


State 418

   70 many_operations: REMOVE PARENL many_operations • PARENR

    PARENR  shift, and go to state 480


State 419

   71 many_operations: EXISTS PARENL many_operations • PARENR

    PARENR  shift, and go to state 481


State 420

   59 math_term: PARENL expression PARENR •

    ADD        reduce using rule 59 (math_term)
    SUB        reduce using rule 59 (math_term)
    MULT       reduce using rule 59 (math_term)
    DIV        reduce using rule 59 (math_term)
    OR         reduce using rule 59 (math_term)
    AND        reduce using rule 59 (math_term)
    SMALLER    reduce using rule 59 (math_term)
    GREATER    reduce using rule 59 (math_term)
    SMALLEQ    reduce using rule 59 (math_term)
    GREATEQ    reduce using rule 59 (math_term)
    EQUALS     reduce using rule 59 (math_term)
    DIFFERENT  reduce using rule 59 (math_term)
    IN         reduce using rule 59 (math_term)
    COMMA      reduce using rule 59 (math_term)
    PARENR     reduce using rule 59 (math_term)


State 421

   92 in_set: term IN expression •

    COMMA   reduce using rule 92 (in_set)
    PARENR  reduce using rule 92 (in_set)


State 422

   63 math_op: math_op ADD math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 345
    DIV   shift, and go to state 346

    ADD        reduce using rule 63 (math_op)
    SUB        reduce using rule 63 (math_op)
    OR         reduce using rule 63 (math_op)
    AND        reduce using rule 63 (math_op)
    SMALLER    reduce using rule 63 (math_op)
    GREATER    reduce using rule 63 (math_op)
    SMALLEQ    reduce using rule 63 (math_op)
    GREATEQ    reduce using rule 63 (math_op)
    EQUALS     reduce using rule 63 (math_op)
    DIFFERENT  reduce using rule 63 (math_op)
    COMMA      reduce using rule 63 (math_op)
    PARENR     reduce using rule 63 (math_op)


State 423

   64 math_op: math_op SUB math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 345
    DIV   shift, and go to state 346

    ADD        reduce using rule 64 (math_op)
    SUB        reduce using rule 64 (math_op)
    OR         reduce using rule 64 (math_op)
    AND        reduce using rule 64 (math_op)
    SMALLER    reduce using rule 64 (math_op)
    GREATER    reduce using rule 64 (math_op)
    SMALLEQ    reduce using rule 64 (math_op)
    GREATEQ    reduce using rule 64 (math_op)
    EQUALS     reduce using rule 64 (math_op)
    DIFFERENT  reduce using rule 64 (math_op)
    COMMA      reduce using rule 64 (math_op)
    PARENR     reduce using rule 64 (math_op)


State 424

   67 math_op_muldiv: math_op_muldiv MULT math_term •

    ADD        reduce using rule 67 (math_op_muldiv)
    SUB        reduce using rule 67 (math_op_muldiv)
    MULT       reduce using rule 67 (math_op_muldiv)
    DIV        reduce using rule 67 (math_op_muldiv)
    OR         reduce using rule 67 (math_op_muldiv)
    AND        reduce using rule 67 (math_op_muldiv)
    SMALLER    reduce using rule 67 (math_op_muldiv)
    GREATER    reduce using rule 67 (math_op_muldiv)
    SMALLEQ    reduce using rule 67 (math_op_muldiv)
    GREATEQ    reduce using rule 67 (math_op_muldiv)
    EQUALS     reduce using rule 67 (math_op_muldiv)
    DIFFERENT  reduce using rule 67 (math_op_muldiv)
    COMMA      reduce using rule 67 (math_op_muldiv)
    PARENR     reduce using rule 67 (math_op_muldiv)


State 425

   66 math_op_muldiv: math_op_muldiv DIV math_term •

    ADD        reduce using rule 66 (math_op_muldiv)
    SUB        reduce using rule 66 (math_op_muldiv)
    MULT       reduce using rule 66 (math_op_muldiv)
    DIV        reduce using rule 66 (math_op_muldiv)
    OR         reduce using rule 66 (math_op_muldiv)
    AND        reduce using rule 66 (math_op_muldiv)
    SMALLER    reduce using rule 66 (math_op_muldiv)
    GREATER    reduce using rule 66 (math_op_muldiv)
    SMALLEQ    reduce using rule 66 (math_op_muldiv)
    GREATEQ    reduce using rule 66 (math_op_muldiv)
    EQUALS     reduce using rule 66 (math_op_muldiv)
    DIFFERENT  reduce using rule 66 (math_op_muldiv)
    COMMA      reduce using rule 66 (math_op_muldiv)
    PARENR     reduce using rule 66 (math_op_muldiv)


State 426

   76 or_operation: or_operation OR and_operation •
   78 and_operation: and_operation • AND equality_operation

    AND  shift, and go to state 348

    OR      reduce using rule 76 (or_operation)
    COMMA   reduce using rule 76 (or_operation)
    PARENR  reduce using rule 76 (or_operation)


State 427

   78 and_operation: and_operation AND equality_operation •
   80 equality_operation: equality_operation • EQUALS relational_operation
   81                   | equality_operation • DIFFERENT relational_operation

    EQUALS     shift, and go to state 349
    DIFFERENT  shift, and go to state 350

    OR      reduce using rule 78 (and_operation)
    AND     reduce using rule 78 (and_operation)
    COMMA   reduce using rule 78 (and_operation)
    PARENR  reduce using rule 78 (and_operation)


State 428

   80 equality_operation: equality_operation EQUALS relational_operation •
   83 relational_operation: relational_operation • SMALLER negation_operation
   84                     | relational_operation • GREATER negation_operation
   85                     | relational_operation • SMALLEQ negation_operation
   86                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 351
    GREATER  shift, and go to state 352
    SMALLEQ  shift, and go to state 353
    GREATEQ  shift, and go to state 354

    OR         reduce using rule 80 (equality_operation)
    AND        reduce using rule 80 (equality_operation)
    EQUALS     reduce using rule 80 (equality_operation)
    DIFFERENT  reduce using rule 80 (equality_operation)
    COMMA      reduce using rule 80 (equality_operation)
    PARENR     reduce using rule 80 (equality_operation)


State 429

   81 equality_operation: equality_operation DIFFERENT relational_operation •
   83 relational_operation: relational_operation • SMALLER negation_operation
   84                     | relational_operation • GREATER negation_operation
   85                     | relational_operation • SMALLEQ negation_operation
   86                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 351
    GREATER  shift, and go to state 352
    SMALLEQ  shift, and go to state 353
    GREATEQ  shift, and go to state 354

    OR         reduce using rule 81 (equality_operation)
    AND        reduce using rule 81 (equality_operation)
    EQUALS     reduce using rule 81 (equality_operation)
    DIFFERENT  reduce using rule 81 (equality_operation)
    COMMA      reduce using rule 81 (equality_operation)
    PARENR     reduce using rule 81 (equality_operation)


State 430

   83 relational_operation: relational_operation SMALLER negation_operation •

    OR         reduce using rule 83 (relational_operation)
    AND        reduce using rule 83 (relational_operation)
    SMALLER    reduce using rule 83 (relational_operation)
    GREATER    reduce using rule 83 (relational_operation)
    SMALLEQ    reduce using rule 83 (relational_operation)
    GREATEQ    reduce using rule 83 (relational_operation)
    EQUALS     reduce using rule 83 (relational_operation)
    DIFFERENT  reduce using rule 83 (relational_operation)
    COMMA      reduce using rule 83 (relational_operation)
    PARENR     reduce using rule 83 (relational_operation)


State 431

   84 relational_operation: relational_operation GREATER negation_operation •

    OR         reduce using rule 84 (relational_operation)
    AND        reduce using rule 84 (relational_operation)
    SMALLER    reduce using rule 84 (relational_operation)
    GREATER    reduce using rule 84 (relational_operation)
    SMALLEQ    reduce using rule 84 (relational_operation)
    GREATEQ    reduce using rule 84 (relational_operation)
    EQUALS     reduce using rule 84 (relational_operation)
    DIFFERENT  reduce using rule 84 (relational_operation)
    COMMA      reduce using rule 84 (relational_operation)
    PARENR     reduce using rule 84 (relational_operation)


State 432

   85 relational_operation: relational_operation SMALLEQ negation_operation •

    OR         reduce using rule 85 (relational_operation)
    AND        reduce using rule 85 (relational_operation)
    SMALLER    reduce using rule 85 (relational_operation)
    GREATER    reduce using rule 85 (relational_operation)
    SMALLEQ    reduce using rule 85 (relational_operation)
    GREATEQ    reduce using rule 85 (relational_operation)
    EQUALS     reduce using rule 85 (relational_operation)
    DIFFERENT  reduce using rule 85 (relational_operation)
    COMMA      reduce using rule 85 (relational_operation)
    PARENR     reduce using rule 85 (relational_operation)


State 433

   86 relational_operation: relational_operation GREATEQ negation_operation •

    OR         reduce using rule 86 (relational_operation)
    AND        reduce using rule 86 (relational_operation)
    SMALLER    reduce using rule 86 (relational_operation)
    GREATER    reduce using rule 86 (relational_operation)
    SMALLEQ    reduce using rule 86 (relational_operation)
    GREATEQ    reduce using rule 86 (relational_operation)
    EQUALS     reduce using rule 86 (relational_operation)
    DIFFERENT  reduce using rule 86 (relational_operation)
    COMMA      reduce using rule 86 (relational_operation)
    PARENR     reduce using rule 86 (relational_operation)


State 434

   59 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 482


State 435

   74 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 483


State 436

   69 many_operations: ADDSET PARENL many_operations • PARENR

    PARENR  shift, and go to state 484


State 437

   70 many_operations: REMOVE PARENL many_operations • PARENR

    PARENR  shift, and go to state 485


State 438

   71 many_operations: EXISTS PARENL many_operations • PARENR

    PARENR  shift, and go to state 486


State 439

   59 math_term: PARENL expression PARENR •

    ADD        reduce using rule 59 (math_term)
    SUB        reduce using rule 59 (math_term)
    MULT       reduce using rule 59 (math_term)
    DIV        reduce using rule 59 (math_term)
    OR         reduce using rule 59 (math_term)
    AND        reduce using rule 59 (math_term)
    SMALLER    reduce using rule 59 (math_term)
    GREATER    reduce using rule 59 (math_term)
    SMALLEQ    reduce using rule 59 (math_term)
    GREATEQ    reduce using rule 59 (math_term)
    EQUALS     reduce using rule 59 (math_term)
    DIFFERENT  reduce using rule 59 (math_term)
    IN         reduce using rule 59 (math_term)
    PARENR     reduce using rule 59 (math_term)
    SEMIC      reduce using rule 59 (math_term)


State 440

   56 math_term: ID •
   90 func_call: ID • PARENL args_list PARENR
   96 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 487
    PARENL  shift, and go to state 488

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    IN         reduce using rule 56 (math_term)
    PARENR     reduce using rule 56 (math_term)
    SEMIC      reduce using rule 56 (math_term)


State 441

   61 str_term: STRING •

    IN      reduce using rule 61 (str_term)
    PARENR  reduce using rule 61 (str_term)
    SEMIC   reduce using rule 61 (str_term)


State 442

   60 str_term: CHAR •

    IN      reduce using rule 60 (str_term)
    PARENR  reduce using rule 60 (str_term)
    SEMIC   reduce using rule 60 (str_term)


State 443

   62 str_term: EMPTY •

    IN      reduce using rule 62 (str_term)
    PARENR  reduce using rule 62 (str_term)
    SEMIC   reduce using rule 62 (str_term)


State 444

   92 in_set: term IN expression •

    PARENR  reduce using rule 92 (in_set)
    SEMIC   reduce using rule 92 (in_set)


State 445

   55 term: str_term •
   91 func_call: str_term •

    IN      reduce using rule 55 (term)
    PARENR  reduce using rule 91 (func_call)
    SEMIC   reduce using rule 91 (func_call)


State 446

   51 expression: many_operations •

    PARENR  reduce using rule 51 (expression)
    SEMIC   reduce using rule 51 (expression)


State 447

   52 expression: func_call •

    PARENR  reduce using rule 52 (expression)
    SEMIC   reduce using rule 52 (expression)


State 448

   53 expression: assign_value •

    PARENR  reduce using rule 53 (expression)
    SEMIC   reduce using rule 53 (expression)


State 449

   63 math_op: math_op ADD math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 370
    DIV   shift, and go to state 371

    ADD        reduce using rule 63 (math_op)
    SUB        reduce using rule 63 (math_op)
    OR         reduce using rule 63 (math_op)
    AND        reduce using rule 63 (math_op)
    SMALLER    reduce using rule 63 (math_op)
    GREATER    reduce using rule 63 (math_op)
    SMALLEQ    reduce using rule 63 (math_op)
    GREATEQ    reduce using rule 63 (math_op)
    EQUALS     reduce using rule 63 (math_op)
    DIFFERENT  reduce using rule 63 (math_op)
    PARENR     reduce using rule 63 (math_op)
    SEMIC      reduce using rule 63 (math_op)


State 450

   64 math_op: math_op SUB math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 370
    DIV   shift, and go to state 371

    ADD        reduce using rule 64 (math_op)
    SUB        reduce using rule 64 (math_op)
    OR         reduce using rule 64 (math_op)
    AND        reduce using rule 64 (math_op)
    SMALLER    reduce using rule 64 (math_op)
    GREATER    reduce using rule 64 (math_op)
    SMALLEQ    reduce using rule 64 (math_op)
    GREATEQ    reduce using rule 64 (math_op)
    EQUALS     reduce using rule 64 (math_op)
    DIFFERENT  reduce using rule 64 (math_op)
    PARENR     reduce using rule 64 (math_op)
    SEMIC      reduce using rule 64 (math_op)


State 451

   67 math_op_muldiv: math_op_muldiv MULT math_term •

    ADD        reduce using rule 67 (math_op_muldiv)
    SUB        reduce using rule 67 (math_op_muldiv)
    MULT       reduce using rule 67 (math_op_muldiv)
    DIV        reduce using rule 67 (math_op_muldiv)
    OR         reduce using rule 67 (math_op_muldiv)
    AND        reduce using rule 67 (math_op_muldiv)
    SMALLER    reduce using rule 67 (math_op_muldiv)
    GREATER    reduce using rule 67 (math_op_muldiv)
    SMALLEQ    reduce using rule 67 (math_op_muldiv)
    GREATEQ    reduce using rule 67 (math_op_muldiv)
    EQUALS     reduce using rule 67 (math_op_muldiv)
    DIFFERENT  reduce using rule 67 (math_op_muldiv)
    PARENR     reduce using rule 67 (math_op_muldiv)
    SEMIC      reduce using rule 67 (math_op_muldiv)


State 452

   66 math_op_muldiv: math_op_muldiv DIV math_term •

    ADD        reduce using rule 66 (math_op_muldiv)
    SUB        reduce using rule 66 (math_op_muldiv)
    MULT       reduce using rule 66 (math_op_muldiv)
    DIV        reduce using rule 66 (math_op_muldiv)
    OR         reduce using rule 66 (math_op_muldiv)
    AND        reduce using rule 66 (math_op_muldiv)
    SMALLER    reduce using rule 66 (math_op_muldiv)
    GREATER    reduce using rule 66 (math_op_muldiv)
    SMALLEQ    reduce using rule 66 (math_op_muldiv)
    GREATEQ    reduce using rule 66 (math_op_muldiv)
    EQUALS     reduce using rule 66 (math_op_muldiv)
    DIFFERENT  reduce using rule 66 (math_op_muldiv)
    PARENR     reduce using rule 66 (math_op_muldiv)
    SEMIC      reduce using rule 66 (math_op_muldiv)


State 453

   76 or_operation: or_operation OR and_operation •
   78 and_operation: and_operation • AND equality_operation

    AND  shift, and go to state 373

    OR      reduce using rule 76 (or_operation)
    PARENR  reduce using rule 76 (or_operation)
    SEMIC   reduce using rule 76 (or_operation)


State 454

   78 and_operation: and_operation AND equality_operation •
   80 equality_operation: equality_operation • EQUALS relational_operation
   81                   | equality_operation • DIFFERENT relational_operation

    EQUALS     shift, and go to state 374
    DIFFERENT  shift, and go to state 375

    OR      reduce using rule 78 (and_operation)
    AND     reduce using rule 78 (and_operation)
    PARENR  reduce using rule 78 (and_operation)
    SEMIC   reduce using rule 78 (and_operation)


State 455

   80 equality_operation: equality_operation EQUALS relational_operation •
   83 relational_operation: relational_operation • SMALLER negation_operation
   84                     | relational_operation • GREATER negation_operation
   85                     | relational_operation • SMALLEQ negation_operation
   86                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 376
    GREATER  shift, and go to state 377
    SMALLEQ  shift, and go to state 378
    GREATEQ  shift, and go to state 379

    OR         reduce using rule 80 (equality_operation)
    AND        reduce using rule 80 (equality_operation)
    EQUALS     reduce using rule 80 (equality_operation)
    DIFFERENT  reduce using rule 80 (equality_operation)
    PARENR     reduce using rule 80 (equality_operation)
    SEMIC      reduce using rule 80 (equality_operation)


State 456

   81 equality_operation: equality_operation DIFFERENT relational_operation •
   83 relational_operation: relational_operation • SMALLER negation_operation
   84                     | relational_operation • GREATER negation_operation
   85                     | relational_operation • SMALLEQ negation_operation
   86                     | relational_operation • GREATEQ negation_operation

    SMALLER  shift, and go to state 376
    GREATER  shift, and go to state 377
    SMALLEQ  shift, and go to state 378
    GREATEQ  shift, and go to state 379

    OR         reduce using rule 81 (equality_operation)
    AND        reduce using rule 81 (equality_operation)
    EQUALS     reduce using rule 81 (equality_operation)
    DIFFERENT  reduce using rule 81 (equality_operation)
    PARENR     reduce using rule 81 (equality_operation)
    SEMIC      reduce using rule 81 (equality_operation)


State 457

   83 relational_operation: relational_operation SMALLER negation_operation •

    OR         reduce using rule 83 (relational_operation)
    AND        reduce using rule 83 (relational_operation)
    SMALLER    reduce using rule 83 (relational_operation)
    GREATER    reduce using rule 83 (relational_operation)
    SMALLEQ    reduce using rule 83 (relational_operation)
    GREATEQ    reduce using rule 83 (relational_operation)
    EQUALS     reduce using rule 83 (relational_operation)
    DIFFERENT  reduce using rule 83 (relational_operation)
    PARENR     reduce using rule 83 (relational_operation)
    SEMIC      reduce using rule 83 (relational_operation)


State 458

   84 relational_operation: relational_operation GREATER negation_operation •

    OR         reduce using rule 84 (relational_operation)
    AND        reduce using rule 84 (relational_operation)
    SMALLER    reduce using rule 84 (relational_operation)
    GREATER    reduce using rule 84 (relational_operation)
    SMALLEQ    reduce using rule 84 (relational_operation)
    GREATEQ    reduce using rule 84 (relational_operation)
    EQUALS     reduce using rule 84 (relational_operation)
    DIFFERENT  reduce using rule 84 (relational_operation)
    PARENR     reduce using rule 84 (relational_operation)
    SEMIC      reduce using rule 84 (relational_operation)


State 459

   85 relational_operation: relational_operation SMALLEQ negation_operation •

    OR         reduce using rule 85 (relational_operation)
    AND        reduce using rule 85 (relational_operation)
    SMALLER    reduce using rule 85 (relational_operation)
    GREATER    reduce using rule 85 (relational_operation)
    SMALLEQ    reduce using rule 85 (relational_operation)
    GREATEQ    reduce using rule 85 (relational_operation)
    EQUALS     reduce using rule 85 (relational_operation)
    DIFFERENT  reduce using rule 85 (relational_operation)
    PARENR     reduce using rule 85 (relational_operation)
    SEMIC      reduce using rule 85 (relational_operation)


State 460

   86 relational_operation: relational_operation GREATEQ negation_operation •

    OR         reduce using rule 86 (relational_operation)
    AND        reduce using rule 86 (relational_operation)
    SMALLER    reduce using rule 86 (relational_operation)
    GREATER    reduce using rule 86 (relational_operation)
    SMALLEQ    reduce using rule 86 (relational_operation)
    GREATEQ    reduce using rule 86 (relational_operation)
    EQUALS     reduce using rule 86 (relational_operation)
    DIFFERENT  reduce using rule 86 (relational_operation)
    PARENR     reduce using rule 86 (relational_operation)
    SEMIC      reduce using rule 86 (relational_operation)


State 461

   59 math_term: PARENL expression PARENR •

    IN  reduce using rule 59 (math_term)


State 462

   90 func_call: ID PARENL args_list PARENR •

    PARENR  reduce using rule 90 (func_call)


State 463

   59 math_term: PARENL expression PARENR •

    ADD        reduce using rule 59 (math_term)
    SUB        reduce using rule 59 (math_term)
    MULT       reduce using rule 59 (math_term)
    DIV        reduce using rule 59 (math_term)
    OR         reduce using rule 59 (math_term)
    AND        reduce using rule 59 (math_term)
    SMALLER    reduce using rule 59 (math_term)
    GREATER    reduce using rule 59 (math_term)
    SMALLEQ    reduce using rule 59 (math_term)
    GREATEQ    reduce using rule 59 (math_term)
    EQUALS     reduce using rule 59 (math_term)
    DIFFERENT  reduce using rule 59 (math_term)
    PARENR     reduce using rule 59 (math_term)


State 464

   74 operation: ISTYPE PARENL expression PARENR •

    PARENR  reduce using rule 74 (operation)


State 465

   69 many_operations: ADDSET PARENL many_operations PARENR •

    PARENR  reduce using rule 69 (many_operations)


State 466

   70 many_operations: REMOVE PARENL many_operations PARENR •

    PARENR  reduce using rule 70 (many_operations)


State 467

   71 many_operations: EXISTS PARENL many_operations PARENR •

    PARENR  reduce using rule 71 (many_operations)


State 468

   48 io_ops: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 489


State 469

   49 io_ops: WRITE PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 490


State 470

   50 io_ops: WRITELN PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 491


State 471

   28 basic_ops: for_statement STFUNC statement_list ENDFUNC •

    ID       reduce using rule 28 (basic_ops)
    TYPE     reduce using rule 28 (basic_ops)
    STRING   reduce using rule 28 (basic_ops)
    CHAR     reduce using rule 28 (basic_ops)
    EMPTY    reduce using rule 28 (basic_ops)
    INTEGER  reduce using rule 28 (basic_ops)
    DECIMAL  reduce using rule 28 (basic_ops)
    NEG      reduce using rule 28 (basic_ops)
    IF       reduce using rule 28 (basic_ops)
    ELSE     reduce using rule 28 (basic_ops)
    FOR      reduce using rule 28 (basic_ops)
    READ     reduce using rule 28 (basic_ops)
    WRITE    reduce using rule 28 (basic_ops)
    WRITELN  reduce using rule 28 (basic_ops)
    RETURN   reduce using rule 28 (basic_ops)
    ISTYPE   reduce using rule 28 (basic_ops)
    ADDSET   reduce using rule 28 (basic_ops)
    REMOVE   reduce using rule 28 (basic_ops)
    EXISTS   reduce using rule 28 (basic_ops)
    FORALL   reduce using rule 28 (basic_ops)
    ENDFUNC  reduce using rule 28 (basic_ops)
    PARENL   reduce using rule 28 (basic_ops)


State 472

   31 basic_ops: forall_statement STFUNC statement_list ENDFUNC •

    ID       reduce using rule 31 (basic_ops)
    TYPE     reduce using rule 31 (basic_ops)
    STRING   reduce using rule 31 (basic_ops)
    CHAR     reduce using rule 31 (basic_ops)
    EMPTY    reduce using rule 31 (basic_ops)
    INTEGER  reduce using rule 31 (basic_ops)
    DECIMAL  reduce using rule 31 (basic_ops)
    NEG      reduce using rule 31 (basic_ops)
    IF       reduce using rule 31 (basic_ops)
    ELSE     reduce using rule 31 (basic_ops)
    FOR      reduce using rule 31 (basic_ops)
    READ     reduce using rule 31 (basic_ops)
    WRITE    reduce using rule 31 (basic_ops)
    WRITELN  reduce using rule 31 (basic_ops)
    RETURN   reduce using rule 31 (basic_ops)
    ISTYPE   reduce using rule 31 (basic_ops)
    ADDSET   reduce using rule 31 (basic_ops)
    REMOVE   reduce using rule 31 (basic_ops)
    EXISTS   reduce using rule 31 (basic_ops)
    FORALL   reduce using rule 31 (basic_ops)
    ENDFUNC  reduce using rule 31 (basic_ops)
    PARENL   reduce using rule 31 (basic_ops)


State 473

   39 if_ops: if_statement STFUNC statement_list ENDFUNC •
   40       | if_statement STFUNC statement_list ENDFUNC • else_statement

    ELSE  shift, and go to state 411

    ID       reduce using rule 39 (if_ops)
    TYPE     reduce using rule 39 (if_ops)
    STRING   reduce using rule 39 (if_ops)
    CHAR     reduce using rule 39 (if_ops)
    EMPTY    reduce using rule 39 (if_ops)
    INTEGER  reduce using rule 39 (if_ops)
    DECIMAL  reduce using rule 39 (if_ops)
    NEG      reduce using rule 39 (if_ops)
    IF       reduce using rule 39 (if_ops)
    FOR      reduce using rule 39 (if_ops)
    READ     reduce using rule 39 (if_ops)
    WRITE    reduce using rule 39 (if_ops)
    WRITELN  reduce using rule 39 (if_ops)
    RETURN   reduce using rule 39 (if_ops)
    ISTYPE   reduce using rule 39 (if_ops)
    ADDSET   reduce using rule 39 (if_ops)
    REMOVE   reduce using rule 39 (if_ops)
    EXISTS   reduce using rule 39 (if_ops)
    FORALL   reduce using rule 39 (if_ops)
    ENDFUNC  reduce using rule 39 (if_ops)
    PARENL   reduce using rule 39 (if_ops)

    else_statement  go to state 492


State 474

   43 else_statement: ELSE $@5 • statement

    ID       shift, and go to state 34
    TYPE     shift, and go to state 218
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 219
    WRITE    shift, and go to state 220
    WRITELN  shift, and go to state 221
    RETURN   shift, and go to state 222
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    PARENL   shift, and go to state 54

    statement             go to state 493
    expression_statement  go to state 223
    basic_ops             go to state 224
    for_statement         go to state 225
    forall_statement      go to state 226
    if_ops                go to state 227
    if_statement          go to state 228
    ret_st                go to state 229
    var_dec               go to state 230
    io_ops                go to state 231
    expression            go to state 232
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 475

   45 else_statement: ELSE $@6 • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 494


State 476

   90 func_call: ID PARENL args_list PARENR •

    COMMA   reduce using rule 90 (func_call)
    PARENR  reduce using rule 90 (func_call)


State 477

   59 math_term: PARENL expression PARENR •

    ADD        reduce using rule 59 (math_term)
    SUB        reduce using rule 59 (math_term)
    MULT       reduce using rule 59 (math_term)
    DIV        reduce using rule 59 (math_term)
    OR         reduce using rule 59 (math_term)
    AND        reduce using rule 59 (math_term)
    SMALLER    reduce using rule 59 (math_term)
    GREATER    reduce using rule 59 (math_term)
    SMALLEQ    reduce using rule 59 (math_term)
    GREATEQ    reduce using rule 59 (math_term)
    EQUALS     reduce using rule 59 (math_term)
    DIFFERENT  reduce using rule 59 (math_term)
    COMMA      reduce using rule 59 (math_term)
    PARENR     reduce using rule 59 (math_term)


State 478

   74 operation: ISTYPE PARENL expression PARENR •

    COMMA   reduce using rule 74 (operation)
    PARENR  reduce using rule 74 (operation)


State 479

   69 many_operations: ADDSET PARENL many_operations PARENR •

    COMMA   reduce using rule 69 (many_operations)
    PARENR  reduce using rule 69 (many_operations)


State 480

   70 many_operations: REMOVE PARENL many_operations PARENR •

    COMMA   reduce using rule 70 (many_operations)
    PARENR  reduce using rule 70 (many_operations)


State 481

   71 many_operations: EXISTS PARENL many_operations PARENR •

    COMMA   reduce using rule 71 (many_operations)
    PARENR  reduce using rule 71 (many_operations)


State 482

   59 math_term: PARENL expression PARENR •

    ADD        reduce using rule 59 (math_term)
    SUB        reduce using rule 59 (math_term)
    MULT       reduce using rule 59 (math_term)
    DIV        reduce using rule 59 (math_term)
    OR         reduce using rule 59 (math_term)
    AND        reduce using rule 59 (math_term)
    SMALLER    reduce using rule 59 (math_term)
    GREATER    reduce using rule 59 (math_term)
    SMALLEQ    reduce using rule 59 (math_term)
    GREATEQ    reduce using rule 59 (math_term)
    EQUALS     reduce using rule 59 (math_term)
    DIFFERENT  reduce using rule 59 (math_term)
    PARENR     reduce using rule 59 (math_term)
    SEMIC      reduce using rule 59 (math_term)


State 483

   74 operation: ISTYPE PARENL expression PARENR •

    PARENR  reduce using rule 74 (operation)
    SEMIC   reduce using rule 74 (operation)


State 484

   69 many_operations: ADDSET PARENL many_operations PARENR •

    PARENR  reduce using rule 69 (many_operations)
    SEMIC   reduce using rule 69 (many_operations)


State 485

   70 many_operations: REMOVE PARENL many_operations PARENR •

    PARENR  reduce using rule 70 (many_operations)
    SEMIC   reduce using rule 70 (many_operations)


State 486

   71 many_operations: EXISTS PARENL many_operations PARENR •

    PARENR  reduce using rule 71 (many_operations)
    SEMIC   reduce using rule 71 (many_operations)


State 487

   96 assign_value: ID ASSIGN • expression

    ID       shift, and go to state 440
    STRING   shift, and go to state 441
    CHAR     shift, and go to state 442
    EMPTY    shift, and go to state 443
    INTEGER  shift, and go to state 262
    DECIMAL  shift, and go to state 263
    NEG      shift, and go to state 264
    ISTYPE   shift, and go to state 265
    ADDSET   shift, and go to state 266
    REMOVE   shift, and go to state 267
    EXISTS   shift, and go to state 268
    PARENL   shift, and go to state 269

    expression            go to state 495
    term                  go to state 271
    math_term             go to state 272
    str_term              go to state 445
    math_op               go to state 273
    math_op_muldiv        go to state 274
    many_operations       go to state 446
    operation             go to state 275
    or_operation          go to state 276
    and_operation         go to state 277
    equality_operation    go to state 278
    relational_operation  go to state 279
    negation_operation    go to state 280
    func_call             go to state 447
    in_set                go to state 281
    assign_value          go to state 448


State 488

   90 func_call: ID PARENL • args_list PARENR

    ID       shift, and go to state 233
    STRING   shift, and go to state 234
    CHAR     shift, and go to state 235
    EMPTY    shift, and go to state 236
    INTEGER  shift, and go to state 237
    DECIMAL  shift, and go to state 238
    NEG      shift, and go to state 239
    ISTYPE   shift, and go to state 240
    ADDSET   shift, and go to state 241
    REMOVE   shift, and go to state 242
    EXISTS   shift, and go to state 243
    PARENL   shift, and go to state 244

    COMMA   reduce using rule 95 (args_list)
    PARENR  reduce using rule 95 (args_list)

    expression            go to state 121
    term                  go to state 245
    math_term             go to state 246
    str_term              go to state 247
    math_op               go to state 248
    math_op_muldiv        go to state 249
    many_operations       go to state 250
    operation             go to state 251
    or_operation          go to state 252
    and_operation         go to state 253
    equality_operation    go to state 254
    relational_operation  go to state 255
    negation_operation    go to state 256
    func_call             go to state 257
    in_set                go to state 258
    args_list             go to state 496
    assign_value          go to state 259


State 489

   48 io_ops: READ PARENL ID PARENR SEMIC •

    ID       reduce using rule 48 (io_ops)
    TYPE     reduce using rule 48 (io_ops)
    STRING   reduce using rule 48 (io_ops)
    CHAR     reduce using rule 48 (io_ops)
    EMPTY    reduce using rule 48 (io_ops)
    INTEGER  reduce using rule 48 (io_ops)
    DECIMAL  reduce using rule 48 (io_ops)
    NEG      reduce using rule 48 (io_ops)
    IF       reduce using rule 48 (io_ops)
    ELSE     reduce using rule 48 (io_ops)
    FOR      reduce using rule 48 (io_ops)
    READ     reduce using rule 48 (io_ops)
    WRITE    reduce using rule 48 (io_ops)
    WRITELN  reduce using rule 48 (io_ops)
    RETURN   reduce using rule 48 (io_ops)
    ISTYPE   reduce using rule 48 (io_ops)
    ADDSET   reduce using rule 48 (io_ops)
    REMOVE   reduce using rule 48 (io_ops)
    EXISTS   reduce using rule 48 (io_ops)
    FORALL   reduce using rule 48 (io_ops)
    ENDFUNC  reduce using rule 48 (io_ops)
    PARENL   reduce using rule 48 (io_ops)


State 490

   49 io_ops: WRITE PARENL expression PARENR SEMIC •

    ID       reduce using rule 49 (io_ops)
    TYPE     reduce using rule 49 (io_ops)
    STRING   reduce using rule 49 (io_ops)
    CHAR     reduce using rule 49 (io_ops)
    EMPTY    reduce using rule 49 (io_ops)
    INTEGER  reduce using rule 49 (io_ops)
    DECIMAL  reduce using rule 49 (io_ops)
    NEG      reduce using rule 49 (io_ops)
    IF       reduce using rule 49 (io_ops)
    ELSE     reduce using rule 49 (io_ops)
    FOR      reduce using rule 49 (io_ops)
    READ     reduce using rule 49 (io_ops)
    WRITE    reduce using rule 49 (io_ops)
    WRITELN  reduce using rule 49 (io_ops)
    RETURN   reduce using rule 49 (io_ops)
    ISTYPE   reduce using rule 49 (io_ops)
    ADDSET   reduce using rule 49 (io_ops)
    REMOVE   reduce using rule 49 (io_ops)
    EXISTS   reduce using rule 49 (io_ops)
    FORALL   reduce using rule 49 (io_ops)
    ENDFUNC  reduce using rule 49 (io_ops)
    PARENL   reduce using rule 49 (io_ops)


State 491

   50 io_ops: WRITELN PARENL expression PARENR SEMIC •

    ID       reduce using rule 50 (io_ops)
    TYPE     reduce using rule 50 (io_ops)
    STRING   reduce using rule 50 (io_ops)
    CHAR     reduce using rule 50 (io_ops)
    EMPTY    reduce using rule 50 (io_ops)
    INTEGER  reduce using rule 50 (io_ops)
    DECIMAL  reduce using rule 50 (io_ops)
    NEG      reduce using rule 50 (io_ops)
    IF       reduce using rule 50 (io_ops)
    ELSE     reduce using rule 50 (io_ops)
    FOR      reduce using rule 50 (io_ops)
    READ     reduce using rule 50 (io_ops)
    WRITE    reduce using rule 50 (io_ops)
    WRITELN  reduce using rule 50 (io_ops)
    RETURN   reduce using rule 50 (io_ops)
    ISTYPE   reduce using rule 50 (io_ops)
    ADDSET   reduce using rule 50 (io_ops)
    REMOVE   reduce using rule 50 (io_ops)
    EXISTS   reduce using rule 50 (io_ops)
    FORALL   reduce using rule 50 (io_ops)
    ENDFUNC  reduce using rule 50 (io_ops)
    PARENL   reduce using rule 50 (io_ops)


State 492

   40 if_ops: if_statement STFUNC statement_list ENDFUNC else_statement •

    ID       reduce using rule 40 (if_ops)
    TYPE     reduce using rule 40 (if_ops)
    STRING   reduce using rule 40 (if_ops)
    CHAR     reduce using rule 40 (if_ops)
    EMPTY    reduce using rule 40 (if_ops)
    INTEGER  reduce using rule 40 (if_ops)
    DECIMAL  reduce using rule 40 (if_ops)
    NEG      reduce using rule 40 (if_ops)
    IF       reduce using rule 40 (if_ops)
    ELSE     reduce using rule 40 (if_ops)
    FOR      reduce using rule 40 (if_ops)
    READ     reduce using rule 40 (if_ops)
    WRITE    reduce using rule 40 (if_ops)
    WRITELN  reduce using rule 40 (if_ops)
    RETURN   reduce using rule 40 (if_ops)
    ISTYPE   reduce using rule 40 (if_ops)
    ADDSET   reduce using rule 40 (if_ops)
    REMOVE   reduce using rule 40 (if_ops)
    EXISTS   reduce using rule 40 (if_ops)
    FORALL   reduce using rule 40 (if_ops)
    ENDFUNC  reduce using rule 40 (if_ops)
    PARENL   reduce using rule 40 (if_ops)


State 493

   43 else_statement: ELSE $@5 statement •

    ID       reduce using rule 43 (else_statement)
    TYPE     reduce using rule 43 (else_statement)
    STRING   reduce using rule 43 (else_statement)
    CHAR     reduce using rule 43 (else_statement)
    EMPTY    reduce using rule 43 (else_statement)
    INTEGER  reduce using rule 43 (else_statement)
    DECIMAL  reduce using rule 43 (else_statement)
    NEG      reduce using rule 43 (else_statement)
    IF       reduce using rule 43 (else_statement)
    ELSE     reduce using rule 43 (else_statement)
    FOR      reduce using rule 43 (else_statement)
    READ     reduce using rule 43 (else_statement)
    WRITE    reduce using rule 43 (else_statement)
    WRITELN  reduce using rule 43 (else_statement)
    RETURN   reduce using rule 43 (else_statement)
    ISTYPE   reduce using rule 43 (else_statement)
    ADDSET   reduce using rule 43 (else_statement)
    REMOVE   reduce using rule 43 (else_statement)
    EXISTS   reduce using rule 43 (else_statement)
    FORALL   reduce using rule 43 (else_statement)
    ENDFUNC  reduce using rule 43 (else_statement)
    PARENL   reduce using rule 43 (else_statement)


State 494

   45 else_statement: ELSE $@6 STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID       reduce using rule 19 (statement_list)
    TYPE     reduce using rule 19 (statement_list)
    STRING   reduce using rule 19 (statement_list)
    CHAR     reduce using rule 19 (statement_list)
    EMPTY    reduce using rule 19 (statement_list)
    INTEGER  reduce using rule 19 (statement_list)
    DECIMAL  reduce using rule 19 (statement_list)
    NEG      reduce using rule 19 (statement_list)
    IF       reduce using rule 19 (statement_list)
    FOR      reduce using rule 19 (statement_list)
    READ     reduce using rule 19 (statement_list)
    WRITE    reduce using rule 19 (statement_list)
    WRITELN  reduce using rule 19 (statement_list)
    RETURN   reduce using rule 19 (statement_list)
    ISTYPE   reduce using rule 19 (statement_list)
    ADDSET   reduce using rule 19 (statement_list)
    REMOVE   reduce using rule 19 (statement_list)
    EXISTS   reduce using rule 19 (statement_list)
    FORALL   reduce using rule 19 (statement_list)
    ENDFUNC  reduce using rule 19 (statement_list)
    PARENL   reduce using rule 19 (statement_list)

    statement_list  go to state 497


State 495

   96 assign_value: ID ASSIGN expression •

    PARENR  reduce using rule 96 (assign_value)
    SEMIC   reduce using rule 96 (assign_value)


State 496

   90 func_call: ID PARENL args_list • PARENR
   93 args_list: args_list • COMMA expression

    COMMA   shift, and go to state 158
    PARENR  shift, and go to state 498


State 497

   18 statement_list: statement_list • statement
   45 else_statement: ELSE $@6 STFUNC statement_list • ENDFUNC

    ID       shift, and go to state 34
    TYPE     shift, and go to state 35
    STRING   shift, and go to state 36
    CHAR     shift, and go to state 37
    EMPTY    shift, and go to state 38
    INTEGER  shift, and go to state 39
    DECIMAL  shift, and go to state 40
    NEG      shift, and go to state 41
    IF       shift, and go to state 42
    FOR      shift, and go to state 43
    READ     shift, and go to state 44
    WRITE    shift, and go to state 45
    WRITELN  shift, and go to state 46
    RETURN   shift, and go to state 47
    ISTYPE   shift, and go to state 48
    ADDSET   shift, and go to state 49
    REMOVE   shift, and go to state 50
    EXISTS   shift, and go to state 51
    FORALL   shift, and go to state 52
    ENDFUNC  shift, and go to state 499
    PARENL   shift, and go to state 54

    statement             go to state 55
    expression_statement  go to state 56
    basic_ops             go to state 57
    for_statement         go to state 58
    forall_statement      go to state 59
    if_ops                go to state 60
    if_statement          go to state 61
    ret_st                go to state 62
    var_dec               go to state 63
    io_ops                go to state 64
    expression            go to state 65
    term                  go to state 66
    math_term             go to state 67
    str_term              go to state 68
    math_op               go to state 69
    math_op_muldiv        go to state 70
    many_operations       go to state 71
    operation             go to state 72
    or_operation          go to state 73
    and_operation         go to state 74
    equality_operation    go to state 75
    relational_operation  go to state 76
    negation_operation    go to state 77
    func_call             go to state 78
    in_set                go to state 79
    assign_value          go to state 80


State 498

   90 func_call: ID PARENL args_list PARENR •

    PARENR  reduce using rule 90 (func_call)
    SEMIC   reduce using rule 90 (func_call)


State 499

   45 else_statement: ELSE $@6 STFUNC statement_list ENDFUNC •

    ID       reduce using rule 45 (else_statement)
    TYPE     reduce using rule 45 (else_statement)
    STRING   reduce using rule 45 (else_statement)
    CHAR     reduce using rule 45 (else_statement)
    EMPTY    reduce using rule 45 (else_statement)
    INTEGER  reduce using rule 45 (else_statement)
    DECIMAL  reduce using rule 45 (else_statement)
    NEG      reduce using rule 45 (else_statement)
    IF       reduce using rule 45 (else_statement)
    ELSE     reduce using rule 45 (else_statement)
    FOR      reduce using rule 45 (else_statement)
    READ     reduce using rule 45 (else_statement)
    WRITE    reduce using rule 45 (else_statement)
    WRITELN  reduce using rule 45 (else_statement)
    RETURN   reduce using rule 45 (else_statement)
    ISTYPE   reduce using rule 45 (else_statement)
    ADDSET   reduce using rule 45 (else_statement)
    REMOVE   reduce using rule 45 (else_statement)
    EXISTS   reduce using rule 45 (else_statement)
    FORALL   reduce using rule 45 (else_statement)
    ENDFUNC  reduce using rule 45 (else_statement)
    PARENL   reduce using rule 45 (else_statement)
