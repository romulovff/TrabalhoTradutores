Grammar

    0 $accept: program $end

    1 program: declarations_list

    2 declarations_list: declarations_list declaration
    3                  | declaration
    4                  | error

    5 declaration: var_dec
    6            | func_dec

    7 $@1: %empty

    8 $@2: %empty

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC

   10 $@3: %empty

   11 $@4: %empty

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC

   13 params_list: params_list COMMA parameter
   14            | parameter
   15            | %empty
   16            | error

   17 parameter: TYPE ID

   18 statement_list: statement_list statement
   19               | %empty
   20               | error

   21 statement: expression_statement
   22          | ret_st
   23          | var_dec
   24          | io_ops
   25          | basic_ops

   26 expression_statement: expression SEMIC

   27 basic_ops: if_ops
   28          | for_statement STFUNC statement_list ENDFUNC
   29          | forall_statement set_op SEMIC
   30          | forall_statement STFUNC statement_list ENDFUNC

   31 for_statement: FOR PARENL for_body PARENR

   32 forall_statement: FORALL PARENL in_set PARENR

   33 for_body: expression_statement expression_statement expression
   34         | SEMIC expression_statement expression

   35 if_ops: if_statement statement
   36       | if_statement STFUNC statement_list ENDFUNC
   37       | if_statement STFUNC statement_list ENDFUNC else_statement

   38 if_statement: IF PARENL operation PARENR

   39 $@5: %empty

   40 else_statement: ELSE $@5 statement

   41 $@6: %empty

   42 else_statement: ELSE $@6 STFUNC statement_list ENDFUNC

   43 ret_st: RETURN expression SEMIC

   44 var_dec: TYPE ID SEMIC

   45 io_ops: READ PARENL PARENR SEMIC
   46       | READ PARENL expression PARENR SEMIC
   47       | WRITE PARENL expression PARENR SEMIC
   48       | WRITELN PARENL expression PARENR SEMIC

   49 expression: set_op
   50           | operation
   51           | func_call
   52           | assign_value

   53 term: ID
   54     | INTEGER
   55     | DECIMAL
   56     | CHAR
   57     | STRING
   58     | EMPTY
   59     | PARENL expression PARENR
   60     | ERRORTOKEN

   61 math_op: math_op ADD math_op_muldiv
   62        | math_op SUB math_op_muldiv
   63        | math_op_muldiv

   64 math_op_muldiv: math_op_muldiv DIV term
   65               | math_op_muldiv MULT term
   66               | term

   67 set_op: ADDSET PARENL in_set PARENR
   68       | REMOVE PARENL in_set PARENR
   69       | EXISTS PARENL in_set PARENR

   70 operation: math_op
   71          | in_set
   72          | ISTYPE PARENL expression PARENR
   73          | term SMALLER expression
   74          | term GREATER expression
   75          | term SMALLEQ expression
   76          | term GREATEQ expression
   77          | term EQUALS expression
   78          | term DIFFERENT expression
   79          | term OR expression
   80          | term AND expression
   81          | NEG expression

   82 func_call: ID PARENL args_list PARENR

   83 in_set: term IN expression

   84 args_list: args_list COMMA term
   85          | term
   86          | %empty

   87 assign_value: ID ASSIGN expression


Terminals, with rules where they appear

    $end (0) 0
    error <tree_node> (256) 4 16 20
    ID <str> (258) 9 17 44 53 82 87
    TYPE <str> (259) 9 12 17 44
    STRING <str> (260) 57
    CHAR <str> (261) 56
    EMPTY <str> (262) 58
    MAIN <str> (263) 12
    ERRORTOKEN <str> (264) 60
    INTEGER <integer> (265) 54
    DECIMAL <dec> (266) 55
    ADD <str> (267) 61
    SUB <str> (268) 62
    MULT <str> (269) 65
    DIV <str> (270) 64
    OR <str> (271) 79
    AND <str> (272) 80
    SMALLER <str> (273) 73
    GREATER <str> (274) 74
    SMALLEQ <str> (275) 75
    GREATEQ <str> (276) 76
    EQUALS <str> (277) 77
    DIFFERENT <str> (278) 78
    ASSIGN <str> (279) 87
    NEG <str> (280) 81
    IF <str> (281) 38
    ELSE <str> (282) 40 42
    FOR <str> (283) 31
    READ <str> (284) 45 46
    WRITE <str> (285) 47
    WRITELN <str> (286) 48
    RETURN <str> (287) 43
    IN <str> (288) 83
    ISTYPE <str> (289) 72
    ADDSET <str> (290) 67
    REMOVE <str> (291) 68
    EXISTS <str> (292) 69
    FORALL <str> (293) 32
    COMMA <str> (294) 13 84
    STFUNC <str> (295) 9 12 28 30 36 37 42
    ENDFUNC <str> (296) 9 12 28 30 36 37 42
    PARENL <str> (297) 9 12 31 32 38 45 46 47 48 59 67 68 69 72 82
    PARENR <str> (298) 9 12 31 32 38 45 46 47 48 59 67 68 69 72 82
    SEMIC <str> (299) 26 29 34 43 44 45 46 47 48


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program <tree_node> (46)
        on left: 1
        on right: 0
    declarations_list <tree_node> (47)
        on left: 2 3 4
        on right: 1 2
    declaration <tree_node> (48)
        on left: 5 6
        on right: 2 3
    func_dec <tree_node> (49)
        on left: 9 12
        on right: 6
    $@1 (50)
        on left: 7
        on right: 9
    $@2 (51)
        on left: 8
        on right: 9
    $@3 (52)
        on left: 10
        on right: 12
    $@4 (53)
        on left: 11
        on right: 12
    params_list <tree_node> (54)
        on left: 13 14 15 16
        on right: 9 12 13
    parameter <tree_node> (55)
        on left: 17
        on right: 13 14
    statement_list <tree_node> (56)
        on left: 18 19 20
        on right: 9 12 18 28 30 36 37 42
    statement <tree_node> (57)
        on left: 21 22 23 24 25
        on right: 18 35 40
    expression_statement <tree_node> (58)
        on left: 26
        on right: 21 33 34
    basic_ops <tree_node> (59)
        on left: 27 28 29 30
        on right: 25
    for_statement <tree_node> (60)
        on left: 31
        on right: 28
    forall_statement <tree_node> (61)
        on left: 32
        on right: 29 30
    for_body <tree_node> (62)
        on left: 33 34
        on right: 31
    if_ops <tree_node> (63)
        on left: 35 36 37
        on right: 27
    if_statement <tree_node> (64)
        on left: 38
        on right: 35 36 37
    else_statement <tree_node> (65)
        on left: 40 42
        on right: 37
    $@5 (66)
        on left: 39
        on right: 40
    $@6 (67)
        on left: 41
        on right: 42
    ret_st <tree_node> (68)
        on left: 43
        on right: 22
    var_dec <tree_node> (69)
        on left: 44
        on right: 5 23
    io_ops <tree_node> (70)
        on left: 45 46 47 48
        on right: 24
    expression <tree_node> (71)
        on left: 49 50 51 52
        on right: 26 33 34 43 46 47 48 59 72 73 74 75 76 77 78 79 80 81 83 87
    term <tree_node> (72)
        on left: 53 54 55 56 57 58 59 60
        on right: 64 65 66 73 74 75 76 77 78 79 80 83 84 85
    math_op <tree_node> (73)
        on left: 61 62 63
        on right: 61 62 70
    math_op_muldiv <tree_node> (74)
        on left: 64 65 66
        on right: 61 62 63 64 65
    set_op <tree_node> (75)
        on left: 67 68 69
        on right: 29 49
    operation <tree_node> (76)
        on left: 70 71 72 73 74 75 76 77 78 79 80 81
        on right: 38 50
    func_call <tree_node> (77)
        on left: 82
        on right: 51
    in_set <tree_node> (78)
        on left: 83
        on right: 32 67 68 69 71
    args_list <tree_node> (79)
        on left: 84 85 86
        on right: 82 84
    assign_value <tree_node> (80)
        on left: 87
        on right: 52


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    program            go to state 3
    declarations_list  go to state 4
    declaration        go to state 5
    func_dec           go to state 6
    var_dec            go to state 7


State 1

    4 declarations_list: error •

    $end  reduce using rule 4 (declarations_list)
    TYPE  reduce using rule 4 (declarations_list)


State 2

    9 func_dec: TYPE • ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC
   12         | TYPE • MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC
   44 var_dec: TYPE • ID SEMIC

    ID    shift, and go to state 8
    MAIN  shift, and go to state 9


State 3

    0 $accept: program • $end

    $end  shift, and go to state 10


State 4

    1 program: declarations_list •
    2 declarations_list: declarations_list • declaration

    TYPE  shift, and go to state 2

    $end  reduce using rule 1 (program)

    declaration  go to state 11
    func_dec     go to state 6
    var_dec      go to state 7


State 5

    3 declarations_list: declaration •

    $end  reduce using rule 3 (declarations_list)
    TYPE  reduce using rule 3 (declarations_list)


State 6

    6 declaration: func_dec •

    $end  reduce using rule 6 (declaration)
    TYPE  reduce using rule 6 (declaration)


State 7

    5 declaration: var_dec •

    $end  reduce using rule 5 (declaration)
    TYPE  reduce using rule 5 (declaration)


State 8

    9 func_dec: TYPE ID • PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC
   44 var_dec: TYPE ID • SEMIC

    PARENL  shift, and go to state 12
    SEMIC   shift, and go to state 13


State 9

   12 func_dec: TYPE MAIN • PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC

    PARENL  shift, and go to state 14


State 10

    0 $accept: program $end •

    $default  accept


State 11

    2 declarations_list: declarations_list declaration •

    $end  reduce using rule 2 (declarations_list)
    TYPE  reduce using rule 2 (declarations_list)


State 12

    9 func_dec: TYPE ID PARENL • $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC

    error   reduce using rule 7 ($@1)
    TYPE    reduce using rule 7 ($@1)
    COMMA   reduce using rule 7 ($@1)
    PARENR  reduce using rule 7 ($@1)

    $@1  go to state 15


State 13

   44 var_dec: TYPE ID SEMIC •

    $end  reduce using rule 44 (var_dec)
    TYPE  reduce using rule 44 (var_dec)


State 14

   12 func_dec: TYPE MAIN PARENL • $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC

    error   reduce using rule 10 ($@3)
    TYPE    reduce using rule 10 ($@3)
    COMMA   reduce using rule 10 ($@3)
    PARENR  reduce using rule 10 ($@3)

    $@3  go to state 16


State 15

    9 func_dec: TYPE ID PARENL $@1 • params_list PARENR STFUNC $@2 statement_list ENDFUNC

    error  shift, and go to state 17
    TYPE   shift, and go to state 18

    COMMA   reduce using rule 15 (params_list)
    PARENR  reduce using rule 15 (params_list)

    params_list  go to state 19
    parameter    go to state 20


State 16

   12 func_dec: TYPE MAIN PARENL $@3 • params_list PARENR STFUNC $@4 statement_list ENDFUNC

    error  shift, and go to state 17
    TYPE   shift, and go to state 18

    COMMA   reduce using rule 15 (params_list)
    PARENR  reduce using rule 15 (params_list)

    params_list  go to state 21
    parameter    go to state 20


State 17

   16 params_list: error •

    COMMA   reduce using rule 16 (params_list)
    PARENR  reduce using rule 16 (params_list)


State 18

   17 parameter: TYPE • ID

    ID  shift, and go to state 22


State 19

    9 func_dec: TYPE ID PARENL $@1 params_list • PARENR STFUNC $@2 statement_list ENDFUNC
   13 params_list: params_list • COMMA parameter

    COMMA   shift, and go to state 23
    PARENR  shift, and go to state 24


State 20

   14 params_list: parameter •

    COMMA   reduce using rule 14 (params_list)
    PARENR  reduce using rule 14 (params_list)


State 21

   12 func_dec: TYPE MAIN PARENL $@3 params_list • PARENR STFUNC $@4 statement_list ENDFUNC
   13 params_list: params_list • COMMA parameter

    COMMA   shift, and go to state 23
    PARENR  shift, and go to state 25


State 22

   17 parameter: TYPE ID •

    COMMA   reduce using rule 17 (parameter)
    PARENR  reduce using rule 17 (parameter)


State 23

   13 params_list: params_list COMMA • parameter

    TYPE  shift, and go to state 18

    parameter  go to state 26


State 24

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR • STFUNC $@2 statement_list ENDFUNC

    STFUNC  shift, and go to state 27


State 25

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR • STFUNC $@4 statement_list ENDFUNC

    STFUNC  shift, and go to state 28


State 26

   13 params_list: params_list COMMA parameter •

    COMMA   reduce using rule 13 (params_list)
    PARENR  reduce using rule 13 (params_list)


State 27

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC • $@2 statement_list ENDFUNC

    error       reduce using rule 8 ($@2)
    ID          reduce using rule 8 ($@2)
    TYPE        reduce using rule 8 ($@2)
    STRING      reduce using rule 8 ($@2)
    CHAR        reduce using rule 8 ($@2)
    EMPTY       reduce using rule 8 ($@2)
    ERRORTOKEN  reduce using rule 8 ($@2)
    INTEGER     reduce using rule 8 ($@2)
    DECIMAL     reduce using rule 8 ($@2)
    NEG         reduce using rule 8 ($@2)
    IF          reduce using rule 8 ($@2)
    FOR         reduce using rule 8 ($@2)
    READ        reduce using rule 8 ($@2)
    WRITE       reduce using rule 8 ($@2)
    WRITELN     reduce using rule 8 ($@2)
    RETURN      reduce using rule 8 ($@2)
    ISTYPE      reduce using rule 8 ($@2)
    ADDSET      reduce using rule 8 ($@2)
    REMOVE      reduce using rule 8 ($@2)
    EXISTS      reduce using rule 8 ($@2)
    FORALL      reduce using rule 8 ($@2)
    ENDFUNC     reduce using rule 8 ($@2)
    PARENL      reduce using rule 8 ($@2)

    $@2  go to state 29


State 28

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC • $@4 statement_list ENDFUNC

    error       reduce using rule 11 ($@4)
    ID          reduce using rule 11 ($@4)
    TYPE        reduce using rule 11 ($@4)
    STRING      reduce using rule 11 ($@4)
    CHAR        reduce using rule 11 ($@4)
    EMPTY       reduce using rule 11 ($@4)
    ERRORTOKEN  reduce using rule 11 ($@4)
    INTEGER     reduce using rule 11 ($@4)
    DECIMAL     reduce using rule 11 ($@4)
    NEG         reduce using rule 11 ($@4)
    IF          reduce using rule 11 ($@4)
    FOR         reduce using rule 11 ($@4)
    READ        reduce using rule 11 ($@4)
    WRITE       reduce using rule 11 ($@4)
    WRITELN     reduce using rule 11 ($@4)
    RETURN      reduce using rule 11 ($@4)
    ISTYPE      reduce using rule 11 ($@4)
    ADDSET      reduce using rule 11 ($@4)
    REMOVE      reduce using rule 11 ($@4)
    EXISTS      reduce using rule 11 ($@4)
    FORALL      reduce using rule 11 ($@4)
    ENDFUNC     reduce using rule 11 ($@4)
    PARENL      reduce using rule 11 ($@4)

    $@4  go to state 30


State 29

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 32


State 30

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 33


State 31

   20 statement_list: error •

    ID          reduce using rule 20 (statement_list)
    TYPE        reduce using rule 20 (statement_list)
    STRING      reduce using rule 20 (statement_list)
    CHAR        reduce using rule 20 (statement_list)
    EMPTY       reduce using rule 20 (statement_list)
    ERRORTOKEN  reduce using rule 20 (statement_list)
    INTEGER     reduce using rule 20 (statement_list)
    DECIMAL     reduce using rule 20 (statement_list)
    NEG         reduce using rule 20 (statement_list)
    IF          reduce using rule 20 (statement_list)
    FOR         reduce using rule 20 (statement_list)
    READ        reduce using rule 20 (statement_list)
    WRITE       reduce using rule 20 (statement_list)
    WRITELN     reduce using rule 20 (statement_list)
    RETURN      reduce using rule 20 (statement_list)
    ISTYPE      reduce using rule 20 (statement_list)
    ADDSET      reduce using rule 20 (statement_list)
    REMOVE      reduce using rule 20 (statement_list)
    EXISTS      reduce using rule 20 (statement_list)
    FORALL      reduce using rule 20 (statement_list)
    ENDFUNC     reduce using rule 20 (statement_list)
    PARENL      reduce using rule 20 (statement_list)


State 32

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list • ENDFUNC
   18 statement_list: statement_list • statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 54
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_op               go to state 68
    math_op_muldiv        go to state 69
    set_op                go to state 70
    operation             go to state 71
    func_call             go to state 72
    in_set                go to state 73
    assign_value          go to state 74


State 33

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list • ENDFUNC
   18 statement_list: statement_list • statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 75
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_op               go to state 68
    math_op_muldiv        go to state 69
    set_op                go to state 70
    operation             go to state 71
    func_call             go to state 72
    in_set                go to state 73
    assign_value          go to state 74


State 34

   53 term: ID •
   82 func_call: ID • PARENL args_list PARENR
   87 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 76
    PARENL  shift, and go to state 77

    ADD        reduce using rule 53 (term)
    SUB        reduce using rule 53 (term)
    MULT       reduce using rule 53 (term)
    DIV        reduce using rule 53 (term)
    OR         reduce using rule 53 (term)
    AND        reduce using rule 53 (term)
    SMALLER    reduce using rule 53 (term)
    GREATER    reduce using rule 53 (term)
    SMALLEQ    reduce using rule 53 (term)
    GREATEQ    reduce using rule 53 (term)
    EQUALS     reduce using rule 53 (term)
    DIFFERENT  reduce using rule 53 (term)
    IN         reduce using rule 53 (term)
    SEMIC      reduce using rule 53 (term)


State 35

   44 var_dec: TYPE • ID SEMIC

    ID  shift, and go to state 78


State 36

   57 term: STRING •

    ADD        reduce using rule 57 (term)
    SUB        reduce using rule 57 (term)
    MULT       reduce using rule 57 (term)
    DIV        reduce using rule 57 (term)
    OR         reduce using rule 57 (term)
    AND        reduce using rule 57 (term)
    SMALLER    reduce using rule 57 (term)
    GREATER    reduce using rule 57 (term)
    SMALLEQ    reduce using rule 57 (term)
    GREATEQ    reduce using rule 57 (term)
    EQUALS     reduce using rule 57 (term)
    DIFFERENT  reduce using rule 57 (term)
    IN         reduce using rule 57 (term)
    SEMIC      reduce using rule 57 (term)


State 37

   56 term: CHAR •

    ADD        reduce using rule 56 (term)
    SUB        reduce using rule 56 (term)
    MULT       reduce using rule 56 (term)
    DIV        reduce using rule 56 (term)
    OR         reduce using rule 56 (term)
    AND        reduce using rule 56 (term)
    SMALLER    reduce using rule 56 (term)
    GREATER    reduce using rule 56 (term)
    SMALLEQ    reduce using rule 56 (term)
    GREATEQ    reduce using rule 56 (term)
    EQUALS     reduce using rule 56 (term)
    DIFFERENT  reduce using rule 56 (term)
    IN         reduce using rule 56 (term)
    SEMIC      reduce using rule 56 (term)


State 38

   58 term: EMPTY •

    ADD        reduce using rule 58 (term)
    SUB        reduce using rule 58 (term)
    MULT       reduce using rule 58 (term)
    DIV        reduce using rule 58 (term)
    OR         reduce using rule 58 (term)
    AND        reduce using rule 58 (term)
    SMALLER    reduce using rule 58 (term)
    GREATER    reduce using rule 58 (term)
    SMALLEQ    reduce using rule 58 (term)
    GREATEQ    reduce using rule 58 (term)
    EQUALS     reduce using rule 58 (term)
    DIFFERENT  reduce using rule 58 (term)
    IN         reduce using rule 58 (term)
    SEMIC      reduce using rule 58 (term)


State 39

   60 term: ERRORTOKEN •

    ADD        reduce using rule 60 (term)
    SUB        reduce using rule 60 (term)
    MULT       reduce using rule 60 (term)
    DIV        reduce using rule 60 (term)
    OR         reduce using rule 60 (term)
    AND        reduce using rule 60 (term)
    SMALLER    reduce using rule 60 (term)
    GREATER    reduce using rule 60 (term)
    SMALLEQ    reduce using rule 60 (term)
    GREATEQ    reduce using rule 60 (term)
    EQUALS     reduce using rule 60 (term)
    DIFFERENT  reduce using rule 60 (term)
    IN         reduce using rule 60 (term)
    SEMIC      reduce using rule 60 (term)


State 40

   54 term: INTEGER •

    ADD        reduce using rule 54 (term)
    SUB        reduce using rule 54 (term)
    MULT       reduce using rule 54 (term)
    DIV        reduce using rule 54 (term)
    OR         reduce using rule 54 (term)
    AND        reduce using rule 54 (term)
    SMALLER    reduce using rule 54 (term)
    GREATER    reduce using rule 54 (term)
    SMALLEQ    reduce using rule 54 (term)
    GREATEQ    reduce using rule 54 (term)
    EQUALS     reduce using rule 54 (term)
    DIFFERENT  reduce using rule 54 (term)
    IN         reduce using rule 54 (term)
    SEMIC      reduce using rule 54 (term)


State 41

   55 term: DECIMAL •

    ADD        reduce using rule 55 (term)
    SUB        reduce using rule 55 (term)
    MULT       reduce using rule 55 (term)
    DIV        reduce using rule 55 (term)
    OR         reduce using rule 55 (term)
    AND        reduce using rule 55 (term)
    SMALLER    reduce using rule 55 (term)
    GREATER    reduce using rule 55 (term)
    SMALLEQ    reduce using rule 55 (term)
    GREATEQ    reduce using rule 55 (term)
    EQUALS     reduce using rule 55 (term)
    DIFFERENT  reduce using rule 55 (term)
    IN         reduce using rule 55 (term)
    SEMIC      reduce using rule 55 (term)


State 42

   81 operation: NEG • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 79
    term            go to state 67
    math_op         go to state 68
    math_op_muldiv  go to state 69
    set_op          go to state 70
    operation       go to state 71
    func_call       go to state 72
    in_set          go to state 73
    assign_value    go to state 74


State 43

   38 if_statement: IF • PARENL operation PARENR

    PARENL  shift, and go to state 80


State 44

   31 for_statement: FOR • PARENL for_body PARENR

    PARENL  shift, and go to state 81


State 45

   45 io_ops: READ • PARENL PARENR SEMIC
   46       | READ • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 82


State 46

   47 io_ops: WRITE • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 83


State 47

   48 io_ops: WRITELN • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 84


State 48

   43 ret_st: RETURN • expression SEMIC

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 85
    term            go to state 67
    math_op         go to state 68
    math_op_muldiv  go to state 69
    set_op          go to state 70
    operation       go to state 71
    func_call       go to state 72
    in_set          go to state 73
    assign_value    go to state 74


State 49

   72 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 86


State 50

   67 set_op: ADDSET • PARENL in_set PARENR

    PARENL  shift, and go to state 87


State 51

   68 set_op: REMOVE • PARENL in_set PARENR

    PARENL  shift, and go to state 88


State 52

   69 set_op: EXISTS • PARENL in_set PARENR

    PARENL  shift, and go to state 89


State 53

   32 forall_statement: FORALL • PARENL in_set PARENR

    PARENL  shift, and go to state 90


State 54

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC •

    $end  reduce using rule 9 (func_dec)
    TYPE  reduce using rule 9 (func_dec)


State 55

   59 term: PARENL • expression PARENR

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 91
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 56

   18 statement_list: statement_list statement •

    ID          reduce using rule 18 (statement_list)
    TYPE        reduce using rule 18 (statement_list)
    STRING      reduce using rule 18 (statement_list)
    CHAR        reduce using rule 18 (statement_list)
    EMPTY       reduce using rule 18 (statement_list)
    ERRORTOKEN  reduce using rule 18 (statement_list)
    INTEGER     reduce using rule 18 (statement_list)
    DECIMAL     reduce using rule 18 (statement_list)
    NEG         reduce using rule 18 (statement_list)
    IF          reduce using rule 18 (statement_list)
    FOR         reduce using rule 18 (statement_list)
    READ        reduce using rule 18 (statement_list)
    WRITE       reduce using rule 18 (statement_list)
    WRITELN     reduce using rule 18 (statement_list)
    RETURN      reduce using rule 18 (statement_list)
    ISTYPE      reduce using rule 18 (statement_list)
    ADDSET      reduce using rule 18 (statement_list)
    REMOVE      reduce using rule 18 (statement_list)
    EXISTS      reduce using rule 18 (statement_list)
    FORALL      reduce using rule 18 (statement_list)
    ENDFUNC     reduce using rule 18 (statement_list)
    PARENL      reduce using rule 18 (statement_list)


State 57

   21 statement: expression_statement •

    ID          reduce using rule 21 (statement)
    TYPE        reduce using rule 21 (statement)
    STRING      reduce using rule 21 (statement)
    CHAR        reduce using rule 21 (statement)
    EMPTY       reduce using rule 21 (statement)
    ERRORTOKEN  reduce using rule 21 (statement)
    INTEGER     reduce using rule 21 (statement)
    DECIMAL     reduce using rule 21 (statement)
    NEG         reduce using rule 21 (statement)
    IF          reduce using rule 21 (statement)
    FOR         reduce using rule 21 (statement)
    READ        reduce using rule 21 (statement)
    WRITE       reduce using rule 21 (statement)
    WRITELN     reduce using rule 21 (statement)
    RETURN      reduce using rule 21 (statement)
    ISTYPE      reduce using rule 21 (statement)
    ADDSET      reduce using rule 21 (statement)
    REMOVE      reduce using rule 21 (statement)
    EXISTS      reduce using rule 21 (statement)
    FORALL      reduce using rule 21 (statement)
    ENDFUNC     reduce using rule 21 (statement)
    PARENL      reduce using rule 21 (statement)


State 58

   25 statement: basic_ops •

    ID          reduce using rule 25 (statement)
    TYPE        reduce using rule 25 (statement)
    STRING      reduce using rule 25 (statement)
    CHAR        reduce using rule 25 (statement)
    EMPTY       reduce using rule 25 (statement)
    ERRORTOKEN  reduce using rule 25 (statement)
    INTEGER     reduce using rule 25 (statement)
    DECIMAL     reduce using rule 25 (statement)
    NEG         reduce using rule 25 (statement)
    IF          reduce using rule 25 (statement)
    FOR         reduce using rule 25 (statement)
    READ        reduce using rule 25 (statement)
    WRITE       reduce using rule 25 (statement)
    WRITELN     reduce using rule 25 (statement)
    RETURN      reduce using rule 25 (statement)
    ISTYPE      reduce using rule 25 (statement)
    ADDSET      reduce using rule 25 (statement)
    REMOVE      reduce using rule 25 (statement)
    EXISTS      reduce using rule 25 (statement)
    FORALL      reduce using rule 25 (statement)
    ENDFUNC     reduce using rule 25 (statement)
    PARENL      reduce using rule 25 (statement)


State 59

   28 basic_ops: for_statement • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 92


State 60

   29 basic_ops: forall_statement • set_op SEMIC
   30          | forall_statement • STFUNC statement_list ENDFUNC

    ADDSET  shift, and go to state 50
    REMOVE  shift, and go to state 51
    EXISTS  shift, and go to state 52
    STFUNC  shift, and go to state 93

    set_op  go to state 94


State 61

   27 basic_ops: if_ops •

    ID          reduce using rule 27 (basic_ops)
    TYPE        reduce using rule 27 (basic_ops)
    STRING      reduce using rule 27 (basic_ops)
    CHAR        reduce using rule 27 (basic_ops)
    EMPTY       reduce using rule 27 (basic_ops)
    ERRORTOKEN  reduce using rule 27 (basic_ops)
    INTEGER     reduce using rule 27 (basic_ops)
    DECIMAL     reduce using rule 27 (basic_ops)
    NEG         reduce using rule 27 (basic_ops)
    IF          reduce using rule 27 (basic_ops)
    FOR         reduce using rule 27 (basic_ops)
    READ        reduce using rule 27 (basic_ops)
    WRITE       reduce using rule 27 (basic_ops)
    WRITELN     reduce using rule 27 (basic_ops)
    RETURN      reduce using rule 27 (basic_ops)
    ISTYPE      reduce using rule 27 (basic_ops)
    ADDSET      reduce using rule 27 (basic_ops)
    REMOVE      reduce using rule 27 (basic_ops)
    EXISTS      reduce using rule 27 (basic_ops)
    FORALL      reduce using rule 27 (basic_ops)
    ENDFUNC     reduce using rule 27 (basic_ops)
    PARENL      reduce using rule 27 (basic_ops)


State 62

   35 if_ops: if_statement • statement
   36       | if_statement • STFUNC statement_list ENDFUNC
   37       | if_statement • STFUNC statement_list ENDFUNC else_statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    STFUNC      shift, and go to state 95
    PARENL      shift, and go to state 55

    statement             go to state 96
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_op               go to state 68
    math_op_muldiv        go to state 69
    set_op                go to state 70
    operation             go to state 71
    func_call             go to state 72
    in_set                go to state 73
    assign_value          go to state 74


State 63

   22 statement: ret_st •

    ID          reduce using rule 22 (statement)
    TYPE        reduce using rule 22 (statement)
    STRING      reduce using rule 22 (statement)
    CHAR        reduce using rule 22 (statement)
    EMPTY       reduce using rule 22 (statement)
    ERRORTOKEN  reduce using rule 22 (statement)
    INTEGER     reduce using rule 22 (statement)
    DECIMAL     reduce using rule 22 (statement)
    NEG         reduce using rule 22 (statement)
    IF          reduce using rule 22 (statement)
    FOR         reduce using rule 22 (statement)
    READ        reduce using rule 22 (statement)
    WRITE       reduce using rule 22 (statement)
    WRITELN     reduce using rule 22 (statement)
    RETURN      reduce using rule 22 (statement)
    ISTYPE      reduce using rule 22 (statement)
    ADDSET      reduce using rule 22 (statement)
    REMOVE      reduce using rule 22 (statement)
    EXISTS      reduce using rule 22 (statement)
    FORALL      reduce using rule 22 (statement)
    ENDFUNC     reduce using rule 22 (statement)
    PARENL      reduce using rule 22 (statement)


State 64

   23 statement: var_dec •

    ID          reduce using rule 23 (statement)
    TYPE        reduce using rule 23 (statement)
    STRING      reduce using rule 23 (statement)
    CHAR        reduce using rule 23 (statement)
    EMPTY       reduce using rule 23 (statement)
    ERRORTOKEN  reduce using rule 23 (statement)
    INTEGER     reduce using rule 23 (statement)
    DECIMAL     reduce using rule 23 (statement)
    NEG         reduce using rule 23 (statement)
    IF          reduce using rule 23 (statement)
    FOR         reduce using rule 23 (statement)
    READ        reduce using rule 23 (statement)
    WRITE       reduce using rule 23 (statement)
    WRITELN     reduce using rule 23 (statement)
    RETURN      reduce using rule 23 (statement)
    ISTYPE      reduce using rule 23 (statement)
    ADDSET      reduce using rule 23 (statement)
    REMOVE      reduce using rule 23 (statement)
    EXISTS      reduce using rule 23 (statement)
    FORALL      reduce using rule 23 (statement)
    ENDFUNC     reduce using rule 23 (statement)
    PARENL      reduce using rule 23 (statement)


State 65

   24 statement: io_ops •

    ID          reduce using rule 24 (statement)
    TYPE        reduce using rule 24 (statement)
    STRING      reduce using rule 24 (statement)
    CHAR        reduce using rule 24 (statement)
    EMPTY       reduce using rule 24 (statement)
    ERRORTOKEN  reduce using rule 24 (statement)
    INTEGER     reduce using rule 24 (statement)
    DECIMAL     reduce using rule 24 (statement)
    NEG         reduce using rule 24 (statement)
    IF          reduce using rule 24 (statement)
    FOR         reduce using rule 24 (statement)
    READ        reduce using rule 24 (statement)
    WRITE       reduce using rule 24 (statement)
    WRITELN     reduce using rule 24 (statement)
    RETURN      reduce using rule 24 (statement)
    ISTYPE      reduce using rule 24 (statement)
    ADDSET      reduce using rule 24 (statement)
    REMOVE      reduce using rule 24 (statement)
    EXISTS      reduce using rule 24 (statement)
    FORALL      reduce using rule 24 (statement)
    ENDFUNC     reduce using rule 24 (statement)
    PARENL      reduce using rule 24 (statement)


State 66

   26 expression_statement: expression • SEMIC

    SEMIC  shift, and go to state 97


State 67

   66 math_op_muldiv: term •
   73 operation: term • SMALLER expression
   74          | term • GREATER expression
   75          | term • SMALLEQ expression
   76          | term • GREATEQ expression
   77          | term • EQUALS expression
   78          | term • DIFFERENT expression
   79          | term • OR expression
   80          | term • AND expression
   83 in_set: term • IN expression

    OR         shift, and go to state 98
    AND        shift, and go to state 99
    SMALLER    shift, and go to state 100
    GREATER    shift, and go to state 101
    SMALLEQ    shift, and go to state 102
    GREATEQ    shift, and go to state 103
    EQUALS     shift, and go to state 104
    DIFFERENT  shift, and go to state 105
    IN         shift, and go to state 106

    ADD    reduce using rule 66 (math_op_muldiv)
    SUB    reduce using rule 66 (math_op_muldiv)
    MULT   reduce using rule 66 (math_op_muldiv)
    DIV    reduce using rule 66 (math_op_muldiv)
    SEMIC  reduce using rule 66 (math_op_muldiv)


State 68

   61 math_op: math_op • ADD math_op_muldiv
   62        | math_op • SUB math_op_muldiv
   70 operation: math_op •

    ADD  shift, and go to state 107
    SUB  shift, and go to state 108

    SEMIC  reduce using rule 70 (operation)


State 69

   63 math_op: math_op_muldiv •
   64 math_op_muldiv: math_op_muldiv • DIV term
   65               | math_op_muldiv • MULT term

    MULT  shift, and go to state 109
    DIV   shift, and go to state 110

    ADD    reduce using rule 63 (math_op)
    SUB    reduce using rule 63 (math_op)
    SEMIC  reduce using rule 63 (math_op)


State 70

   49 expression: set_op •

    SEMIC  reduce using rule 49 (expression)


State 71

   50 expression: operation •

    SEMIC  reduce using rule 50 (expression)


State 72

   51 expression: func_call •

    SEMIC  reduce using rule 51 (expression)


State 73

   71 operation: in_set •

    SEMIC  reduce using rule 71 (operation)


State 74

   52 expression: assign_value •

    SEMIC  reduce using rule 52 (expression)


State 75

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC •

    $end  reduce using rule 12 (func_dec)
    TYPE  reduce using rule 12 (func_dec)


State 76

   87 assign_value: ID ASSIGN • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 111
    term            go to state 67
    math_op         go to state 68
    math_op_muldiv  go to state 69
    set_op          go to state 70
    operation       go to state 71
    func_call       go to state 72
    in_set          go to state 73
    assign_value    go to state 74


State 77

   82 func_call: ID PARENL • args_list PARENR

    ID          shift, and go to state 112
    STRING      shift, and go to state 202
    CHAR        shift, and go to state 203
    EMPTY       shift, and go to state 204
    ERRORTOKEN  shift, and go to state 205
    INTEGER     shift, and go to state 206
    DECIMAL     shift, and go to state 207
    PARENL      shift, and go to state 208

    COMMA   reduce using rule 86 (args_list)
    PARENR  reduce using rule 86 (args_list)

    term       go to state 113
    args_list  go to state 114


State 78

   44 var_dec: TYPE ID • SEMIC

    SEMIC  shift, and go to state 209


State 79

   81 operation: NEG expression •

    SEMIC  reduce using rule 81 (operation)


State 80

   38 if_statement: IF PARENL • operation PARENR

    ID          shift, and go to state 210
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    PARENL      shift, and go to state 193

    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    operation       go to state 115
    in_set          go to state 200


State 81

   31 for_statement: FOR PARENL • for_body PARENR

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55
    SEMIC       shift, and go to state 116

    expression_statement  go to state 117
    for_body              go to state 118
    expression            go to state 211
    term                  go to state 67
    math_op               go to state 68
    math_op_muldiv        go to state 69
    set_op                go to state 70
    operation             go to state 71
    func_call             go to state 72
    in_set                go to state 73
    assign_value          go to state 74


State 82

   45 io_ops: READ PARENL • PARENR SEMIC
   46       | READ PARENL • expression PARENR SEMIC

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193
    PARENR      shift, and go to state 119

    expression      go to state 120
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 83

   47 io_ops: WRITE PARENL • expression PARENR SEMIC

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 121
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 84

   48 io_ops: WRITELN PARENL • expression PARENR SEMIC

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 122
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 85

   43 ret_st: RETURN expression • SEMIC

    SEMIC  shift, and go to state 123


State 86

   72 operation: ISTYPE PARENL • expression PARENR

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 124
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 87

   67 set_op: ADDSET PARENL • in_set PARENR

    ID          shift, and go to state 212
    STRING      shift, and go to state 213
    CHAR        shift, and go to state 214
    EMPTY       shift, and go to state 215
    ERRORTOKEN  shift, and go to state 216
    INTEGER     shift, and go to state 217
    DECIMAL     shift, and go to state 218
    PARENL      shift, and go to state 219

    term    go to state 125
    in_set  go to state 126


State 88

   68 set_op: REMOVE PARENL • in_set PARENR

    ID          shift, and go to state 212
    STRING      shift, and go to state 213
    CHAR        shift, and go to state 214
    EMPTY       shift, and go to state 215
    ERRORTOKEN  shift, and go to state 216
    INTEGER     shift, and go to state 217
    DECIMAL     shift, and go to state 218
    PARENL      shift, and go to state 219

    term    go to state 125
    in_set  go to state 127


State 89

   69 set_op: EXISTS PARENL • in_set PARENR

    ID          shift, and go to state 212
    STRING      shift, and go to state 213
    CHAR        shift, and go to state 214
    EMPTY       shift, and go to state 215
    ERRORTOKEN  shift, and go to state 216
    INTEGER     shift, and go to state 217
    DECIMAL     shift, and go to state 218
    PARENL      shift, and go to state 219

    term    go to state 125
    in_set  go to state 128


State 90

   32 forall_statement: FORALL PARENL • in_set PARENR

    ID          shift, and go to state 212
    STRING      shift, and go to state 213
    CHAR        shift, and go to state 214
    EMPTY       shift, and go to state 215
    ERRORTOKEN  shift, and go to state 216
    INTEGER     shift, and go to state 217
    DECIMAL     shift, and go to state 218
    PARENL      shift, and go to state 219

    term    go to state 125
    in_set  go to state 129


State 91

   59 term: PARENL expression • PARENR

    PARENR  shift, and go to state 130


State 92

   28 basic_ops: for_statement STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 131


State 93

   30 basic_ops: forall_statement STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 132


State 94

   29 basic_ops: forall_statement set_op • SEMIC

    SEMIC  shift, and go to state 133


State 95

   36 if_ops: if_statement STFUNC • statement_list ENDFUNC
   37       | if_statement STFUNC • statement_list ENDFUNC else_statement

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 134


State 96

   35 if_ops: if_statement statement •

    ID          reduce using rule 35 (if_ops)
    TYPE        reduce using rule 35 (if_ops)
    STRING      reduce using rule 35 (if_ops)
    CHAR        reduce using rule 35 (if_ops)
    EMPTY       reduce using rule 35 (if_ops)
    ERRORTOKEN  reduce using rule 35 (if_ops)
    INTEGER     reduce using rule 35 (if_ops)
    DECIMAL     reduce using rule 35 (if_ops)
    NEG         reduce using rule 35 (if_ops)
    IF          reduce using rule 35 (if_ops)
    FOR         reduce using rule 35 (if_ops)
    READ        reduce using rule 35 (if_ops)
    WRITE       reduce using rule 35 (if_ops)
    WRITELN     reduce using rule 35 (if_ops)
    RETURN      reduce using rule 35 (if_ops)
    ISTYPE      reduce using rule 35 (if_ops)
    ADDSET      reduce using rule 35 (if_ops)
    REMOVE      reduce using rule 35 (if_ops)
    EXISTS      reduce using rule 35 (if_ops)
    FORALL      reduce using rule 35 (if_ops)
    ENDFUNC     reduce using rule 35 (if_ops)
    PARENL      reduce using rule 35 (if_ops)


State 97

   26 expression_statement: expression SEMIC •

    ID          reduce using rule 26 (expression_statement)
    TYPE        reduce using rule 26 (expression_statement)
    STRING      reduce using rule 26 (expression_statement)
    CHAR        reduce using rule 26 (expression_statement)
    EMPTY       reduce using rule 26 (expression_statement)
    ERRORTOKEN  reduce using rule 26 (expression_statement)
    INTEGER     reduce using rule 26 (expression_statement)
    DECIMAL     reduce using rule 26 (expression_statement)
    NEG         reduce using rule 26 (expression_statement)
    IF          reduce using rule 26 (expression_statement)
    FOR         reduce using rule 26 (expression_statement)
    READ        reduce using rule 26 (expression_statement)
    WRITE       reduce using rule 26 (expression_statement)
    WRITELN     reduce using rule 26 (expression_statement)
    RETURN      reduce using rule 26 (expression_statement)
    ISTYPE      reduce using rule 26 (expression_statement)
    ADDSET      reduce using rule 26 (expression_statement)
    REMOVE      reduce using rule 26 (expression_statement)
    EXISTS      reduce using rule 26 (expression_statement)
    FORALL      reduce using rule 26 (expression_statement)
    ENDFUNC     reduce using rule 26 (expression_statement)
    PARENL      reduce using rule 26 (expression_statement)


State 98

   79 operation: term OR • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 135
    term            go to state 67
    math_op         go to state 68
    math_op_muldiv  go to state 69
    set_op          go to state 70
    operation       go to state 71
    func_call       go to state 72
    in_set          go to state 73
    assign_value    go to state 74


State 99

   80 operation: term AND • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 136
    term            go to state 67
    math_op         go to state 68
    math_op_muldiv  go to state 69
    set_op          go to state 70
    operation       go to state 71
    func_call       go to state 72
    in_set          go to state 73
    assign_value    go to state 74


State 100

   73 operation: term SMALLER • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 137
    term            go to state 67
    math_op         go to state 68
    math_op_muldiv  go to state 69
    set_op          go to state 70
    operation       go to state 71
    func_call       go to state 72
    in_set          go to state 73
    assign_value    go to state 74


State 101

   74 operation: term GREATER • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 138
    term            go to state 67
    math_op         go to state 68
    math_op_muldiv  go to state 69
    set_op          go to state 70
    operation       go to state 71
    func_call       go to state 72
    in_set          go to state 73
    assign_value    go to state 74


State 102

   75 operation: term SMALLEQ • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 139
    term            go to state 67
    math_op         go to state 68
    math_op_muldiv  go to state 69
    set_op          go to state 70
    operation       go to state 71
    func_call       go to state 72
    in_set          go to state 73
    assign_value    go to state 74


State 103

   76 operation: term GREATEQ • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 140
    term            go to state 67
    math_op         go to state 68
    math_op_muldiv  go to state 69
    set_op          go to state 70
    operation       go to state 71
    func_call       go to state 72
    in_set          go to state 73
    assign_value    go to state 74


State 104

   77 operation: term EQUALS • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 141
    term            go to state 67
    math_op         go to state 68
    math_op_muldiv  go to state 69
    set_op          go to state 70
    operation       go to state 71
    func_call       go to state 72
    in_set          go to state 73
    assign_value    go to state 74


State 105

   78 operation: term DIFFERENT • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 142
    term            go to state 67
    math_op         go to state 68
    math_op_muldiv  go to state 69
    set_op          go to state 70
    operation       go to state 71
    func_call       go to state 72
    in_set          go to state 73
    assign_value    go to state 74


State 106

   83 in_set: term IN • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 143
    term            go to state 67
    math_op         go to state 68
    math_op_muldiv  go to state 69
    set_op          go to state 70
    operation       go to state 71
    func_call       go to state 72
    in_set          go to state 73
    assign_value    go to state 74


State 107

   61 math_op: math_op ADD • math_op_muldiv

    ID          shift, and go to state 220
    STRING      shift, and go to state 221
    CHAR        shift, and go to state 222
    EMPTY       shift, and go to state 223
    ERRORTOKEN  shift, and go to state 224
    INTEGER     shift, and go to state 225
    DECIMAL     shift, and go to state 226
    PARENL      shift, and go to state 227

    term            go to state 144
    math_op_muldiv  go to state 145


State 108

   62 math_op: math_op SUB • math_op_muldiv

    ID          shift, and go to state 220
    STRING      shift, and go to state 221
    CHAR        shift, and go to state 222
    EMPTY       shift, and go to state 223
    ERRORTOKEN  shift, and go to state 224
    INTEGER     shift, and go to state 225
    DECIMAL     shift, and go to state 226
    PARENL      shift, and go to state 227

    term            go to state 144
    math_op_muldiv  go to state 146


State 109

   65 math_op_muldiv: math_op_muldiv MULT • term

    ID          shift, and go to state 220
    STRING      shift, and go to state 221
    CHAR        shift, and go to state 222
    EMPTY       shift, and go to state 223
    ERRORTOKEN  shift, and go to state 224
    INTEGER     shift, and go to state 225
    DECIMAL     shift, and go to state 226
    PARENL      shift, and go to state 227

    term  go to state 147


State 110

   64 math_op_muldiv: math_op_muldiv DIV • term

    ID          shift, and go to state 220
    STRING      shift, and go to state 221
    CHAR        shift, and go to state 222
    EMPTY       shift, and go to state 223
    ERRORTOKEN  shift, and go to state 224
    INTEGER     shift, and go to state 225
    DECIMAL     shift, and go to state 226
    PARENL      shift, and go to state 227

    term  go to state 148


State 111

   87 assign_value: ID ASSIGN expression •

    SEMIC  reduce using rule 87 (assign_value)


State 112

   53 term: ID •

    COMMA   reduce using rule 53 (term)
    PARENR  reduce using rule 53 (term)


State 113

   85 args_list: term •

    COMMA   reduce using rule 85 (args_list)
    PARENR  reduce using rule 85 (args_list)


State 114

   82 func_call: ID PARENL args_list • PARENR
   84 args_list: args_list • COMMA term

    COMMA   shift, and go to state 149
    PARENR  shift, and go to state 150


State 115

   38 if_statement: IF PARENL operation • PARENR

    PARENR  shift, and go to state 151


State 116

   34 for_body: SEMIC • expression_statement expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression_statement  go to state 152
    expression            go to state 211
    term                  go to state 67
    math_op               go to state 68
    math_op_muldiv        go to state 69
    set_op                go to state 70
    operation             go to state 71
    func_call             go to state 72
    in_set                go to state 73
    assign_value          go to state 74


State 117

   33 for_body: expression_statement • expression_statement expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression_statement  go to state 153
    expression            go to state 211
    term                  go to state 67
    math_op               go to state 68
    math_op_muldiv        go to state 69
    set_op                go to state 70
    operation             go to state 71
    func_call             go to state 72
    in_set                go to state 73
    assign_value          go to state 74


State 118

   31 for_statement: FOR PARENL for_body • PARENR

    PARENR  shift, and go to state 154


State 119

   45 io_ops: READ PARENL PARENR • SEMIC

    SEMIC  shift, and go to state 155


State 120

   46 io_ops: READ PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 156


State 121

   47 io_ops: WRITE PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 157


State 122

   48 io_ops: WRITELN PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 158


State 123

   43 ret_st: RETURN expression SEMIC •

    ID          reduce using rule 43 (ret_st)
    TYPE        reduce using rule 43 (ret_st)
    STRING      reduce using rule 43 (ret_st)
    CHAR        reduce using rule 43 (ret_st)
    EMPTY       reduce using rule 43 (ret_st)
    ERRORTOKEN  reduce using rule 43 (ret_st)
    INTEGER     reduce using rule 43 (ret_st)
    DECIMAL     reduce using rule 43 (ret_st)
    NEG         reduce using rule 43 (ret_st)
    IF          reduce using rule 43 (ret_st)
    FOR         reduce using rule 43 (ret_st)
    READ        reduce using rule 43 (ret_st)
    WRITE       reduce using rule 43 (ret_st)
    WRITELN     reduce using rule 43 (ret_st)
    RETURN      reduce using rule 43 (ret_st)
    ISTYPE      reduce using rule 43 (ret_st)
    ADDSET      reduce using rule 43 (ret_st)
    REMOVE      reduce using rule 43 (ret_st)
    EXISTS      reduce using rule 43 (ret_st)
    FORALL      reduce using rule 43 (ret_st)
    ENDFUNC     reduce using rule 43 (ret_st)
    PARENL      reduce using rule 43 (ret_st)


State 124

   72 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 159


State 125

   83 in_set: term • IN expression

    IN  shift, and go to state 228


State 126

   67 set_op: ADDSET PARENL in_set • PARENR

    PARENR  shift, and go to state 160


State 127

   68 set_op: REMOVE PARENL in_set • PARENR

    PARENR  shift, and go to state 161


State 128

   69 set_op: EXISTS PARENL in_set • PARENR

    PARENR  shift, and go to state 162


State 129

   32 forall_statement: FORALL PARENL in_set • PARENR

    PARENR  shift, and go to state 163


State 130

   59 term: PARENL expression PARENR •

    ADD        reduce using rule 59 (term)
    SUB        reduce using rule 59 (term)
    MULT       reduce using rule 59 (term)
    DIV        reduce using rule 59 (term)
    OR         reduce using rule 59 (term)
    AND        reduce using rule 59 (term)
    SMALLER    reduce using rule 59 (term)
    GREATER    reduce using rule 59 (term)
    SMALLEQ    reduce using rule 59 (term)
    GREATEQ    reduce using rule 59 (term)
    EQUALS     reduce using rule 59 (term)
    DIFFERENT  reduce using rule 59 (term)
    IN         reduce using rule 59 (term)
    SEMIC      reduce using rule 59 (term)


State 131

   18 statement_list: statement_list • statement
   28 basic_ops: for_statement STFUNC statement_list • ENDFUNC

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 164
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_op               go to state 68
    math_op_muldiv        go to state 69
    set_op                go to state 70
    operation             go to state 71
    func_call             go to state 72
    in_set                go to state 73
    assign_value          go to state 74


State 132

   18 statement_list: statement_list • statement
   30 basic_ops: forall_statement STFUNC statement_list • ENDFUNC

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 165
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_op               go to state 68
    math_op_muldiv        go to state 69
    set_op                go to state 70
    operation             go to state 71
    func_call             go to state 72
    in_set                go to state 73
    assign_value          go to state 74


State 133

   29 basic_ops: forall_statement set_op SEMIC •

    ID          reduce using rule 29 (basic_ops)
    TYPE        reduce using rule 29 (basic_ops)
    STRING      reduce using rule 29 (basic_ops)
    CHAR        reduce using rule 29 (basic_ops)
    EMPTY       reduce using rule 29 (basic_ops)
    ERRORTOKEN  reduce using rule 29 (basic_ops)
    INTEGER     reduce using rule 29 (basic_ops)
    DECIMAL     reduce using rule 29 (basic_ops)
    NEG         reduce using rule 29 (basic_ops)
    IF          reduce using rule 29 (basic_ops)
    FOR         reduce using rule 29 (basic_ops)
    READ        reduce using rule 29 (basic_ops)
    WRITE       reduce using rule 29 (basic_ops)
    WRITELN     reduce using rule 29 (basic_ops)
    RETURN      reduce using rule 29 (basic_ops)
    ISTYPE      reduce using rule 29 (basic_ops)
    ADDSET      reduce using rule 29 (basic_ops)
    REMOVE      reduce using rule 29 (basic_ops)
    EXISTS      reduce using rule 29 (basic_ops)
    FORALL      reduce using rule 29 (basic_ops)
    ENDFUNC     reduce using rule 29 (basic_ops)
    PARENL      reduce using rule 29 (basic_ops)


State 134

   18 statement_list: statement_list • statement
   36 if_ops: if_statement STFUNC statement_list • ENDFUNC
   37       | if_statement STFUNC statement_list • ENDFUNC else_statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 166
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_op               go to state 68
    math_op_muldiv        go to state 69
    set_op                go to state 70
    operation             go to state 71
    func_call             go to state 72
    in_set                go to state 73
    assign_value          go to state 74


State 135

   79 operation: term OR expression •

    SEMIC  reduce using rule 79 (operation)


State 136

   80 operation: term AND expression •

    SEMIC  reduce using rule 80 (operation)


State 137

   73 operation: term SMALLER expression •

    SEMIC  reduce using rule 73 (operation)


State 138

   74 operation: term GREATER expression •

    SEMIC  reduce using rule 74 (operation)


State 139

   75 operation: term SMALLEQ expression •

    SEMIC  reduce using rule 75 (operation)


State 140

   76 operation: term GREATEQ expression •

    SEMIC  reduce using rule 76 (operation)


State 141

   77 operation: term EQUALS expression •

    SEMIC  reduce using rule 77 (operation)


State 142

   78 operation: term DIFFERENT expression •

    SEMIC  reduce using rule 78 (operation)


State 143

   83 in_set: term IN expression •

    SEMIC  reduce using rule 83 (in_set)


State 144

   66 math_op_muldiv: term •

    ADD    reduce using rule 66 (math_op_muldiv)
    SUB    reduce using rule 66 (math_op_muldiv)
    MULT   reduce using rule 66 (math_op_muldiv)
    DIV    reduce using rule 66 (math_op_muldiv)
    SEMIC  reduce using rule 66 (math_op_muldiv)


State 145

   61 math_op: math_op ADD math_op_muldiv •
   64 math_op_muldiv: math_op_muldiv • DIV term
   65               | math_op_muldiv • MULT term

    MULT  shift, and go to state 109
    DIV   shift, and go to state 110

    ADD    reduce using rule 61 (math_op)
    SUB    reduce using rule 61 (math_op)
    SEMIC  reduce using rule 61 (math_op)


State 146

   62 math_op: math_op SUB math_op_muldiv •
   64 math_op_muldiv: math_op_muldiv • DIV term
   65               | math_op_muldiv • MULT term

    MULT  shift, and go to state 109
    DIV   shift, and go to state 110

    ADD    reduce using rule 62 (math_op)
    SUB    reduce using rule 62 (math_op)
    SEMIC  reduce using rule 62 (math_op)


State 147

   65 math_op_muldiv: math_op_muldiv MULT term •

    ADD    reduce using rule 65 (math_op_muldiv)
    SUB    reduce using rule 65 (math_op_muldiv)
    MULT   reduce using rule 65 (math_op_muldiv)
    DIV    reduce using rule 65 (math_op_muldiv)
    SEMIC  reduce using rule 65 (math_op_muldiv)


State 148

   64 math_op_muldiv: math_op_muldiv DIV term •

    ADD    reduce using rule 64 (math_op_muldiv)
    SUB    reduce using rule 64 (math_op_muldiv)
    MULT   reduce using rule 64 (math_op_muldiv)
    DIV    reduce using rule 64 (math_op_muldiv)
    SEMIC  reduce using rule 64 (math_op_muldiv)


State 149

   84 args_list: args_list COMMA • term

    ID          shift, and go to state 112
    STRING      shift, and go to state 202
    CHAR        shift, and go to state 203
    EMPTY       shift, and go to state 204
    ERRORTOKEN  shift, and go to state 205
    INTEGER     shift, and go to state 206
    DECIMAL     shift, and go to state 207
    PARENL      shift, and go to state 208

    term  go to state 167


State 150

   82 func_call: ID PARENL args_list PARENR •

    SEMIC  reduce using rule 82 (func_call)


State 151

   38 if_statement: IF PARENL operation PARENR •

    ID          reduce using rule 38 (if_statement)
    TYPE        reduce using rule 38 (if_statement)
    STRING      reduce using rule 38 (if_statement)
    CHAR        reduce using rule 38 (if_statement)
    EMPTY       reduce using rule 38 (if_statement)
    ERRORTOKEN  reduce using rule 38 (if_statement)
    INTEGER     reduce using rule 38 (if_statement)
    DECIMAL     reduce using rule 38 (if_statement)
    NEG         reduce using rule 38 (if_statement)
    IF          reduce using rule 38 (if_statement)
    FOR         reduce using rule 38 (if_statement)
    READ        reduce using rule 38 (if_statement)
    WRITE       reduce using rule 38 (if_statement)
    WRITELN     reduce using rule 38 (if_statement)
    RETURN      reduce using rule 38 (if_statement)
    ISTYPE      reduce using rule 38 (if_statement)
    ADDSET      reduce using rule 38 (if_statement)
    REMOVE      reduce using rule 38 (if_statement)
    EXISTS      reduce using rule 38 (if_statement)
    FORALL      reduce using rule 38 (if_statement)
    STFUNC      reduce using rule 38 (if_statement)
    PARENL      reduce using rule 38 (if_statement)


State 152

   34 for_body: SEMIC expression_statement • expression

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 168
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 153

   33 for_body: expression_statement expression_statement • expression

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 169
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 154

   31 for_statement: FOR PARENL for_body PARENR •

    STFUNC  reduce using rule 31 (for_statement)


State 155

   45 io_ops: READ PARENL PARENR SEMIC •

    ID          reduce using rule 45 (io_ops)
    TYPE        reduce using rule 45 (io_ops)
    STRING      reduce using rule 45 (io_ops)
    CHAR        reduce using rule 45 (io_ops)
    EMPTY       reduce using rule 45 (io_ops)
    ERRORTOKEN  reduce using rule 45 (io_ops)
    INTEGER     reduce using rule 45 (io_ops)
    DECIMAL     reduce using rule 45 (io_ops)
    NEG         reduce using rule 45 (io_ops)
    IF          reduce using rule 45 (io_ops)
    FOR         reduce using rule 45 (io_ops)
    READ        reduce using rule 45 (io_ops)
    WRITE       reduce using rule 45 (io_ops)
    WRITELN     reduce using rule 45 (io_ops)
    RETURN      reduce using rule 45 (io_ops)
    ISTYPE      reduce using rule 45 (io_ops)
    ADDSET      reduce using rule 45 (io_ops)
    REMOVE      reduce using rule 45 (io_ops)
    EXISTS      reduce using rule 45 (io_ops)
    FORALL      reduce using rule 45 (io_ops)
    ENDFUNC     reduce using rule 45 (io_ops)
    PARENL      reduce using rule 45 (io_ops)


State 156

   46 io_ops: READ PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 170


State 157

   47 io_ops: WRITE PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 171


State 158

   48 io_ops: WRITELN PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 172


State 159

   72 operation: ISTYPE PARENL expression PARENR •

    SEMIC  reduce using rule 72 (operation)


State 160

   67 set_op: ADDSET PARENL in_set PARENR •

    SEMIC  reduce using rule 67 (set_op)


State 161

   68 set_op: REMOVE PARENL in_set PARENR •

    SEMIC  reduce using rule 68 (set_op)


State 162

   69 set_op: EXISTS PARENL in_set PARENR •

    SEMIC  reduce using rule 69 (set_op)


State 163

   32 forall_statement: FORALL PARENL in_set PARENR •

    ADDSET  reduce using rule 32 (forall_statement)
    REMOVE  reduce using rule 32 (forall_statement)
    EXISTS  reduce using rule 32 (forall_statement)
    STFUNC  reduce using rule 32 (forall_statement)


State 164

   28 basic_ops: for_statement STFUNC statement_list ENDFUNC •

    ID          reduce using rule 28 (basic_ops)
    TYPE        reduce using rule 28 (basic_ops)
    STRING      reduce using rule 28 (basic_ops)
    CHAR        reduce using rule 28 (basic_ops)
    EMPTY       reduce using rule 28 (basic_ops)
    ERRORTOKEN  reduce using rule 28 (basic_ops)
    INTEGER     reduce using rule 28 (basic_ops)
    DECIMAL     reduce using rule 28 (basic_ops)
    NEG         reduce using rule 28 (basic_ops)
    IF          reduce using rule 28 (basic_ops)
    FOR         reduce using rule 28 (basic_ops)
    READ        reduce using rule 28 (basic_ops)
    WRITE       reduce using rule 28 (basic_ops)
    WRITELN     reduce using rule 28 (basic_ops)
    RETURN      reduce using rule 28 (basic_ops)
    ISTYPE      reduce using rule 28 (basic_ops)
    ADDSET      reduce using rule 28 (basic_ops)
    REMOVE      reduce using rule 28 (basic_ops)
    EXISTS      reduce using rule 28 (basic_ops)
    FORALL      reduce using rule 28 (basic_ops)
    ENDFUNC     reduce using rule 28 (basic_ops)
    PARENL      reduce using rule 28 (basic_ops)


State 165

   30 basic_ops: forall_statement STFUNC statement_list ENDFUNC •

    ID          reduce using rule 30 (basic_ops)
    TYPE        reduce using rule 30 (basic_ops)
    STRING      reduce using rule 30 (basic_ops)
    CHAR        reduce using rule 30 (basic_ops)
    EMPTY       reduce using rule 30 (basic_ops)
    ERRORTOKEN  reduce using rule 30 (basic_ops)
    INTEGER     reduce using rule 30 (basic_ops)
    DECIMAL     reduce using rule 30 (basic_ops)
    NEG         reduce using rule 30 (basic_ops)
    IF          reduce using rule 30 (basic_ops)
    FOR         reduce using rule 30 (basic_ops)
    READ        reduce using rule 30 (basic_ops)
    WRITE       reduce using rule 30 (basic_ops)
    WRITELN     reduce using rule 30 (basic_ops)
    RETURN      reduce using rule 30 (basic_ops)
    ISTYPE      reduce using rule 30 (basic_ops)
    ADDSET      reduce using rule 30 (basic_ops)
    REMOVE      reduce using rule 30 (basic_ops)
    EXISTS      reduce using rule 30 (basic_ops)
    FORALL      reduce using rule 30 (basic_ops)
    ENDFUNC     reduce using rule 30 (basic_ops)
    PARENL      reduce using rule 30 (basic_ops)


State 166

   36 if_ops: if_statement STFUNC statement_list ENDFUNC •
   37       | if_statement STFUNC statement_list ENDFUNC • else_statement

    ELSE  shift, and go to state 173

    ID          reduce using rule 36 (if_ops)
    TYPE        reduce using rule 36 (if_ops)
    STRING      reduce using rule 36 (if_ops)
    CHAR        reduce using rule 36 (if_ops)
    EMPTY       reduce using rule 36 (if_ops)
    ERRORTOKEN  reduce using rule 36 (if_ops)
    INTEGER     reduce using rule 36 (if_ops)
    DECIMAL     reduce using rule 36 (if_ops)
    NEG         reduce using rule 36 (if_ops)
    IF          reduce using rule 36 (if_ops)
    FOR         reduce using rule 36 (if_ops)
    READ        reduce using rule 36 (if_ops)
    WRITE       reduce using rule 36 (if_ops)
    WRITELN     reduce using rule 36 (if_ops)
    RETURN      reduce using rule 36 (if_ops)
    ISTYPE      reduce using rule 36 (if_ops)
    ADDSET      reduce using rule 36 (if_ops)
    REMOVE      reduce using rule 36 (if_ops)
    EXISTS      reduce using rule 36 (if_ops)
    FORALL      reduce using rule 36 (if_ops)
    ENDFUNC     reduce using rule 36 (if_ops)
    PARENL      reduce using rule 36 (if_ops)

    else_statement  go to state 174


State 167

   84 args_list: args_list COMMA term •

    COMMA   reduce using rule 84 (args_list)
    PARENR  reduce using rule 84 (args_list)


State 168

   34 for_body: SEMIC expression_statement expression •

    PARENR  reduce using rule 34 (for_body)


State 169

   33 for_body: expression_statement expression_statement expression •

    PARENR  reduce using rule 33 (for_body)


State 170

   46 io_ops: READ PARENL expression PARENR SEMIC •

    ID          reduce using rule 46 (io_ops)
    TYPE        reduce using rule 46 (io_ops)
    STRING      reduce using rule 46 (io_ops)
    CHAR        reduce using rule 46 (io_ops)
    EMPTY       reduce using rule 46 (io_ops)
    ERRORTOKEN  reduce using rule 46 (io_ops)
    INTEGER     reduce using rule 46 (io_ops)
    DECIMAL     reduce using rule 46 (io_ops)
    NEG         reduce using rule 46 (io_ops)
    IF          reduce using rule 46 (io_ops)
    FOR         reduce using rule 46 (io_ops)
    READ        reduce using rule 46 (io_ops)
    WRITE       reduce using rule 46 (io_ops)
    WRITELN     reduce using rule 46 (io_ops)
    RETURN      reduce using rule 46 (io_ops)
    ISTYPE      reduce using rule 46 (io_ops)
    ADDSET      reduce using rule 46 (io_ops)
    REMOVE      reduce using rule 46 (io_ops)
    EXISTS      reduce using rule 46 (io_ops)
    FORALL      reduce using rule 46 (io_ops)
    ENDFUNC     reduce using rule 46 (io_ops)
    PARENL      reduce using rule 46 (io_ops)


State 171

   47 io_ops: WRITE PARENL expression PARENR SEMIC •

    ID          reduce using rule 47 (io_ops)
    TYPE        reduce using rule 47 (io_ops)
    STRING      reduce using rule 47 (io_ops)
    CHAR        reduce using rule 47 (io_ops)
    EMPTY       reduce using rule 47 (io_ops)
    ERRORTOKEN  reduce using rule 47 (io_ops)
    INTEGER     reduce using rule 47 (io_ops)
    DECIMAL     reduce using rule 47 (io_ops)
    NEG         reduce using rule 47 (io_ops)
    IF          reduce using rule 47 (io_ops)
    FOR         reduce using rule 47 (io_ops)
    READ        reduce using rule 47 (io_ops)
    WRITE       reduce using rule 47 (io_ops)
    WRITELN     reduce using rule 47 (io_ops)
    RETURN      reduce using rule 47 (io_ops)
    ISTYPE      reduce using rule 47 (io_ops)
    ADDSET      reduce using rule 47 (io_ops)
    REMOVE      reduce using rule 47 (io_ops)
    EXISTS      reduce using rule 47 (io_ops)
    FORALL      reduce using rule 47 (io_ops)
    ENDFUNC     reduce using rule 47 (io_ops)
    PARENL      reduce using rule 47 (io_ops)


State 172

   48 io_ops: WRITELN PARENL expression PARENR SEMIC •

    ID          reduce using rule 48 (io_ops)
    TYPE        reduce using rule 48 (io_ops)
    STRING      reduce using rule 48 (io_ops)
    CHAR        reduce using rule 48 (io_ops)
    EMPTY       reduce using rule 48 (io_ops)
    ERRORTOKEN  reduce using rule 48 (io_ops)
    INTEGER     reduce using rule 48 (io_ops)
    DECIMAL     reduce using rule 48 (io_ops)
    NEG         reduce using rule 48 (io_ops)
    IF          reduce using rule 48 (io_ops)
    FOR         reduce using rule 48 (io_ops)
    READ        reduce using rule 48 (io_ops)
    WRITE       reduce using rule 48 (io_ops)
    WRITELN     reduce using rule 48 (io_ops)
    RETURN      reduce using rule 48 (io_ops)
    ISTYPE      reduce using rule 48 (io_ops)
    ADDSET      reduce using rule 48 (io_ops)
    REMOVE      reduce using rule 48 (io_ops)
    EXISTS      reduce using rule 48 (io_ops)
    FORALL      reduce using rule 48 (io_ops)
    ENDFUNC     reduce using rule 48 (io_ops)
    PARENL      reduce using rule 48 (io_ops)


State 173

   40 else_statement: ELSE • $@5 statement
   42               | ELSE • $@6 STFUNC statement_list ENDFUNC

    ID          reduce using rule 39 ($@5)
    TYPE        reduce using rule 39 ($@5)
    STRING      reduce using rule 39 ($@5)
    CHAR        reduce using rule 39 ($@5)
    EMPTY       reduce using rule 39 ($@5)
    ERRORTOKEN  reduce using rule 39 ($@5)
    INTEGER     reduce using rule 39 ($@5)
    DECIMAL     reduce using rule 39 ($@5)
    NEG         reduce using rule 39 ($@5)
    IF          reduce using rule 39 ($@5)
    FOR         reduce using rule 39 ($@5)
    READ        reduce using rule 39 ($@5)
    WRITE       reduce using rule 39 ($@5)
    WRITELN     reduce using rule 39 ($@5)
    RETURN      reduce using rule 39 ($@5)
    ISTYPE      reduce using rule 39 ($@5)
    ADDSET      reduce using rule 39 ($@5)
    REMOVE      reduce using rule 39 ($@5)
    EXISTS      reduce using rule 39 ($@5)
    FORALL      reduce using rule 39 ($@5)
    STFUNC      reduce using rule 41 ($@6)
    PARENL      reduce using rule 39 ($@5)

    $@5  go to state 175
    $@6  go to state 176


State 174

   37 if_ops: if_statement STFUNC statement_list ENDFUNC else_statement •

    ID          reduce using rule 37 (if_ops)
    TYPE        reduce using rule 37 (if_ops)
    STRING      reduce using rule 37 (if_ops)
    CHAR        reduce using rule 37 (if_ops)
    EMPTY       reduce using rule 37 (if_ops)
    ERRORTOKEN  reduce using rule 37 (if_ops)
    INTEGER     reduce using rule 37 (if_ops)
    DECIMAL     reduce using rule 37 (if_ops)
    NEG         reduce using rule 37 (if_ops)
    IF          reduce using rule 37 (if_ops)
    FOR         reduce using rule 37 (if_ops)
    READ        reduce using rule 37 (if_ops)
    WRITE       reduce using rule 37 (if_ops)
    WRITELN     reduce using rule 37 (if_ops)
    RETURN      reduce using rule 37 (if_ops)
    ISTYPE      reduce using rule 37 (if_ops)
    ADDSET      reduce using rule 37 (if_ops)
    REMOVE      reduce using rule 37 (if_ops)
    EXISTS      reduce using rule 37 (if_ops)
    FORALL      reduce using rule 37 (if_ops)
    ENDFUNC     reduce using rule 37 (if_ops)
    PARENL      reduce using rule 37 (if_ops)


State 175

   40 else_statement: ELSE $@5 • statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    PARENL      shift, and go to state 55

    statement             go to state 177
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_op               go to state 68
    math_op_muldiv        go to state 69
    set_op                go to state 70
    operation             go to state 71
    func_call             go to state 72
    in_set                go to state 73
    assign_value          go to state 74


State 176

   42 else_statement: ELSE $@6 • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 178


State 177

   40 else_statement: ELSE $@5 statement •

    ID          reduce using rule 40 (else_statement)
    TYPE        reduce using rule 40 (else_statement)
    STRING      reduce using rule 40 (else_statement)
    CHAR        reduce using rule 40 (else_statement)
    EMPTY       reduce using rule 40 (else_statement)
    ERRORTOKEN  reduce using rule 40 (else_statement)
    INTEGER     reduce using rule 40 (else_statement)
    DECIMAL     reduce using rule 40 (else_statement)
    NEG         reduce using rule 40 (else_statement)
    IF          reduce using rule 40 (else_statement)
    FOR         reduce using rule 40 (else_statement)
    READ        reduce using rule 40 (else_statement)
    WRITE       reduce using rule 40 (else_statement)
    WRITELN     reduce using rule 40 (else_statement)
    RETURN      reduce using rule 40 (else_statement)
    ISTYPE      reduce using rule 40 (else_statement)
    ADDSET      reduce using rule 40 (else_statement)
    REMOVE      reduce using rule 40 (else_statement)
    EXISTS      reduce using rule 40 (else_statement)
    FORALL      reduce using rule 40 (else_statement)
    ENDFUNC     reduce using rule 40 (else_statement)
    PARENL      reduce using rule 40 (else_statement)


State 178

   42 else_statement: ELSE $@6 STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 179


State 179

   18 statement_list: statement_list • statement
   42 else_statement: ELSE $@6 STFUNC statement_list • ENDFUNC

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 180
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_op               go to state 68
    math_op_muldiv        go to state 69
    set_op                go to state 70
    operation             go to state 71
    func_call             go to state 72
    in_set                go to state 73
    assign_value          go to state 74


State 180

   42 else_statement: ELSE $@6 STFUNC statement_list ENDFUNC •

    ID          reduce using rule 42 (else_statement)
    TYPE        reduce using rule 42 (else_statement)
    STRING      reduce using rule 42 (else_statement)
    CHAR        reduce using rule 42 (else_statement)
    EMPTY       reduce using rule 42 (else_statement)
    ERRORTOKEN  reduce using rule 42 (else_statement)
    INTEGER     reduce using rule 42 (else_statement)
    DECIMAL     reduce using rule 42 (else_statement)
    NEG         reduce using rule 42 (else_statement)
    IF          reduce using rule 42 (else_statement)
    FOR         reduce using rule 42 (else_statement)
    READ        reduce using rule 42 (else_statement)
    WRITE       reduce using rule 42 (else_statement)
    WRITELN     reduce using rule 42 (else_statement)
    RETURN      reduce using rule 42 (else_statement)
    ISTYPE      reduce using rule 42 (else_statement)
    ADDSET      reduce using rule 42 (else_statement)
    REMOVE      reduce using rule 42 (else_statement)
    EXISTS      reduce using rule 42 (else_statement)
    FORALL      reduce using rule 42 (else_statement)
    ENDFUNC     reduce using rule 42 (else_statement)
    PARENL      reduce using rule 42 (else_statement)


State 181

   53 term: ID •
   82 func_call: ID • PARENL args_list PARENR
   87 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 229
    PARENL  shift, and go to state 230

    ADD        reduce using rule 53 (term)
    SUB        reduce using rule 53 (term)
    MULT       reduce using rule 53 (term)
    DIV        reduce using rule 53 (term)
    OR         reduce using rule 53 (term)
    AND        reduce using rule 53 (term)
    SMALLER    reduce using rule 53 (term)
    GREATER    reduce using rule 53 (term)
    SMALLEQ    reduce using rule 53 (term)
    GREATEQ    reduce using rule 53 (term)
    EQUALS     reduce using rule 53 (term)
    DIFFERENT  reduce using rule 53 (term)
    IN         reduce using rule 53 (term)
    PARENR     reduce using rule 53 (term)


State 182

   57 term: STRING •

    ADD        reduce using rule 57 (term)
    SUB        reduce using rule 57 (term)
    MULT       reduce using rule 57 (term)
    DIV        reduce using rule 57 (term)
    OR         reduce using rule 57 (term)
    AND        reduce using rule 57 (term)
    SMALLER    reduce using rule 57 (term)
    GREATER    reduce using rule 57 (term)
    SMALLEQ    reduce using rule 57 (term)
    GREATEQ    reduce using rule 57 (term)
    EQUALS     reduce using rule 57 (term)
    DIFFERENT  reduce using rule 57 (term)
    IN         reduce using rule 57 (term)
    PARENR     reduce using rule 57 (term)


State 183

   56 term: CHAR •

    ADD        reduce using rule 56 (term)
    SUB        reduce using rule 56 (term)
    MULT       reduce using rule 56 (term)
    DIV        reduce using rule 56 (term)
    OR         reduce using rule 56 (term)
    AND        reduce using rule 56 (term)
    SMALLER    reduce using rule 56 (term)
    GREATER    reduce using rule 56 (term)
    SMALLEQ    reduce using rule 56 (term)
    GREATEQ    reduce using rule 56 (term)
    EQUALS     reduce using rule 56 (term)
    DIFFERENT  reduce using rule 56 (term)
    IN         reduce using rule 56 (term)
    PARENR     reduce using rule 56 (term)


State 184

   58 term: EMPTY •

    ADD        reduce using rule 58 (term)
    SUB        reduce using rule 58 (term)
    MULT       reduce using rule 58 (term)
    DIV        reduce using rule 58 (term)
    OR         reduce using rule 58 (term)
    AND        reduce using rule 58 (term)
    SMALLER    reduce using rule 58 (term)
    GREATER    reduce using rule 58 (term)
    SMALLEQ    reduce using rule 58 (term)
    GREATEQ    reduce using rule 58 (term)
    EQUALS     reduce using rule 58 (term)
    DIFFERENT  reduce using rule 58 (term)
    IN         reduce using rule 58 (term)
    PARENR     reduce using rule 58 (term)


State 185

   60 term: ERRORTOKEN •

    ADD        reduce using rule 60 (term)
    SUB        reduce using rule 60 (term)
    MULT       reduce using rule 60 (term)
    DIV        reduce using rule 60 (term)
    OR         reduce using rule 60 (term)
    AND        reduce using rule 60 (term)
    SMALLER    reduce using rule 60 (term)
    GREATER    reduce using rule 60 (term)
    SMALLEQ    reduce using rule 60 (term)
    GREATEQ    reduce using rule 60 (term)
    EQUALS     reduce using rule 60 (term)
    DIFFERENT  reduce using rule 60 (term)
    IN         reduce using rule 60 (term)
    PARENR     reduce using rule 60 (term)


State 186

   54 term: INTEGER •

    ADD        reduce using rule 54 (term)
    SUB        reduce using rule 54 (term)
    MULT       reduce using rule 54 (term)
    DIV        reduce using rule 54 (term)
    OR         reduce using rule 54 (term)
    AND        reduce using rule 54 (term)
    SMALLER    reduce using rule 54 (term)
    GREATER    reduce using rule 54 (term)
    SMALLEQ    reduce using rule 54 (term)
    GREATEQ    reduce using rule 54 (term)
    EQUALS     reduce using rule 54 (term)
    DIFFERENT  reduce using rule 54 (term)
    IN         reduce using rule 54 (term)
    PARENR     reduce using rule 54 (term)


State 187

   55 term: DECIMAL •

    ADD        reduce using rule 55 (term)
    SUB        reduce using rule 55 (term)
    MULT       reduce using rule 55 (term)
    DIV        reduce using rule 55 (term)
    OR         reduce using rule 55 (term)
    AND        reduce using rule 55 (term)
    SMALLER    reduce using rule 55 (term)
    GREATER    reduce using rule 55 (term)
    SMALLEQ    reduce using rule 55 (term)
    GREATEQ    reduce using rule 55 (term)
    EQUALS     reduce using rule 55 (term)
    DIFFERENT  reduce using rule 55 (term)
    IN         reduce using rule 55 (term)
    PARENR     reduce using rule 55 (term)


State 188

   81 operation: NEG • expression

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 231
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 189

   72 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 232


State 190

   67 set_op: ADDSET • PARENL in_set PARENR

    PARENL  shift, and go to state 233


State 191

   68 set_op: REMOVE • PARENL in_set PARENR

    PARENL  shift, and go to state 234


State 192

   69 set_op: EXISTS • PARENL in_set PARENR

    PARENL  shift, and go to state 235


State 193

   59 term: PARENL • expression PARENR

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 236
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 194

   66 math_op_muldiv: term •
   73 operation: term • SMALLER expression
   74          | term • GREATER expression
   75          | term • SMALLEQ expression
   76          | term • GREATEQ expression
   77          | term • EQUALS expression
   78          | term • DIFFERENT expression
   79          | term • OR expression
   80          | term • AND expression
   83 in_set: term • IN expression

    OR         shift, and go to state 237
    AND        shift, and go to state 238
    SMALLER    shift, and go to state 239
    GREATER    shift, and go to state 240
    SMALLEQ    shift, and go to state 241
    GREATEQ    shift, and go to state 242
    EQUALS     shift, and go to state 243
    DIFFERENT  shift, and go to state 244
    IN         shift, and go to state 228

    ADD     reduce using rule 66 (math_op_muldiv)
    SUB     reduce using rule 66 (math_op_muldiv)
    MULT    reduce using rule 66 (math_op_muldiv)
    DIV     reduce using rule 66 (math_op_muldiv)
    PARENR  reduce using rule 66 (math_op_muldiv)


State 195

   61 math_op: math_op • ADD math_op_muldiv
   62        | math_op • SUB math_op_muldiv
   70 operation: math_op •

    ADD  shift, and go to state 245
    SUB  shift, and go to state 246

    PARENR  reduce using rule 70 (operation)


State 196

   63 math_op: math_op_muldiv •
   64 math_op_muldiv: math_op_muldiv • DIV term
   65               | math_op_muldiv • MULT term

    MULT  shift, and go to state 247
    DIV   shift, and go to state 248

    ADD     reduce using rule 63 (math_op)
    SUB     reduce using rule 63 (math_op)
    PARENR  reduce using rule 63 (math_op)


State 197

   49 expression: set_op •

    PARENR  reduce using rule 49 (expression)


State 198

   50 expression: operation •

    PARENR  reduce using rule 50 (expression)


State 199

   51 expression: func_call •

    PARENR  reduce using rule 51 (expression)


State 200

   71 operation: in_set •

    PARENR  reduce using rule 71 (operation)


State 201

   52 expression: assign_value •

    PARENR  reduce using rule 52 (expression)


State 202

   57 term: STRING •

    COMMA   reduce using rule 57 (term)
    PARENR  reduce using rule 57 (term)


State 203

   56 term: CHAR •

    COMMA   reduce using rule 56 (term)
    PARENR  reduce using rule 56 (term)


State 204

   58 term: EMPTY •

    COMMA   reduce using rule 58 (term)
    PARENR  reduce using rule 58 (term)


State 205

   60 term: ERRORTOKEN •

    COMMA   reduce using rule 60 (term)
    PARENR  reduce using rule 60 (term)


State 206

   54 term: INTEGER •

    COMMA   reduce using rule 54 (term)
    PARENR  reduce using rule 54 (term)


State 207

   55 term: DECIMAL •

    COMMA   reduce using rule 55 (term)
    PARENR  reduce using rule 55 (term)


State 208

   59 term: PARENL • expression PARENR

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 249
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 209

   44 var_dec: TYPE ID SEMIC •

    ID          reduce using rule 44 (var_dec)
    TYPE        reduce using rule 44 (var_dec)
    STRING      reduce using rule 44 (var_dec)
    CHAR        reduce using rule 44 (var_dec)
    EMPTY       reduce using rule 44 (var_dec)
    ERRORTOKEN  reduce using rule 44 (var_dec)
    INTEGER     reduce using rule 44 (var_dec)
    DECIMAL     reduce using rule 44 (var_dec)
    NEG         reduce using rule 44 (var_dec)
    IF          reduce using rule 44 (var_dec)
    FOR         reduce using rule 44 (var_dec)
    READ        reduce using rule 44 (var_dec)
    WRITE       reduce using rule 44 (var_dec)
    WRITELN     reduce using rule 44 (var_dec)
    RETURN      reduce using rule 44 (var_dec)
    ISTYPE      reduce using rule 44 (var_dec)
    ADDSET      reduce using rule 44 (var_dec)
    REMOVE      reduce using rule 44 (var_dec)
    EXISTS      reduce using rule 44 (var_dec)
    FORALL      reduce using rule 44 (var_dec)
    ENDFUNC     reduce using rule 44 (var_dec)
    PARENL      reduce using rule 44 (var_dec)


State 210

   53 term: ID •

    ADD        reduce using rule 53 (term)
    SUB        reduce using rule 53 (term)
    MULT       reduce using rule 53 (term)
    DIV        reduce using rule 53 (term)
    OR         reduce using rule 53 (term)
    AND        reduce using rule 53 (term)
    SMALLER    reduce using rule 53 (term)
    GREATER    reduce using rule 53 (term)
    SMALLEQ    reduce using rule 53 (term)
    GREATEQ    reduce using rule 53 (term)
    EQUALS     reduce using rule 53 (term)
    DIFFERENT  reduce using rule 53 (term)
    IN         reduce using rule 53 (term)
    PARENR     reduce using rule 53 (term)


State 211

   26 expression_statement: expression • SEMIC

    SEMIC  shift, and go to state 250


State 212

   53 term: ID •

    IN  reduce using rule 53 (term)


State 213

   57 term: STRING •

    IN  reduce using rule 57 (term)


State 214

   56 term: CHAR •

    IN  reduce using rule 56 (term)


State 215

   58 term: EMPTY •

    IN  reduce using rule 58 (term)


State 216

   60 term: ERRORTOKEN •

    IN  reduce using rule 60 (term)


State 217

   54 term: INTEGER •

    IN  reduce using rule 54 (term)


State 218

   55 term: DECIMAL •

    IN  reduce using rule 55 (term)


State 219

   59 term: PARENL • expression PARENR

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 251
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 220

   53 term: ID •

    ADD    reduce using rule 53 (term)
    SUB    reduce using rule 53 (term)
    MULT   reduce using rule 53 (term)
    DIV    reduce using rule 53 (term)
    SEMIC  reduce using rule 53 (term)


State 221

   57 term: STRING •

    ADD    reduce using rule 57 (term)
    SUB    reduce using rule 57 (term)
    MULT   reduce using rule 57 (term)
    DIV    reduce using rule 57 (term)
    SEMIC  reduce using rule 57 (term)


State 222

   56 term: CHAR •

    ADD    reduce using rule 56 (term)
    SUB    reduce using rule 56 (term)
    MULT   reduce using rule 56 (term)
    DIV    reduce using rule 56 (term)
    SEMIC  reduce using rule 56 (term)


State 223

   58 term: EMPTY •

    ADD    reduce using rule 58 (term)
    SUB    reduce using rule 58 (term)
    MULT   reduce using rule 58 (term)
    DIV    reduce using rule 58 (term)
    SEMIC  reduce using rule 58 (term)


State 224

   60 term: ERRORTOKEN •

    ADD    reduce using rule 60 (term)
    SUB    reduce using rule 60 (term)
    MULT   reduce using rule 60 (term)
    DIV    reduce using rule 60 (term)
    SEMIC  reduce using rule 60 (term)


State 225

   54 term: INTEGER •

    ADD    reduce using rule 54 (term)
    SUB    reduce using rule 54 (term)
    MULT   reduce using rule 54 (term)
    DIV    reduce using rule 54 (term)
    SEMIC  reduce using rule 54 (term)


State 226

   55 term: DECIMAL •

    ADD    reduce using rule 55 (term)
    SUB    reduce using rule 55 (term)
    MULT   reduce using rule 55 (term)
    DIV    reduce using rule 55 (term)
    SEMIC  reduce using rule 55 (term)


State 227

   59 term: PARENL • expression PARENR

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 252
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 228

   83 in_set: term IN • expression

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 253
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 229

   87 assign_value: ID ASSIGN • expression

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 254
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 230

   82 func_call: ID PARENL • args_list PARENR

    ID          shift, and go to state 112
    STRING      shift, and go to state 202
    CHAR        shift, and go to state 203
    EMPTY       shift, and go to state 204
    ERRORTOKEN  shift, and go to state 205
    INTEGER     shift, and go to state 206
    DECIMAL     shift, and go to state 207
    PARENL      shift, and go to state 208

    COMMA   reduce using rule 86 (args_list)
    PARENR  reduce using rule 86 (args_list)

    term       go to state 113
    args_list  go to state 255


State 231

   81 operation: NEG expression •

    PARENR  reduce using rule 81 (operation)


State 232

   72 operation: ISTYPE PARENL • expression PARENR

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 256
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 233

   67 set_op: ADDSET PARENL • in_set PARENR

    ID          shift, and go to state 212
    STRING      shift, and go to state 213
    CHAR        shift, and go to state 214
    EMPTY       shift, and go to state 215
    ERRORTOKEN  shift, and go to state 216
    INTEGER     shift, and go to state 217
    DECIMAL     shift, and go to state 218
    PARENL      shift, and go to state 219

    term    go to state 125
    in_set  go to state 257


State 234

   68 set_op: REMOVE PARENL • in_set PARENR

    ID          shift, and go to state 212
    STRING      shift, and go to state 213
    CHAR        shift, and go to state 214
    EMPTY       shift, and go to state 215
    ERRORTOKEN  shift, and go to state 216
    INTEGER     shift, and go to state 217
    DECIMAL     shift, and go to state 218
    PARENL      shift, and go to state 219

    term    go to state 125
    in_set  go to state 258


State 235

   69 set_op: EXISTS PARENL • in_set PARENR

    ID          shift, and go to state 212
    STRING      shift, and go to state 213
    CHAR        shift, and go to state 214
    EMPTY       shift, and go to state 215
    ERRORTOKEN  shift, and go to state 216
    INTEGER     shift, and go to state 217
    DECIMAL     shift, and go to state 218
    PARENL      shift, and go to state 219

    term    go to state 125
    in_set  go to state 259


State 236

   59 term: PARENL expression • PARENR

    PARENR  shift, and go to state 260


State 237

   79 operation: term OR • expression

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 261
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 238

   80 operation: term AND • expression

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 262
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 239

   73 operation: term SMALLER • expression

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 263
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 240

   74 operation: term GREATER • expression

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 264
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 241

   75 operation: term SMALLEQ • expression

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 265
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 242

   76 operation: term GREATEQ • expression

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 266
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 243

   77 operation: term EQUALS • expression

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 267
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 244

   78 operation: term DIFFERENT • expression

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 268
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 245

   61 math_op: math_op ADD • math_op_muldiv

    ID          shift, and go to state 269
    STRING      shift, and go to state 270
    CHAR        shift, and go to state 271
    EMPTY       shift, and go to state 272
    ERRORTOKEN  shift, and go to state 273
    INTEGER     shift, and go to state 274
    DECIMAL     shift, and go to state 275
    PARENL      shift, and go to state 276

    term            go to state 277
    math_op_muldiv  go to state 278


State 246

   62 math_op: math_op SUB • math_op_muldiv

    ID          shift, and go to state 269
    STRING      shift, and go to state 270
    CHAR        shift, and go to state 271
    EMPTY       shift, and go to state 272
    ERRORTOKEN  shift, and go to state 273
    INTEGER     shift, and go to state 274
    DECIMAL     shift, and go to state 275
    PARENL      shift, and go to state 276

    term            go to state 277
    math_op_muldiv  go to state 279


State 247

   65 math_op_muldiv: math_op_muldiv MULT • term

    ID          shift, and go to state 269
    STRING      shift, and go to state 270
    CHAR        shift, and go to state 271
    EMPTY       shift, and go to state 272
    ERRORTOKEN  shift, and go to state 273
    INTEGER     shift, and go to state 274
    DECIMAL     shift, and go to state 275
    PARENL      shift, and go to state 276

    term  go to state 280


State 248

   64 math_op_muldiv: math_op_muldiv DIV • term

    ID          shift, and go to state 269
    STRING      shift, and go to state 270
    CHAR        shift, and go to state 271
    EMPTY       shift, and go to state 272
    ERRORTOKEN  shift, and go to state 273
    INTEGER     shift, and go to state 274
    DECIMAL     shift, and go to state 275
    PARENL      shift, and go to state 276

    term  go to state 281


State 249

   59 term: PARENL expression • PARENR

    PARENR  shift, and go to state 282


State 250

   26 expression_statement: expression SEMIC •

    ID          reduce using rule 26 (expression_statement)
    STRING      reduce using rule 26 (expression_statement)
    CHAR        reduce using rule 26 (expression_statement)
    EMPTY       reduce using rule 26 (expression_statement)
    ERRORTOKEN  reduce using rule 26 (expression_statement)
    INTEGER     reduce using rule 26 (expression_statement)
    DECIMAL     reduce using rule 26 (expression_statement)
    NEG         reduce using rule 26 (expression_statement)
    ISTYPE      reduce using rule 26 (expression_statement)
    ADDSET      reduce using rule 26 (expression_statement)
    REMOVE      reduce using rule 26 (expression_statement)
    EXISTS      reduce using rule 26 (expression_statement)
    PARENL      reduce using rule 26 (expression_statement)


State 251

   59 term: PARENL expression • PARENR

    PARENR  shift, and go to state 283


State 252

   59 term: PARENL expression • PARENR

    PARENR  shift, and go to state 284


State 253

   83 in_set: term IN expression •

    PARENR  reduce using rule 83 (in_set)


State 254

   87 assign_value: ID ASSIGN expression •

    PARENR  reduce using rule 87 (assign_value)


State 255

   82 func_call: ID PARENL args_list • PARENR
   84 args_list: args_list • COMMA term

    COMMA   shift, and go to state 149
    PARENR  shift, and go to state 285


State 256

   72 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 286


State 257

   67 set_op: ADDSET PARENL in_set • PARENR

    PARENR  shift, and go to state 287


State 258

   68 set_op: REMOVE PARENL in_set • PARENR

    PARENR  shift, and go to state 288


State 259

   69 set_op: EXISTS PARENL in_set • PARENR

    PARENR  shift, and go to state 289


State 260

   59 term: PARENL expression PARENR •

    ADD        reduce using rule 59 (term)
    SUB        reduce using rule 59 (term)
    MULT       reduce using rule 59 (term)
    DIV        reduce using rule 59 (term)
    OR         reduce using rule 59 (term)
    AND        reduce using rule 59 (term)
    SMALLER    reduce using rule 59 (term)
    GREATER    reduce using rule 59 (term)
    SMALLEQ    reduce using rule 59 (term)
    GREATEQ    reduce using rule 59 (term)
    EQUALS     reduce using rule 59 (term)
    DIFFERENT  reduce using rule 59 (term)
    IN         reduce using rule 59 (term)
    PARENR     reduce using rule 59 (term)


State 261

   79 operation: term OR expression •

    PARENR  reduce using rule 79 (operation)


State 262

   80 operation: term AND expression •

    PARENR  reduce using rule 80 (operation)


State 263

   73 operation: term SMALLER expression •

    PARENR  reduce using rule 73 (operation)


State 264

   74 operation: term GREATER expression •

    PARENR  reduce using rule 74 (operation)


State 265

   75 operation: term SMALLEQ expression •

    PARENR  reduce using rule 75 (operation)


State 266

   76 operation: term GREATEQ expression •

    PARENR  reduce using rule 76 (operation)


State 267

   77 operation: term EQUALS expression •

    PARENR  reduce using rule 77 (operation)


State 268

   78 operation: term DIFFERENT expression •

    PARENR  reduce using rule 78 (operation)


State 269

   53 term: ID •

    ADD     reduce using rule 53 (term)
    SUB     reduce using rule 53 (term)
    MULT    reduce using rule 53 (term)
    DIV     reduce using rule 53 (term)
    PARENR  reduce using rule 53 (term)


State 270

   57 term: STRING •

    ADD     reduce using rule 57 (term)
    SUB     reduce using rule 57 (term)
    MULT    reduce using rule 57 (term)
    DIV     reduce using rule 57 (term)
    PARENR  reduce using rule 57 (term)


State 271

   56 term: CHAR •

    ADD     reduce using rule 56 (term)
    SUB     reduce using rule 56 (term)
    MULT    reduce using rule 56 (term)
    DIV     reduce using rule 56 (term)
    PARENR  reduce using rule 56 (term)


State 272

   58 term: EMPTY •

    ADD     reduce using rule 58 (term)
    SUB     reduce using rule 58 (term)
    MULT    reduce using rule 58 (term)
    DIV     reduce using rule 58 (term)
    PARENR  reduce using rule 58 (term)


State 273

   60 term: ERRORTOKEN •

    ADD     reduce using rule 60 (term)
    SUB     reduce using rule 60 (term)
    MULT    reduce using rule 60 (term)
    DIV     reduce using rule 60 (term)
    PARENR  reduce using rule 60 (term)


State 274

   54 term: INTEGER •

    ADD     reduce using rule 54 (term)
    SUB     reduce using rule 54 (term)
    MULT    reduce using rule 54 (term)
    DIV     reduce using rule 54 (term)
    PARENR  reduce using rule 54 (term)


State 275

   55 term: DECIMAL •

    ADD     reduce using rule 55 (term)
    SUB     reduce using rule 55 (term)
    MULT    reduce using rule 55 (term)
    DIV     reduce using rule 55 (term)
    PARENR  reduce using rule 55 (term)


State 276

   59 term: PARENL • expression PARENR

    ID          shift, and go to state 181
    STRING      shift, and go to state 182
    CHAR        shift, and go to state 183
    EMPTY       shift, and go to state 184
    ERRORTOKEN  shift, and go to state 185
    INTEGER     shift, and go to state 186
    DECIMAL     shift, and go to state 187
    NEG         shift, and go to state 188
    ISTYPE      shift, and go to state 189
    ADDSET      shift, and go to state 190
    REMOVE      shift, and go to state 191
    EXISTS      shift, and go to state 192
    PARENL      shift, and go to state 193

    expression      go to state 290
    term            go to state 194
    math_op         go to state 195
    math_op_muldiv  go to state 196
    set_op          go to state 197
    operation       go to state 198
    func_call       go to state 199
    in_set          go to state 200
    assign_value    go to state 201


State 277

   66 math_op_muldiv: term •

    ADD     reduce using rule 66 (math_op_muldiv)
    SUB     reduce using rule 66 (math_op_muldiv)
    MULT    reduce using rule 66 (math_op_muldiv)
    DIV     reduce using rule 66 (math_op_muldiv)
    PARENR  reduce using rule 66 (math_op_muldiv)


State 278

   61 math_op: math_op ADD math_op_muldiv •
   64 math_op_muldiv: math_op_muldiv • DIV term
   65               | math_op_muldiv • MULT term

    MULT  shift, and go to state 247
    DIV   shift, and go to state 248

    ADD     reduce using rule 61 (math_op)
    SUB     reduce using rule 61 (math_op)
    PARENR  reduce using rule 61 (math_op)


State 279

   62 math_op: math_op SUB math_op_muldiv •
   64 math_op_muldiv: math_op_muldiv • DIV term
   65               | math_op_muldiv • MULT term

    MULT  shift, and go to state 247
    DIV   shift, and go to state 248

    ADD     reduce using rule 62 (math_op)
    SUB     reduce using rule 62 (math_op)
    PARENR  reduce using rule 62 (math_op)


State 280

   65 math_op_muldiv: math_op_muldiv MULT term •

    ADD     reduce using rule 65 (math_op_muldiv)
    SUB     reduce using rule 65 (math_op_muldiv)
    MULT    reduce using rule 65 (math_op_muldiv)
    DIV     reduce using rule 65 (math_op_muldiv)
    PARENR  reduce using rule 65 (math_op_muldiv)


State 281

   64 math_op_muldiv: math_op_muldiv DIV term •

    ADD     reduce using rule 64 (math_op_muldiv)
    SUB     reduce using rule 64 (math_op_muldiv)
    MULT    reduce using rule 64 (math_op_muldiv)
    DIV     reduce using rule 64 (math_op_muldiv)
    PARENR  reduce using rule 64 (math_op_muldiv)


State 282

   59 term: PARENL expression PARENR •

    COMMA   reduce using rule 59 (term)
    PARENR  reduce using rule 59 (term)


State 283

   59 term: PARENL expression PARENR •

    IN  reduce using rule 59 (term)


State 284

   59 term: PARENL expression PARENR •

    ADD    reduce using rule 59 (term)
    SUB    reduce using rule 59 (term)
    MULT   reduce using rule 59 (term)
    DIV    reduce using rule 59 (term)
    SEMIC  reduce using rule 59 (term)


State 285

   82 func_call: ID PARENL args_list PARENR •

    PARENR  reduce using rule 82 (func_call)


State 286

   72 operation: ISTYPE PARENL expression PARENR •

    PARENR  reduce using rule 72 (operation)


State 287

   67 set_op: ADDSET PARENL in_set PARENR •

    PARENR  reduce using rule 67 (set_op)


State 288

   68 set_op: REMOVE PARENL in_set PARENR •

    PARENR  reduce using rule 68 (set_op)


State 289

   69 set_op: EXISTS PARENL in_set PARENR •

    PARENR  reduce using rule 69 (set_op)


State 290

   59 term: PARENL expression • PARENR

    PARENR  shift, and go to state 291


State 291

   59 term: PARENL expression PARENR •

    ADD     reduce using rule 59 (term)
    SUB     reduce using rule 59 (term)
    MULT    reduce using rule 59 (term)
    DIV     reduce using rule 59 (term)
    PARENR  reduce using rule 59 (term)
