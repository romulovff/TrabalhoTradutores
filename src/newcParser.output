Grammar

    0 $accept: program $end

    1 program: declarations_list

    2 declarations_list: declarations_list declaration
    3                  | declaration
    4                  | error

    5 declaration: var_dec
    6            | func_dec

    7 $@1: %empty

    8 $@2: %empty

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC

   10 $@3: %empty

   11 $@4: %empty

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC

   13 params_list: params_list COMMA parameter
   14            | parameter
   15            | %empty
   16            | error

   17 parameter: TYPE ID

   18 statement_list: statement_list statement
   19               | %empty
   20               | error

   21 statement: expression_statement
   22          | ret_st
   23          | var_dec
   24          | io_ops
   25          | basic_ops

   26 expression_statement: expression SEMIC

   27 basic_ops: if_ops
   28          | for_statement STFUNC statement_list ENDFUNC
   29          | forall_statement set_op SEMIC
   30          | forall_statement STFUNC statement_list ENDFUNC

   31 for_statement: FOR PARENL for_body PARENR

   32 forall_statement: FORALL PARENL in_set PARENR

   33 for_body: expression_statement expression_statement expression
   34         | SEMIC expression_statement expression

   35 if_ops: if_statement statement
   36       | if_statement statement else_statement
   37       | if_statement STFUNC statement_list ENDFUNC
   38       | if_statement STFUNC statement_list ENDFUNC else_statement

   39 if_statement: IF PARENL operation PARENR

   40 $@5: %empty

   41 else_statement: ELSE $@5 statement

   42 $@6: %empty

   43 else_statement: ELSE $@6 STFUNC statement_list ENDFUNC

   44 ret_st: RETURN expression SEMIC

   45 var_dec: TYPE ID SEMIC

   46 io_ops: READ PARENL PARENR SEMIC
   47       | READ PARENL ID PARENR SEMIC
   48       | WRITE PARENL expression PARENR SEMIC
   49       | WRITELN PARENL expression PARENR SEMIC

   50 expression: set_op
   51           | func_call
   52           | assign_value

   53 term: math_term
   54     | str_term

   55 math_term: ID
   56          | INTEGER
   57          | DECIMAL
   58          | PARENL expression PARENR

   59 str_term: CHAR
   60         | STRING
   61         | EMPTY
   62         | ERRORTOKEN

   63 math_op: math_op ADD math_op_muldiv
   64        | math_op SUB math_op_muldiv
   65        | math_op_muldiv

   66 math_op_muldiv: math_op_muldiv DIV math_term
   67               | math_op_muldiv MULT math_term
   68               | math_term

   69 set_op: ADDSET PARENL set_op PARENR
   70       | REMOVE PARENL set_op PARENR
   71       | EXISTS PARENL set_op PARENR
   72       | operation

   73 operation: math_op
   74          | in_set
   75          | ISTYPE PARENL expression PARENR
   76          | term SMALLER expression
   77          | term GREATER expression
   78          | term SMALLEQ expression
   79          | term GREATEQ expression
   80          | term EQUALS expression
   81          | term DIFFERENT expression
   82          | term OR expression
   83          | term AND expression
   84          | NEG expression

   85 func_call: ID PARENL args_list PARENR
   86          | str_term

   87 in_set: term IN expression

   88 args_list: args_list COMMA term
   89          | term
   90          | %empty

   91 assign_value: ID ASSIGN expression


Terminals, with rules where they appear

    $end (0) 0
    error <tree_node> (256) 4 16 20
    ID <str> (258) 9 17 45 47 55 85 91
    TYPE <str> (259) 9 12 17 45
    STRING <str> (260) 60
    CHAR <str> (261) 59
    EMPTY <str> (262) 61
    MAIN <str> (263) 12
    ERRORTOKEN <str> (264) 62
    INTEGER <integer> (265) 56
    DECIMAL <dec> (266) 57
    ADD <str> (267) 63
    SUB <str> (268) 64
    MULT <str> (269) 67
    DIV <str> (270) 66
    OR <str> (271) 82
    AND <str> (272) 83
    SMALLER <str> (273) 76
    GREATER <str> (274) 77
    SMALLEQ <str> (275) 78
    GREATEQ <str> (276) 79
    EQUALS <str> (277) 80
    DIFFERENT <str> (278) 81
    ASSIGN <str> (279) 91
    NEG <str> (280) 84
    IF <str> (281) 39
    ELSE <str> (282) 41 43
    FOR <str> (283) 31
    READ <str> (284) 46 47
    WRITE <str> (285) 48
    WRITELN <str> (286) 49
    RETURN <str> (287) 44
    IN <str> (288) 87
    ISTYPE <str> (289) 75
    ADDSET <str> (290) 69
    REMOVE <str> (291) 70
    EXISTS <str> (292) 71
    FORALL <str> (293) 32
    COMMA <str> (294) 13 88
    STFUNC <str> (295) 9 12 28 30 37 38 43
    ENDFUNC <str> (296) 9 12 28 30 37 38 43
    PARENL <str> (297) 9 12 31 32 39 46 47 48 49 58 69 70 71 75 85
    PARENR <str> (298) 9 12 31 32 39 46 47 48 49 58 69 70 71 75 85
    SEMIC <str> (299) 26 29 34 44 45 46 47 48 49
    OUTERTHEN (300)


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    program <tree_node> (47)
        on left: 1
        on right: 0
    declarations_list <tree_node> (48)
        on left: 2 3 4
        on right: 1 2
    declaration <tree_node> (49)
        on left: 5 6
        on right: 2 3
    func_dec <tree_node> (50)
        on left: 9 12
        on right: 6
    $@1 (51)
        on left: 7
        on right: 9
    $@2 (52)
        on left: 8
        on right: 9
    $@3 (53)
        on left: 10
        on right: 12
    $@4 (54)
        on left: 11
        on right: 12
    params_list <tree_node> (55)
        on left: 13 14 15 16
        on right: 9 12 13
    parameter <tree_node> (56)
        on left: 17
        on right: 13 14
    statement_list <tree_node> (57)
        on left: 18 19 20
        on right: 9 12 18 28 30 37 38 43
    statement <tree_node> (58)
        on left: 21 22 23 24 25
        on right: 18 35 36 41
    expression_statement <tree_node> (59)
        on left: 26
        on right: 21 33 34
    basic_ops <tree_node> (60)
        on left: 27 28 29 30
        on right: 25
    for_statement <tree_node> (61)
        on left: 31
        on right: 28
    forall_statement <tree_node> (62)
        on left: 32
        on right: 29 30
    for_body <tree_node> (63)
        on left: 33 34
        on right: 31
    if_ops <tree_node> (64)
        on left: 35 36 37 38
        on right: 27
    if_statement <tree_node> (65)
        on left: 39
        on right: 35 36 37 38
    else_statement <tree_node> (66)
        on left: 41 43
        on right: 36 38
    $@5 (67)
        on left: 40
        on right: 41
    $@6 (68)
        on left: 42
        on right: 43
    ret_st <tree_node> (69)
        on left: 44
        on right: 22
    var_dec <tree_node> (70)
        on left: 45
        on right: 5 23
    io_ops <tree_node> (71)
        on left: 46 47 48 49
        on right: 24
    expression <tree_node> (72)
        on left: 50 51 52
        on right: 26 33 34 44 48 49 58 75 76 77 78 79 80 81 82 83 84 87 91
    term <tree_node> (73)
        on left: 53 54
        on right: 76 77 78 79 80 81 82 83 87 88 89
    math_term <tree_node> (74)
        on left: 55 56 57 58
        on right: 53 66 67 68
    str_term <tree_node> (75)
        on left: 59 60 61 62
        on right: 54 86
    math_op <tree_node> (76)
        on left: 63 64 65
        on right: 63 64 73
    math_op_muldiv <tree_node> (77)
        on left: 66 67 68
        on right: 63 64 65 66 67
    set_op <tree_node> (78)
        on left: 69 70 71 72
        on right: 29 50 69 70 71
    operation <tree_node> (79)
        on left: 73 74 75 76 77 78 79 80 81 82 83 84
        on right: 39 72
    func_call <tree_node> (80)
        on left: 85 86
        on right: 51
    in_set <tree_node> (81)
        on left: 87
        on right: 32 74
    args_list <tree_node> (82)
        on left: 88 89 90
        on right: 85 88
    assign_value <tree_node> (83)
        on left: 91
        on right: 52


State 0

    0 $accept: • program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    program            go to state 3
    declarations_list  go to state 4
    declaration        go to state 5
    func_dec           go to state 6
    var_dec            go to state 7


State 1

    4 declarations_list: error •

    $end  reduce using rule 4 (declarations_list)
    TYPE  reduce using rule 4 (declarations_list)


State 2

    9 func_dec: TYPE • ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC
   12         | TYPE • MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC
   45 var_dec: TYPE • ID SEMIC

    ID    shift, and go to state 8
    MAIN  shift, and go to state 9


State 3

    0 $accept: program • $end

    $end  shift, and go to state 10


State 4

    1 program: declarations_list •
    2 declarations_list: declarations_list • declaration

    TYPE  shift, and go to state 2

    $end  reduce using rule 1 (program)

    declaration  go to state 11
    func_dec     go to state 6
    var_dec      go to state 7


State 5

    3 declarations_list: declaration •

    $end  reduce using rule 3 (declarations_list)
    TYPE  reduce using rule 3 (declarations_list)


State 6

    6 declaration: func_dec •

    $end  reduce using rule 6 (declaration)
    TYPE  reduce using rule 6 (declaration)


State 7

    5 declaration: var_dec •

    $end  reduce using rule 5 (declaration)
    TYPE  reduce using rule 5 (declaration)


State 8

    9 func_dec: TYPE ID • PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC
   45 var_dec: TYPE ID • SEMIC

    PARENL  shift, and go to state 12
    SEMIC   shift, and go to state 13


State 9

   12 func_dec: TYPE MAIN • PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC

    PARENL  shift, and go to state 14


State 10

    0 $accept: program $end •

    $default  accept


State 11

    2 declarations_list: declarations_list declaration •

    $end  reduce using rule 2 (declarations_list)
    TYPE  reduce using rule 2 (declarations_list)


State 12

    9 func_dec: TYPE ID PARENL • $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC

    error   reduce using rule 7 ($@1)
    TYPE    reduce using rule 7 ($@1)
    COMMA   reduce using rule 7 ($@1)
    PARENR  reduce using rule 7 ($@1)

    $@1  go to state 15


State 13

   45 var_dec: TYPE ID SEMIC •

    $end  reduce using rule 45 (var_dec)
    TYPE  reduce using rule 45 (var_dec)


State 14

   12 func_dec: TYPE MAIN PARENL • $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC

    error   reduce using rule 10 ($@3)
    TYPE    reduce using rule 10 ($@3)
    COMMA   reduce using rule 10 ($@3)
    PARENR  reduce using rule 10 ($@3)

    $@3  go to state 16


State 15

    9 func_dec: TYPE ID PARENL $@1 • params_list PARENR STFUNC $@2 statement_list ENDFUNC

    error  shift, and go to state 17
    TYPE   shift, and go to state 18

    COMMA   reduce using rule 15 (params_list)
    PARENR  reduce using rule 15 (params_list)

    params_list  go to state 19
    parameter    go to state 20


State 16

   12 func_dec: TYPE MAIN PARENL $@3 • params_list PARENR STFUNC $@4 statement_list ENDFUNC

    error  shift, and go to state 17
    TYPE   shift, and go to state 18

    COMMA   reduce using rule 15 (params_list)
    PARENR  reduce using rule 15 (params_list)

    params_list  go to state 21
    parameter    go to state 20


State 17

   16 params_list: error •

    COMMA   reduce using rule 16 (params_list)
    PARENR  reduce using rule 16 (params_list)


State 18

   17 parameter: TYPE • ID

    ID  shift, and go to state 22


State 19

    9 func_dec: TYPE ID PARENL $@1 params_list • PARENR STFUNC $@2 statement_list ENDFUNC
   13 params_list: params_list • COMMA parameter

    COMMA   shift, and go to state 23
    PARENR  shift, and go to state 24


State 20

   14 params_list: parameter •

    COMMA   reduce using rule 14 (params_list)
    PARENR  reduce using rule 14 (params_list)


State 21

   12 func_dec: TYPE MAIN PARENL $@3 params_list • PARENR STFUNC $@4 statement_list ENDFUNC
   13 params_list: params_list • COMMA parameter

    COMMA   shift, and go to state 23
    PARENR  shift, and go to state 25


State 22

   17 parameter: TYPE ID •

    COMMA   reduce using rule 17 (parameter)
    PARENR  reduce using rule 17 (parameter)


State 23

   13 params_list: params_list COMMA • parameter

    TYPE  shift, and go to state 18

    parameter  go to state 26


State 24

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR • STFUNC $@2 statement_list ENDFUNC

    STFUNC  shift, and go to state 27


State 25

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR • STFUNC $@4 statement_list ENDFUNC

    STFUNC  shift, and go to state 28


State 26

   13 params_list: params_list COMMA parameter •

    COMMA   reduce using rule 13 (params_list)
    PARENR  reduce using rule 13 (params_list)


State 27

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC • $@2 statement_list ENDFUNC

    error       reduce using rule 8 ($@2)
    ID          reduce using rule 8 ($@2)
    TYPE        reduce using rule 8 ($@2)
    STRING      reduce using rule 8 ($@2)
    CHAR        reduce using rule 8 ($@2)
    EMPTY       reduce using rule 8 ($@2)
    ERRORTOKEN  reduce using rule 8 ($@2)
    INTEGER     reduce using rule 8 ($@2)
    DECIMAL     reduce using rule 8 ($@2)
    NEG         reduce using rule 8 ($@2)
    IF          reduce using rule 8 ($@2)
    FOR         reduce using rule 8 ($@2)
    READ        reduce using rule 8 ($@2)
    WRITE       reduce using rule 8 ($@2)
    WRITELN     reduce using rule 8 ($@2)
    RETURN      reduce using rule 8 ($@2)
    ISTYPE      reduce using rule 8 ($@2)
    ADDSET      reduce using rule 8 ($@2)
    REMOVE      reduce using rule 8 ($@2)
    EXISTS      reduce using rule 8 ($@2)
    FORALL      reduce using rule 8 ($@2)
    ENDFUNC     reduce using rule 8 ($@2)
    PARENL      reduce using rule 8 ($@2)

    $@2  go to state 29


State 28

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC • $@4 statement_list ENDFUNC

    error       reduce using rule 11 ($@4)
    ID          reduce using rule 11 ($@4)
    TYPE        reduce using rule 11 ($@4)
    STRING      reduce using rule 11 ($@4)
    CHAR        reduce using rule 11 ($@4)
    EMPTY       reduce using rule 11 ($@4)
    ERRORTOKEN  reduce using rule 11 ($@4)
    INTEGER     reduce using rule 11 ($@4)
    DECIMAL     reduce using rule 11 ($@4)
    NEG         reduce using rule 11 ($@4)
    IF          reduce using rule 11 ($@4)
    FOR         reduce using rule 11 ($@4)
    READ        reduce using rule 11 ($@4)
    WRITE       reduce using rule 11 ($@4)
    WRITELN     reduce using rule 11 ($@4)
    RETURN      reduce using rule 11 ($@4)
    ISTYPE      reduce using rule 11 ($@4)
    ADDSET      reduce using rule 11 ($@4)
    REMOVE      reduce using rule 11 ($@4)
    EXISTS      reduce using rule 11 ($@4)
    FORALL      reduce using rule 11 ($@4)
    ENDFUNC     reduce using rule 11 ($@4)
    PARENL      reduce using rule 11 ($@4)

    $@4  go to state 30


State 29

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 32


State 30

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 33


State 31

   20 statement_list: error •

    ID          reduce using rule 20 (statement_list)
    TYPE        reduce using rule 20 (statement_list)
    STRING      reduce using rule 20 (statement_list)
    CHAR        reduce using rule 20 (statement_list)
    EMPTY       reduce using rule 20 (statement_list)
    ERRORTOKEN  reduce using rule 20 (statement_list)
    INTEGER     reduce using rule 20 (statement_list)
    DECIMAL     reduce using rule 20 (statement_list)
    NEG         reduce using rule 20 (statement_list)
    IF          reduce using rule 20 (statement_list)
    FOR         reduce using rule 20 (statement_list)
    READ        reduce using rule 20 (statement_list)
    WRITE       reduce using rule 20 (statement_list)
    WRITELN     reduce using rule 20 (statement_list)
    RETURN      reduce using rule 20 (statement_list)
    ISTYPE      reduce using rule 20 (statement_list)
    ADDSET      reduce using rule 20 (statement_list)
    REMOVE      reduce using rule 20 (statement_list)
    EXISTS      reduce using rule 20 (statement_list)
    FORALL      reduce using rule 20 (statement_list)
    ENDFUNC     reduce using rule 20 (statement_list)
    PARENL      reduce using rule 20 (statement_list)


State 32

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list • ENDFUNC
   18 statement_list: statement_list • statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 54
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 33

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list • ENDFUNC
   18 statement_list: statement_list • statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 77
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 34

   55 math_term: ID •
   85 func_call: ID • PARENL args_list PARENR
   91 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 78
    PARENL  shift, and go to state 79

    ADD        reduce using rule 55 (math_term)
    SUB        reduce using rule 55 (math_term)
    MULT       reduce using rule 55 (math_term)
    DIV        reduce using rule 55 (math_term)
    OR         reduce using rule 55 (math_term)
    AND        reduce using rule 55 (math_term)
    SMALLER    reduce using rule 55 (math_term)
    GREATER    reduce using rule 55 (math_term)
    SMALLEQ    reduce using rule 55 (math_term)
    GREATEQ    reduce using rule 55 (math_term)
    EQUALS     reduce using rule 55 (math_term)
    DIFFERENT  reduce using rule 55 (math_term)
    IN         reduce using rule 55 (math_term)
    SEMIC      reduce using rule 55 (math_term)


State 35

   45 var_dec: TYPE • ID SEMIC

    ID  shift, and go to state 80


State 36

   60 str_term: STRING •

    OR         reduce using rule 60 (str_term)
    AND        reduce using rule 60 (str_term)
    SMALLER    reduce using rule 60 (str_term)
    GREATER    reduce using rule 60 (str_term)
    SMALLEQ    reduce using rule 60 (str_term)
    GREATEQ    reduce using rule 60 (str_term)
    EQUALS     reduce using rule 60 (str_term)
    DIFFERENT  reduce using rule 60 (str_term)
    IN         reduce using rule 60 (str_term)
    SEMIC      reduce using rule 60 (str_term)


State 37

   59 str_term: CHAR •

    OR         reduce using rule 59 (str_term)
    AND        reduce using rule 59 (str_term)
    SMALLER    reduce using rule 59 (str_term)
    GREATER    reduce using rule 59 (str_term)
    SMALLEQ    reduce using rule 59 (str_term)
    GREATEQ    reduce using rule 59 (str_term)
    EQUALS     reduce using rule 59 (str_term)
    DIFFERENT  reduce using rule 59 (str_term)
    IN         reduce using rule 59 (str_term)
    SEMIC      reduce using rule 59 (str_term)


State 38

   61 str_term: EMPTY •

    OR         reduce using rule 61 (str_term)
    AND        reduce using rule 61 (str_term)
    SMALLER    reduce using rule 61 (str_term)
    GREATER    reduce using rule 61 (str_term)
    SMALLEQ    reduce using rule 61 (str_term)
    GREATEQ    reduce using rule 61 (str_term)
    EQUALS     reduce using rule 61 (str_term)
    DIFFERENT  reduce using rule 61 (str_term)
    IN         reduce using rule 61 (str_term)
    SEMIC      reduce using rule 61 (str_term)


State 39

   62 str_term: ERRORTOKEN •

    OR         reduce using rule 62 (str_term)
    AND        reduce using rule 62 (str_term)
    SMALLER    reduce using rule 62 (str_term)
    GREATER    reduce using rule 62 (str_term)
    SMALLEQ    reduce using rule 62 (str_term)
    GREATEQ    reduce using rule 62 (str_term)
    EQUALS     reduce using rule 62 (str_term)
    DIFFERENT  reduce using rule 62 (str_term)
    IN         reduce using rule 62 (str_term)
    SEMIC      reduce using rule 62 (str_term)


State 40

   56 math_term: INTEGER •

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    IN         reduce using rule 56 (math_term)
    SEMIC      reduce using rule 56 (math_term)


State 41

   57 math_term: DECIMAL •

    ADD        reduce using rule 57 (math_term)
    SUB        reduce using rule 57 (math_term)
    MULT       reduce using rule 57 (math_term)
    DIV        reduce using rule 57 (math_term)
    OR         reduce using rule 57 (math_term)
    AND        reduce using rule 57 (math_term)
    SMALLER    reduce using rule 57 (math_term)
    GREATER    reduce using rule 57 (math_term)
    SMALLEQ    reduce using rule 57 (math_term)
    GREATEQ    reduce using rule 57 (math_term)
    EQUALS     reduce using rule 57 (math_term)
    DIFFERENT  reduce using rule 57 (math_term)
    IN         reduce using rule 57 (math_term)
    SEMIC      reduce using rule 57 (math_term)


State 42

   84 operation: NEG • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 81
    term            go to state 67
    math_term       go to state 68
    str_term        go to state 69
    math_op         go to state 70
    math_op_muldiv  go to state 71
    set_op          go to state 72
    operation       go to state 73
    func_call       go to state 74
    in_set          go to state 75
    assign_value    go to state 76


State 43

   39 if_statement: IF • PARENL operation PARENR

    PARENL  shift, and go to state 82


State 44

   31 for_statement: FOR • PARENL for_body PARENR

    PARENL  shift, and go to state 83


State 45

   46 io_ops: READ • PARENL PARENR SEMIC
   47       | READ • PARENL ID PARENR SEMIC

    PARENL  shift, and go to state 84


State 46

   48 io_ops: WRITE • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 85


State 47

   49 io_ops: WRITELN • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 86


State 48

   44 ret_st: RETURN • expression SEMIC

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 87
    term            go to state 67
    math_term       go to state 68
    str_term        go to state 69
    math_op         go to state 70
    math_op_muldiv  go to state 71
    set_op          go to state 72
    operation       go to state 73
    func_call       go to state 74
    in_set          go to state 75
    assign_value    go to state 76


State 49

   75 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 88


State 50

   69 set_op: ADDSET • PARENL set_op PARENR

    PARENL  shift, and go to state 89


State 51

   70 set_op: REMOVE • PARENL set_op PARENR

    PARENL  shift, and go to state 90


State 52

   71 set_op: EXISTS • PARENL set_op PARENR

    PARENL  shift, and go to state 91


State 53

   32 forall_statement: FORALL • PARENL in_set PARENR

    PARENL  shift, and go to state 92


State 54

    9 func_dec: TYPE ID PARENL $@1 params_list PARENR STFUNC $@2 statement_list ENDFUNC •

    $end  reduce using rule 9 (func_dec)
    TYPE  reduce using rule 9 (func_dec)


State 55

   58 math_term: PARENL • expression PARENR

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 93
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 56

   18 statement_list: statement_list statement •

    ID          reduce using rule 18 (statement_list)
    TYPE        reduce using rule 18 (statement_list)
    STRING      reduce using rule 18 (statement_list)
    CHAR        reduce using rule 18 (statement_list)
    EMPTY       reduce using rule 18 (statement_list)
    ERRORTOKEN  reduce using rule 18 (statement_list)
    INTEGER     reduce using rule 18 (statement_list)
    DECIMAL     reduce using rule 18 (statement_list)
    NEG         reduce using rule 18 (statement_list)
    IF          reduce using rule 18 (statement_list)
    FOR         reduce using rule 18 (statement_list)
    READ        reduce using rule 18 (statement_list)
    WRITE       reduce using rule 18 (statement_list)
    WRITELN     reduce using rule 18 (statement_list)
    RETURN      reduce using rule 18 (statement_list)
    ISTYPE      reduce using rule 18 (statement_list)
    ADDSET      reduce using rule 18 (statement_list)
    REMOVE      reduce using rule 18 (statement_list)
    EXISTS      reduce using rule 18 (statement_list)
    FORALL      reduce using rule 18 (statement_list)
    ENDFUNC     reduce using rule 18 (statement_list)
    PARENL      reduce using rule 18 (statement_list)


State 57

   21 statement: expression_statement •

    ID          reduce using rule 21 (statement)
    TYPE        reduce using rule 21 (statement)
    STRING      reduce using rule 21 (statement)
    CHAR        reduce using rule 21 (statement)
    EMPTY       reduce using rule 21 (statement)
    ERRORTOKEN  reduce using rule 21 (statement)
    INTEGER     reduce using rule 21 (statement)
    DECIMAL     reduce using rule 21 (statement)
    NEG         reduce using rule 21 (statement)
    IF          reduce using rule 21 (statement)
    FOR         reduce using rule 21 (statement)
    READ        reduce using rule 21 (statement)
    WRITE       reduce using rule 21 (statement)
    WRITELN     reduce using rule 21 (statement)
    RETURN      reduce using rule 21 (statement)
    ISTYPE      reduce using rule 21 (statement)
    ADDSET      reduce using rule 21 (statement)
    REMOVE      reduce using rule 21 (statement)
    EXISTS      reduce using rule 21 (statement)
    FORALL      reduce using rule 21 (statement)
    ENDFUNC     reduce using rule 21 (statement)
    PARENL      reduce using rule 21 (statement)


State 58

   25 statement: basic_ops •

    ID          reduce using rule 25 (statement)
    TYPE        reduce using rule 25 (statement)
    STRING      reduce using rule 25 (statement)
    CHAR        reduce using rule 25 (statement)
    EMPTY       reduce using rule 25 (statement)
    ERRORTOKEN  reduce using rule 25 (statement)
    INTEGER     reduce using rule 25 (statement)
    DECIMAL     reduce using rule 25 (statement)
    NEG         reduce using rule 25 (statement)
    IF          reduce using rule 25 (statement)
    FOR         reduce using rule 25 (statement)
    READ        reduce using rule 25 (statement)
    WRITE       reduce using rule 25 (statement)
    WRITELN     reduce using rule 25 (statement)
    RETURN      reduce using rule 25 (statement)
    ISTYPE      reduce using rule 25 (statement)
    ADDSET      reduce using rule 25 (statement)
    REMOVE      reduce using rule 25 (statement)
    EXISTS      reduce using rule 25 (statement)
    FORALL      reduce using rule 25 (statement)
    ENDFUNC     reduce using rule 25 (statement)
    PARENL      reduce using rule 25 (statement)


State 59

   28 basic_ops: for_statement • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 94


State 60

   29 basic_ops: forall_statement • set_op SEMIC
   30          | forall_statement • STFUNC statement_list ENDFUNC

    ID          shift, and go to state 95
    STRING      shift, and go to state 209
    CHAR        shift, and go to state 210
    EMPTY       shift, and go to state 211
    ERRORTOKEN  shift, and go to state 212
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    STFUNC      shift, and go to state 96
    PARENL      shift, and go to state 55

    term            go to state 67
    math_term       go to state 68
    str_term        go to state 97
    math_op         go to state 70
    math_op_muldiv  go to state 71
    set_op          go to state 98
    operation       go to state 73
    in_set          go to state 75


State 61

   27 basic_ops: if_ops •

    ID          reduce using rule 27 (basic_ops)
    TYPE        reduce using rule 27 (basic_ops)
    STRING      reduce using rule 27 (basic_ops)
    CHAR        reduce using rule 27 (basic_ops)
    EMPTY       reduce using rule 27 (basic_ops)
    ERRORTOKEN  reduce using rule 27 (basic_ops)
    INTEGER     reduce using rule 27 (basic_ops)
    DECIMAL     reduce using rule 27 (basic_ops)
    NEG         reduce using rule 27 (basic_ops)
    IF          reduce using rule 27 (basic_ops)
    FOR         reduce using rule 27 (basic_ops)
    READ        reduce using rule 27 (basic_ops)
    WRITE       reduce using rule 27 (basic_ops)
    WRITELN     reduce using rule 27 (basic_ops)
    RETURN      reduce using rule 27 (basic_ops)
    ISTYPE      reduce using rule 27 (basic_ops)
    ADDSET      reduce using rule 27 (basic_ops)
    REMOVE      reduce using rule 27 (basic_ops)
    EXISTS      reduce using rule 27 (basic_ops)
    FORALL      reduce using rule 27 (basic_ops)
    ENDFUNC     reduce using rule 27 (basic_ops)
    PARENL      reduce using rule 27 (basic_ops)


State 62

   35 if_ops: if_statement • statement
   36       | if_statement • statement else_statement
   37       | if_statement • STFUNC statement_list ENDFUNC
   38       | if_statement • STFUNC statement_list ENDFUNC else_statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 213
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 214
    WRITE       shift, and go to state 215
    WRITELN     shift, and go to state 216
    RETURN      shift, and go to state 217
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    STFUNC      shift, and go to state 99
    PARENL      shift, and go to state 55

    statement             go to state 100
    expression_statement  go to state 218
    basic_ops             go to state 219
    for_statement         go to state 220
    forall_statement      go to state 221
    if_ops                go to state 222
    if_statement          go to state 223
    ret_st                go to state 224
    var_dec               go to state 225
    io_ops                go to state 226
    expression            go to state 227
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 63

   22 statement: ret_st •

    ID          reduce using rule 22 (statement)
    TYPE        reduce using rule 22 (statement)
    STRING      reduce using rule 22 (statement)
    CHAR        reduce using rule 22 (statement)
    EMPTY       reduce using rule 22 (statement)
    ERRORTOKEN  reduce using rule 22 (statement)
    INTEGER     reduce using rule 22 (statement)
    DECIMAL     reduce using rule 22 (statement)
    NEG         reduce using rule 22 (statement)
    IF          reduce using rule 22 (statement)
    FOR         reduce using rule 22 (statement)
    READ        reduce using rule 22 (statement)
    WRITE       reduce using rule 22 (statement)
    WRITELN     reduce using rule 22 (statement)
    RETURN      reduce using rule 22 (statement)
    ISTYPE      reduce using rule 22 (statement)
    ADDSET      reduce using rule 22 (statement)
    REMOVE      reduce using rule 22 (statement)
    EXISTS      reduce using rule 22 (statement)
    FORALL      reduce using rule 22 (statement)
    ENDFUNC     reduce using rule 22 (statement)
    PARENL      reduce using rule 22 (statement)


State 64

   23 statement: var_dec •

    ID          reduce using rule 23 (statement)
    TYPE        reduce using rule 23 (statement)
    STRING      reduce using rule 23 (statement)
    CHAR        reduce using rule 23 (statement)
    EMPTY       reduce using rule 23 (statement)
    ERRORTOKEN  reduce using rule 23 (statement)
    INTEGER     reduce using rule 23 (statement)
    DECIMAL     reduce using rule 23 (statement)
    NEG         reduce using rule 23 (statement)
    IF          reduce using rule 23 (statement)
    FOR         reduce using rule 23 (statement)
    READ        reduce using rule 23 (statement)
    WRITE       reduce using rule 23 (statement)
    WRITELN     reduce using rule 23 (statement)
    RETURN      reduce using rule 23 (statement)
    ISTYPE      reduce using rule 23 (statement)
    ADDSET      reduce using rule 23 (statement)
    REMOVE      reduce using rule 23 (statement)
    EXISTS      reduce using rule 23 (statement)
    FORALL      reduce using rule 23 (statement)
    ENDFUNC     reduce using rule 23 (statement)
    PARENL      reduce using rule 23 (statement)


State 65

   24 statement: io_ops •

    ID          reduce using rule 24 (statement)
    TYPE        reduce using rule 24 (statement)
    STRING      reduce using rule 24 (statement)
    CHAR        reduce using rule 24 (statement)
    EMPTY       reduce using rule 24 (statement)
    ERRORTOKEN  reduce using rule 24 (statement)
    INTEGER     reduce using rule 24 (statement)
    DECIMAL     reduce using rule 24 (statement)
    NEG         reduce using rule 24 (statement)
    IF          reduce using rule 24 (statement)
    FOR         reduce using rule 24 (statement)
    READ        reduce using rule 24 (statement)
    WRITE       reduce using rule 24 (statement)
    WRITELN     reduce using rule 24 (statement)
    RETURN      reduce using rule 24 (statement)
    ISTYPE      reduce using rule 24 (statement)
    ADDSET      reduce using rule 24 (statement)
    REMOVE      reduce using rule 24 (statement)
    EXISTS      reduce using rule 24 (statement)
    FORALL      reduce using rule 24 (statement)
    ENDFUNC     reduce using rule 24 (statement)
    PARENL      reduce using rule 24 (statement)


State 66

   26 expression_statement: expression • SEMIC

    SEMIC  shift, and go to state 101


State 67

   76 operation: term • SMALLER expression
   77          | term • GREATER expression
   78          | term • SMALLEQ expression
   79          | term • GREATEQ expression
   80          | term • EQUALS expression
   81          | term • DIFFERENT expression
   82          | term • OR expression
   83          | term • AND expression
   87 in_set: term • IN expression

    OR         shift, and go to state 102
    AND        shift, and go to state 103
    SMALLER    shift, and go to state 104
    GREATER    shift, and go to state 105
    SMALLEQ    shift, and go to state 106
    GREATEQ    shift, and go to state 107
    EQUALS     shift, and go to state 108
    DIFFERENT  shift, and go to state 109
    IN         shift, and go to state 110


State 68

   53 term: math_term •
   68 math_op_muldiv: math_term •

    ADD        reduce using rule 68 (math_op_muldiv)
    SUB        reduce using rule 68 (math_op_muldiv)
    MULT       reduce using rule 68 (math_op_muldiv)
    DIV        reduce using rule 68 (math_op_muldiv)
    OR         reduce using rule 53 (term)
    AND        reduce using rule 53 (term)
    SMALLER    reduce using rule 53 (term)
    GREATER    reduce using rule 53 (term)
    SMALLEQ    reduce using rule 53 (term)
    GREATEQ    reduce using rule 53 (term)
    EQUALS     reduce using rule 53 (term)
    DIFFERENT  reduce using rule 53 (term)
    IN         reduce using rule 53 (term)
    SEMIC      reduce using rule 68 (math_op_muldiv)


State 69

   54 term: str_term •
   86 func_call: str_term •

    OR         reduce using rule 54 (term)
    AND        reduce using rule 54 (term)
    SMALLER    reduce using rule 54 (term)
    GREATER    reduce using rule 54 (term)
    SMALLEQ    reduce using rule 54 (term)
    GREATEQ    reduce using rule 54 (term)
    EQUALS     reduce using rule 54 (term)
    DIFFERENT  reduce using rule 54 (term)
    IN         reduce using rule 54 (term)
    SEMIC      reduce using rule 86 (func_call)


State 70

   63 math_op: math_op • ADD math_op_muldiv
   64        | math_op • SUB math_op_muldiv
   73 operation: math_op •

    ADD  shift, and go to state 111
    SUB  shift, and go to state 112

    SEMIC  reduce using rule 73 (operation)


State 71

   65 math_op: math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 113
    DIV   shift, and go to state 114

    ADD    reduce using rule 65 (math_op)
    SUB    reduce using rule 65 (math_op)
    SEMIC  reduce using rule 65 (math_op)


State 72

   50 expression: set_op •

    SEMIC  reduce using rule 50 (expression)


State 73

   72 set_op: operation •

    SEMIC  reduce using rule 72 (set_op)


State 74

   51 expression: func_call •

    SEMIC  reduce using rule 51 (expression)


State 75

   74 operation: in_set •

    SEMIC  reduce using rule 74 (operation)


State 76

   52 expression: assign_value •

    SEMIC  reduce using rule 52 (expression)


State 77

   12 func_dec: TYPE MAIN PARENL $@3 params_list PARENR STFUNC $@4 statement_list ENDFUNC •

    $end  reduce using rule 12 (func_dec)
    TYPE  reduce using rule 12 (func_dec)


State 78

   91 assign_value: ID ASSIGN • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 115
    term            go to state 67
    math_term       go to state 68
    str_term        go to state 69
    math_op         go to state 70
    math_op_muldiv  go to state 71
    set_op          go to state 72
    operation       go to state 73
    func_call       go to state 74
    in_set          go to state 75
    assign_value    go to state 76


State 79

   85 func_call: ID PARENL • args_list PARENR

    ID          shift, and go to state 228
    STRING      shift, and go to state 229
    CHAR        shift, and go to state 230
    EMPTY       shift, and go to state 231
    ERRORTOKEN  shift, and go to state 232
    INTEGER     shift, and go to state 233
    DECIMAL     shift, and go to state 234
    PARENL      shift, and go to state 235

    COMMA   reduce using rule 90 (args_list)
    PARENR  reduce using rule 90 (args_list)

    term       go to state 116
    math_term  go to state 117
    str_term   go to state 236
    args_list  go to state 118


State 80

   45 var_dec: TYPE ID • SEMIC

    SEMIC  shift, and go to state 237


State 81

   84 operation: NEG expression •

    SEMIC  reduce using rule 84 (operation)


State 82

   39 if_statement: IF PARENL • operation PARENR

    ID          shift, and go to state 238
    STRING      shift, and go to state 209
    CHAR        shift, and go to state 210
    EMPTY       shift, and go to state 211
    ERRORTOKEN  shift, and go to state 212
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    PARENL      shift, and go to state 198

    term            go to state 199
    math_term       go to state 200
    str_term        go to state 97
    math_op         go to state 202
    math_op_muldiv  go to state 203
    operation       go to state 119
    in_set          go to state 207


State 83

   31 for_statement: FOR PARENL • for_body PARENR

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55
    SEMIC       shift, and go to state 120

    expression_statement  go to state 121
    for_body              go to state 122
    expression            go to state 239
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 84

   46 io_ops: READ PARENL • PARENR SEMIC
   47       | READ PARENL • ID PARENR SEMIC

    ID      shift, and go to state 123
    PARENR  shift, and go to state 124


State 85

   48 io_ops: WRITE PARENL • expression PARENR SEMIC

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 125
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 86

   49 io_ops: WRITELN PARENL • expression PARENR SEMIC

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 126
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 87

   44 ret_st: RETURN expression • SEMIC

    SEMIC  shift, and go to state 127


State 88

   75 operation: ISTYPE PARENL • expression PARENR

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 128
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 89

   69 set_op: ADDSET PARENL • set_op PARENR

    ID          shift, and go to state 238
    STRING      shift, and go to state 209
    CHAR        shift, and go to state 210
    EMPTY       shift, and go to state 211
    ERRORTOKEN  shift, and go to state 212
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    term            go to state 199
    math_term       go to state 200
    str_term        go to state 97
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 129
    operation       go to state 205
    in_set          go to state 207


State 90

   70 set_op: REMOVE PARENL • set_op PARENR

    ID          shift, and go to state 238
    STRING      shift, and go to state 209
    CHAR        shift, and go to state 210
    EMPTY       shift, and go to state 211
    ERRORTOKEN  shift, and go to state 212
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    term            go to state 199
    math_term       go to state 200
    str_term        go to state 97
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 130
    operation       go to state 205
    in_set          go to state 207


State 91

   71 set_op: EXISTS PARENL • set_op PARENR

    ID          shift, and go to state 238
    STRING      shift, and go to state 209
    CHAR        shift, and go to state 210
    EMPTY       shift, and go to state 211
    ERRORTOKEN  shift, and go to state 212
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    term            go to state 199
    math_term       go to state 200
    str_term        go to state 97
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 131
    operation       go to state 205
    in_set          go to state 207


State 92

   32 forall_statement: FORALL PARENL • in_set PARENR

    ID          shift, and go to state 240
    STRING      shift, and go to state 241
    CHAR        shift, and go to state 242
    EMPTY       shift, and go to state 243
    ERRORTOKEN  shift, and go to state 244
    INTEGER     shift, and go to state 245
    DECIMAL     shift, and go to state 246
    PARENL      shift, and go to state 247

    term       go to state 132
    math_term  go to state 248
    str_term   go to state 249
    in_set     go to state 133


State 93

   58 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 134


State 94

   28 basic_ops: for_statement STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 135


State 95

   55 math_term: ID •

    ADD        reduce using rule 55 (math_term)
    SUB        reduce using rule 55 (math_term)
    MULT       reduce using rule 55 (math_term)
    DIV        reduce using rule 55 (math_term)
    OR         reduce using rule 55 (math_term)
    AND        reduce using rule 55 (math_term)
    SMALLER    reduce using rule 55 (math_term)
    GREATER    reduce using rule 55 (math_term)
    SMALLEQ    reduce using rule 55 (math_term)
    GREATEQ    reduce using rule 55 (math_term)
    EQUALS     reduce using rule 55 (math_term)
    DIFFERENT  reduce using rule 55 (math_term)
    IN         reduce using rule 55 (math_term)
    SEMIC      reduce using rule 55 (math_term)


State 96

   30 basic_ops: forall_statement STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 136


State 97

   54 term: str_term •

    OR         reduce using rule 54 (term)
    AND        reduce using rule 54 (term)
    SMALLER    reduce using rule 54 (term)
    GREATER    reduce using rule 54 (term)
    SMALLEQ    reduce using rule 54 (term)
    GREATEQ    reduce using rule 54 (term)
    EQUALS     reduce using rule 54 (term)
    DIFFERENT  reduce using rule 54 (term)
    IN         reduce using rule 54 (term)


State 98

   29 basic_ops: forall_statement set_op • SEMIC

    SEMIC  shift, and go to state 137


State 99

   37 if_ops: if_statement STFUNC • statement_list ENDFUNC
   38       | if_statement STFUNC • statement_list ENDFUNC else_statement

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 138


State 100

   35 if_ops: if_statement statement •
   36       | if_statement statement • else_statement

    ELSE  shift, and go to state 139

    ID          reduce using rule 35 (if_ops)
    TYPE        reduce using rule 35 (if_ops)
    STRING      reduce using rule 35 (if_ops)
    CHAR        reduce using rule 35 (if_ops)
    EMPTY       reduce using rule 35 (if_ops)
    ERRORTOKEN  reduce using rule 35 (if_ops)
    INTEGER     reduce using rule 35 (if_ops)
    DECIMAL     reduce using rule 35 (if_ops)
    NEG         reduce using rule 35 (if_ops)
    IF          reduce using rule 35 (if_ops)
    FOR         reduce using rule 35 (if_ops)
    READ        reduce using rule 35 (if_ops)
    WRITE       reduce using rule 35 (if_ops)
    WRITELN     reduce using rule 35 (if_ops)
    RETURN      reduce using rule 35 (if_ops)
    ISTYPE      reduce using rule 35 (if_ops)
    ADDSET      reduce using rule 35 (if_ops)
    REMOVE      reduce using rule 35 (if_ops)
    EXISTS      reduce using rule 35 (if_ops)
    FORALL      reduce using rule 35 (if_ops)
    ENDFUNC     reduce using rule 35 (if_ops)
    PARENL      reduce using rule 35 (if_ops)

    else_statement  go to state 140


State 101

   26 expression_statement: expression SEMIC •

    ID          reduce using rule 26 (expression_statement)
    TYPE        reduce using rule 26 (expression_statement)
    STRING      reduce using rule 26 (expression_statement)
    CHAR        reduce using rule 26 (expression_statement)
    EMPTY       reduce using rule 26 (expression_statement)
    ERRORTOKEN  reduce using rule 26 (expression_statement)
    INTEGER     reduce using rule 26 (expression_statement)
    DECIMAL     reduce using rule 26 (expression_statement)
    NEG         reduce using rule 26 (expression_statement)
    IF          reduce using rule 26 (expression_statement)
    FOR         reduce using rule 26 (expression_statement)
    READ        reduce using rule 26 (expression_statement)
    WRITE       reduce using rule 26 (expression_statement)
    WRITELN     reduce using rule 26 (expression_statement)
    RETURN      reduce using rule 26 (expression_statement)
    ISTYPE      reduce using rule 26 (expression_statement)
    ADDSET      reduce using rule 26 (expression_statement)
    REMOVE      reduce using rule 26 (expression_statement)
    EXISTS      reduce using rule 26 (expression_statement)
    FORALL      reduce using rule 26 (expression_statement)
    ENDFUNC     reduce using rule 26 (expression_statement)
    PARENL      reduce using rule 26 (expression_statement)


State 102

   82 operation: term OR • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 141
    term            go to state 67
    math_term       go to state 68
    str_term        go to state 69
    math_op         go to state 70
    math_op_muldiv  go to state 71
    set_op          go to state 72
    operation       go to state 73
    func_call       go to state 74
    in_set          go to state 75
    assign_value    go to state 76


State 103

   83 operation: term AND • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 142
    term            go to state 67
    math_term       go to state 68
    str_term        go to state 69
    math_op         go to state 70
    math_op_muldiv  go to state 71
    set_op          go to state 72
    operation       go to state 73
    func_call       go to state 74
    in_set          go to state 75
    assign_value    go to state 76


State 104

   76 operation: term SMALLER • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 143
    term            go to state 67
    math_term       go to state 68
    str_term        go to state 69
    math_op         go to state 70
    math_op_muldiv  go to state 71
    set_op          go to state 72
    operation       go to state 73
    func_call       go to state 74
    in_set          go to state 75
    assign_value    go to state 76


State 105

   77 operation: term GREATER • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 144
    term            go to state 67
    math_term       go to state 68
    str_term        go to state 69
    math_op         go to state 70
    math_op_muldiv  go to state 71
    set_op          go to state 72
    operation       go to state 73
    func_call       go to state 74
    in_set          go to state 75
    assign_value    go to state 76


State 106

   78 operation: term SMALLEQ • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 145
    term            go to state 67
    math_term       go to state 68
    str_term        go to state 69
    math_op         go to state 70
    math_op_muldiv  go to state 71
    set_op          go to state 72
    operation       go to state 73
    func_call       go to state 74
    in_set          go to state 75
    assign_value    go to state 76


State 107

   79 operation: term GREATEQ • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 146
    term            go to state 67
    math_term       go to state 68
    str_term        go to state 69
    math_op         go to state 70
    math_op_muldiv  go to state 71
    set_op          go to state 72
    operation       go to state 73
    func_call       go to state 74
    in_set          go to state 75
    assign_value    go to state 76


State 108

   80 operation: term EQUALS • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 147
    term            go to state 67
    math_term       go to state 68
    str_term        go to state 69
    math_op         go to state 70
    math_op_muldiv  go to state 71
    set_op          go to state 72
    operation       go to state 73
    func_call       go to state 74
    in_set          go to state 75
    assign_value    go to state 76


State 109

   81 operation: term DIFFERENT • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 148
    term            go to state 67
    math_term       go to state 68
    str_term        go to state 69
    math_op         go to state 70
    math_op_muldiv  go to state 71
    set_op          go to state 72
    operation       go to state 73
    func_call       go to state 74
    in_set          go to state 75
    assign_value    go to state 76


State 110

   87 in_set: term IN • expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 149
    term            go to state 67
    math_term       go to state 68
    str_term        go to state 69
    math_op         go to state 70
    math_op_muldiv  go to state 71
    set_op          go to state 72
    operation       go to state 73
    func_call       go to state 74
    in_set          go to state 75
    assign_value    go to state 76


State 111

   63 math_op: math_op ADD • math_op_muldiv

    ID       shift, and go to state 250
    INTEGER  shift, and go to state 251
    DECIMAL  shift, and go to state 252
    PARENL   shift, and go to state 253

    math_term       go to state 150
    math_op_muldiv  go to state 151


State 112

   64 math_op: math_op SUB • math_op_muldiv

    ID       shift, and go to state 250
    INTEGER  shift, and go to state 251
    DECIMAL  shift, and go to state 252
    PARENL   shift, and go to state 253

    math_term       go to state 150
    math_op_muldiv  go to state 152


State 113

   67 math_op_muldiv: math_op_muldiv MULT • math_term

    ID       shift, and go to state 250
    INTEGER  shift, and go to state 251
    DECIMAL  shift, and go to state 252
    PARENL   shift, and go to state 253

    math_term  go to state 153


State 114

   66 math_op_muldiv: math_op_muldiv DIV • math_term

    ID       shift, and go to state 250
    INTEGER  shift, and go to state 251
    DECIMAL  shift, and go to state 252
    PARENL   shift, and go to state 253

    math_term  go to state 154


State 115

   91 assign_value: ID ASSIGN expression •

    SEMIC  reduce using rule 91 (assign_value)


State 116

   89 args_list: term •

    COMMA   reduce using rule 89 (args_list)
    PARENR  reduce using rule 89 (args_list)


State 117

   53 term: math_term •

    COMMA   reduce using rule 53 (term)
    PARENR  reduce using rule 53 (term)


State 118

   85 func_call: ID PARENL args_list • PARENR
   88 args_list: args_list • COMMA term

    COMMA   shift, and go to state 155
    PARENR  shift, and go to state 156


State 119

   39 if_statement: IF PARENL operation • PARENR

    PARENR  shift, and go to state 157


State 120

   34 for_body: SEMIC • expression_statement expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression_statement  go to state 158
    expression            go to state 239
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 121

   33 for_body: expression_statement • expression_statement expression

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression_statement  go to state 159
    expression            go to state 239
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 122

   31 for_statement: FOR PARENL for_body • PARENR

    PARENR  shift, and go to state 160


State 123

   47 io_ops: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 161


State 124

   46 io_ops: READ PARENL PARENR • SEMIC

    SEMIC  shift, and go to state 162


State 125

   48 io_ops: WRITE PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 163


State 126

   49 io_ops: WRITELN PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 164


State 127

   44 ret_st: RETURN expression SEMIC •

    ID          reduce using rule 44 (ret_st)
    TYPE        reduce using rule 44 (ret_st)
    STRING      reduce using rule 44 (ret_st)
    CHAR        reduce using rule 44 (ret_st)
    EMPTY       reduce using rule 44 (ret_st)
    ERRORTOKEN  reduce using rule 44 (ret_st)
    INTEGER     reduce using rule 44 (ret_st)
    DECIMAL     reduce using rule 44 (ret_st)
    NEG         reduce using rule 44 (ret_st)
    IF          reduce using rule 44 (ret_st)
    FOR         reduce using rule 44 (ret_st)
    READ        reduce using rule 44 (ret_st)
    WRITE       reduce using rule 44 (ret_st)
    WRITELN     reduce using rule 44 (ret_st)
    RETURN      reduce using rule 44 (ret_st)
    ISTYPE      reduce using rule 44 (ret_st)
    ADDSET      reduce using rule 44 (ret_st)
    REMOVE      reduce using rule 44 (ret_st)
    EXISTS      reduce using rule 44 (ret_st)
    FORALL      reduce using rule 44 (ret_st)
    ENDFUNC     reduce using rule 44 (ret_st)
    PARENL      reduce using rule 44 (ret_st)


State 128

   75 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 165


State 129

   69 set_op: ADDSET PARENL set_op • PARENR

    PARENR  shift, and go to state 166


State 130

   70 set_op: REMOVE PARENL set_op • PARENR

    PARENR  shift, and go to state 167


State 131

   71 set_op: EXISTS PARENL set_op • PARENR

    PARENR  shift, and go to state 168


State 132

   87 in_set: term • IN expression

    IN  shift, and go to state 254


State 133

   32 forall_statement: FORALL PARENL in_set • PARENR

    PARENR  shift, and go to state 169


State 134

   58 math_term: PARENL expression PARENR •

    ADD        reduce using rule 58 (math_term)
    SUB        reduce using rule 58 (math_term)
    MULT       reduce using rule 58 (math_term)
    DIV        reduce using rule 58 (math_term)
    OR         reduce using rule 58 (math_term)
    AND        reduce using rule 58 (math_term)
    SMALLER    reduce using rule 58 (math_term)
    GREATER    reduce using rule 58 (math_term)
    SMALLEQ    reduce using rule 58 (math_term)
    GREATEQ    reduce using rule 58 (math_term)
    EQUALS     reduce using rule 58 (math_term)
    DIFFERENT  reduce using rule 58 (math_term)
    IN         reduce using rule 58 (math_term)
    SEMIC      reduce using rule 58 (math_term)


State 135

   18 statement_list: statement_list • statement
   28 basic_ops: for_statement STFUNC statement_list • ENDFUNC

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 170
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 136

   18 statement_list: statement_list • statement
   30 basic_ops: forall_statement STFUNC statement_list • ENDFUNC

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 171
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 137

   29 basic_ops: forall_statement set_op SEMIC •

    ID          reduce using rule 29 (basic_ops)
    TYPE        reduce using rule 29 (basic_ops)
    STRING      reduce using rule 29 (basic_ops)
    CHAR        reduce using rule 29 (basic_ops)
    EMPTY       reduce using rule 29 (basic_ops)
    ERRORTOKEN  reduce using rule 29 (basic_ops)
    INTEGER     reduce using rule 29 (basic_ops)
    DECIMAL     reduce using rule 29 (basic_ops)
    NEG         reduce using rule 29 (basic_ops)
    IF          reduce using rule 29 (basic_ops)
    FOR         reduce using rule 29 (basic_ops)
    READ        reduce using rule 29 (basic_ops)
    WRITE       reduce using rule 29 (basic_ops)
    WRITELN     reduce using rule 29 (basic_ops)
    RETURN      reduce using rule 29 (basic_ops)
    ISTYPE      reduce using rule 29 (basic_ops)
    ADDSET      reduce using rule 29 (basic_ops)
    REMOVE      reduce using rule 29 (basic_ops)
    EXISTS      reduce using rule 29 (basic_ops)
    FORALL      reduce using rule 29 (basic_ops)
    ENDFUNC     reduce using rule 29 (basic_ops)
    PARENL      reduce using rule 29 (basic_ops)


State 138

   18 statement_list: statement_list • statement
   37 if_ops: if_statement STFUNC statement_list • ENDFUNC
   38       | if_statement STFUNC statement_list • ENDFUNC else_statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 172
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 139

   41 else_statement: ELSE • $@5 statement
   43               | ELSE • $@6 STFUNC statement_list ENDFUNC

    ID          reduce using rule 40 ($@5)
    TYPE        reduce using rule 40 ($@5)
    STRING      reduce using rule 40 ($@5)
    CHAR        reduce using rule 40 ($@5)
    EMPTY       reduce using rule 40 ($@5)
    ERRORTOKEN  reduce using rule 40 ($@5)
    INTEGER     reduce using rule 40 ($@5)
    DECIMAL     reduce using rule 40 ($@5)
    NEG         reduce using rule 40 ($@5)
    IF          reduce using rule 40 ($@5)
    FOR         reduce using rule 40 ($@5)
    READ        reduce using rule 40 ($@5)
    WRITE       reduce using rule 40 ($@5)
    WRITELN     reduce using rule 40 ($@5)
    RETURN      reduce using rule 40 ($@5)
    ISTYPE      reduce using rule 40 ($@5)
    ADDSET      reduce using rule 40 ($@5)
    REMOVE      reduce using rule 40 ($@5)
    EXISTS      reduce using rule 40 ($@5)
    FORALL      reduce using rule 40 ($@5)
    STFUNC      reduce using rule 42 ($@6)
    PARENL      reduce using rule 40 ($@5)

    $@5  go to state 173
    $@6  go to state 174


State 140

   36 if_ops: if_statement statement else_statement •

    ID          reduce using rule 36 (if_ops)
    TYPE        reduce using rule 36 (if_ops)
    STRING      reduce using rule 36 (if_ops)
    CHAR        reduce using rule 36 (if_ops)
    EMPTY       reduce using rule 36 (if_ops)
    ERRORTOKEN  reduce using rule 36 (if_ops)
    INTEGER     reduce using rule 36 (if_ops)
    DECIMAL     reduce using rule 36 (if_ops)
    NEG         reduce using rule 36 (if_ops)
    IF          reduce using rule 36 (if_ops)
    FOR         reduce using rule 36 (if_ops)
    READ        reduce using rule 36 (if_ops)
    WRITE       reduce using rule 36 (if_ops)
    WRITELN     reduce using rule 36 (if_ops)
    RETURN      reduce using rule 36 (if_ops)
    ISTYPE      reduce using rule 36 (if_ops)
    ADDSET      reduce using rule 36 (if_ops)
    REMOVE      reduce using rule 36 (if_ops)
    EXISTS      reduce using rule 36 (if_ops)
    FORALL      reduce using rule 36 (if_ops)
    ENDFUNC     reduce using rule 36 (if_ops)
    PARENL      reduce using rule 36 (if_ops)


State 141

   82 operation: term OR expression •

    SEMIC  reduce using rule 82 (operation)


State 142

   83 operation: term AND expression •

    SEMIC  reduce using rule 83 (operation)


State 143

   76 operation: term SMALLER expression •

    SEMIC  reduce using rule 76 (operation)


State 144

   77 operation: term GREATER expression •

    SEMIC  reduce using rule 77 (operation)


State 145

   78 operation: term SMALLEQ expression •

    SEMIC  reduce using rule 78 (operation)


State 146

   79 operation: term GREATEQ expression •

    SEMIC  reduce using rule 79 (operation)


State 147

   80 operation: term EQUALS expression •

    SEMIC  reduce using rule 80 (operation)


State 148

   81 operation: term DIFFERENT expression •

    SEMIC  reduce using rule 81 (operation)


State 149

   87 in_set: term IN expression •

    SEMIC  reduce using rule 87 (in_set)


State 150

   68 math_op_muldiv: math_term •

    ADD    reduce using rule 68 (math_op_muldiv)
    SUB    reduce using rule 68 (math_op_muldiv)
    MULT   reduce using rule 68 (math_op_muldiv)
    DIV    reduce using rule 68 (math_op_muldiv)
    SEMIC  reduce using rule 68 (math_op_muldiv)


State 151

   63 math_op: math_op ADD math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 113
    DIV   shift, and go to state 114

    ADD    reduce using rule 63 (math_op)
    SUB    reduce using rule 63 (math_op)
    SEMIC  reduce using rule 63 (math_op)


State 152

   64 math_op: math_op SUB math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 113
    DIV   shift, and go to state 114

    ADD    reduce using rule 64 (math_op)
    SUB    reduce using rule 64 (math_op)
    SEMIC  reduce using rule 64 (math_op)


State 153

   67 math_op_muldiv: math_op_muldiv MULT math_term •

    ADD    reduce using rule 67 (math_op_muldiv)
    SUB    reduce using rule 67 (math_op_muldiv)
    MULT   reduce using rule 67 (math_op_muldiv)
    DIV    reduce using rule 67 (math_op_muldiv)
    SEMIC  reduce using rule 67 (math_op_muldiv)


State 154

   66 math_op_muldiv: math_op_muldiv DIV math_term •

    ADD    reduce using rule 66 (math_op_muldiv)
    SUB    reduce using rule 66 (math_op_muldiv)
    MULT   reduce using rule 66 (math_op_muldiv)
    DIV    reduce using rule 66 (math_op_muldiv)
    SEMIC  reduce using rule 66 (math_op_muldiv)


State 155

   88 args_list: args_list COMMA • term

    ID          shift, and go to state 228
    STRING      shift, and go to state 229
    CHAR        shift, and go to state 230
    EMPTY       shift, and go to state 231
    ERRORTOKEN  shift, and go to state 232
    INTEGER     shift, and go to state 233
    DECIMAL     shift, and go to state 234
    PARENL      shift, and go to state 235

    term       go to state 175
    math_term  go to state 117
    str_term   go to state 236


State 156

   85 func_call: ID PARENL args_list PARENR •

    SEMIC  reduce using rule 85 (func_call)


State 157

   39 if_statement: IF PARENL operation PARENR •

    ID          reduce using rule 39 (if_statement)
    TYPE        reduce using rule 39 (if_statement)
    STRING      reduce using rule 39 (if_statement)
    CHAR        reduce using rule 39 (if_statement)
    EMPTY       reduce using rule 39 (if_statement)
    ERRORTOKEN  reduce using rule 39 (if_statement)
    INTEGER     reduce using rule 39 (if_statement)
    DECIMAL     reduce using rule 39 (if_statement)
    NEG         reduce using rule 39 (if_statement)
    IF          reduce using rule 39 (if_statement)
    FOR         reduce using rule 39 (if_statement)
    READ        reduce using rule 39 (if_statement)
    WRITE       reduce using rule 39 (if_statement)
    WRITELN     reduce using rule 39 (if_statement)
    RETURN      reduce using rule 39 (if_statement)
    ISTYPE      reduce using rule 39 (if_statement)
    ADDSET      reduce using rule 39 (if_statement)
    REMOVE      reduce using rule 39 (if_statement)
    EXISTS      reduce using rule 39 (if_statement)
    FORALL      reduce using rule 39 (if_statement)
    STFUNC      reduce using rule 39 (if_statement)
    PARENL      reduce using rule 39 (if_statement)


State 158

   34 for_body: SEMIC expression_statement • expression

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 176
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 159

   33 for_body: expression_statement expression_statement • expression

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 177
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 160

   31 for_statement: FOR PARENL for_body PARENR •

    STFUNC  reduce using rule 31 (for_statement)


State 161

   47 io_ops: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 178


State 162

   46 io_ops: READ PARENL PARENR SEMIC •

    ID          reduce using rule 46 (io_ops)
    TYPE        reduce using rule 46 (io_ops)
    STRING      reduce using rule 46 (io_ops)
    CHAR        reduce using rule 46 (io_ops)
    EMPTY       reduce using rule 46 (io_ops)
    ERRORTOKEN  reduce using rule 46 (io_ops)
    INTEGER     reduce using rule 46 (io_ops)
    DECIMAL     reduce using rule 46 (io_ops)
    NEG         reduce using rule 46 (io_ops)
    IF          reduce using rule 46 (io_ops)
    FOR         reduce using rule 46 (io_ops)
    READ        reduce using rule 46 (io_ops)
    WRITE       reduce using rule 46 (io_ops)
    WRITELN     reduce using rule 46 (io_ops)
    RETURN      reduce using rule 46 (io_ops)
    ISTYPE      reduce using rule 46 (io_ops)
    ADDSET      reduce using rule 46 (io_ops)
    REMOVE      reduce using rule 46 (io_ops)
    EXISTS      reduce using rule 46 (io_ops)
    FORALL      reduce using rule 46 (io_ops)
    ENDFUNC     reduce using rule 46 (io_ops)
    PARENL      reduce using rule 46 (io_ops)


State 163

   48 io_ops: WRITE PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 179


State 164

   49 io_ops: WRITELN PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 180


State 165

   75 operation: ISTYPE PARENL expression PARENR •

    SEMIC  reduce using rule 75 (operation)


State 166

   69 set_op: ADDSET PARENL set_op PARENR •

    SEMIC  reduce using rule 69 (set_op)


State 167

   70 set_op: REMOVE PARENL set_op PARENR •

    SEMIC  reduce using rule 70 (set_op)


State 168

   71 set_op: EXISTS PARENL set_op PARENR •

    SEMIC  reduce using rule 71 (set_op)


State 169

   32 forall_statement: FORALL PARENL in_set PARENR •

    ID          reduce using rule 32 (forall_statement)
    STRING      reduce using rule 32 (forall_statement)
    CHAR        reduce using rule 32 (forall_statement)
    EMPTY       reduce using rule 32 (forall_statement)
    ERRORTOKEN  reduce using rule 32 (forall_statement)
    INTEGER     reduce using rule 32 (forall_statement)
    DECIMAL     reduce using rule 32 (forall_statement)
    NEG         reduce using rule 32 (forall_statement)
    ISTYPE      reduce using rule 32 (forall_statement)
    ADDSET      reduce using rule 32 (forall_statement)
    REMOVE      reduce using rule 32 (forall_statement)
    EXISTS      reduce using rule 32 (forall_statement)
    STFUNC      reduce using rule 32 (forall_statement)
    PARENL      reduce using rule 32 (forall_statement)


State 170

   28 basic_ops: for_statement STFUNC statement_list ENDFUNC •

    ID          reduce using rule 28 (basic_ops)
    TYPE        reduce using rule 28 (basic_ops)
    STRING      reduce using rule 28 (basic_ops)
    CHAR        reduce using rule 28 (basic_ops)
    EMPTY       reduce using rule 28 (basic_ops)
    ERRORTOKEN  reduce using rule 28 (basic_ops)
    INTEGER     reduce using rule 28 (basic_ops)
    DECIMAL     reduce using rule 28 (basic_ops)
    NEG         reduce using rule 28 (basic_ops)
    IF          reduce using rule 28 (basic_ops)
    FOR         reduce using rule 28 (basic_ops)
    READ        reduce using rule 28 (basic_ops)
    WRITE       reduce using rule 28 (basic_ops)
    WRITELN     reduce using rule 28 (basic_ops)
    RETURN      reduce using rule 28 (basic_ops)
    ISTYPE      reduce using rule 28 (basic_ops)
    ADDSET      reduce using rule 28 (basic_ops)
    REMOVE      reduce using rule 28 (basic_ops)
    EXISTS      reduce using rule 28 (basic_ops)
    FORALL      reduce using rule 28 (basic_ops)
    ENDFUNC     reduce using rule 28 (basic_ops)
    PARENL      reduce using rule 28 (basic_ops)


State 171

   30 basic_ops: forall_statement STFUNC statement_list ENDFUNC •

    ID          reduce using rule 30 (basic_ops)
    TYPE        reduce using rule 30 (basic_ops)
    STRING      reduce using rule 30 (basic_ops)
    CHAR        reduce using rule 30 (basic_ops)
    EMPTY       reduce using rule 30 (basic_ops)
    ERRORTOKEN  reduce using rule 30 (basic_ops)
    INTEGER     reduce using rule 30 (basic_ops)
    DECIMAL     reduce using rule 30 (basic_ops)
    NEG         reduce using rule 30 (basic_ops)
    IF          reduce using rule 30 (basic_ops)
    FOR         reduce using rule 30 (basic_ops)
    READ        reduce using rule 30 (basic_ops)
    WRITE       reduce using rule 30 (basic_ops)
    WRITELN     reduce using rule 30 (basic_ops)
    RETURN      reduce using rule 30 (basic_ops)
    ISTYPE      reduce using rule 30 (basic_ops)
    ADDSET      reduce using rule 30 (basic_ops)
    REMOVE      reduce using rule 30 (basic_ops)
    EXISTS      reduce using rule 30 (basic_ops)
    FORALL      reduce using rule 30 (basic_ops)
    ENDFUNC     reduce using rule 30 (basic_ops)
    PARENL      reduce using rule 30 (basic_ops)


State 172

   37 if_ops: if_statement STFUNC statement_list ENDFUNC •
   38       | if_statement STFUNC statement_list ENDFUNC • else_statement

    ELSE  shift, and go to state 139

    ID          reduce using rule 37 (if_ops)
    TYPE        reduce using rule 37 (if_ops)
    STRING      reduce using rule 37 (if_ops)
    CHAR        reduce using rule 37 (if_ops)
    EMPTY       reduce using rule 37 (if_ops)
    ERRORTOKEN  reduce using rule 37 (if_ops)
    INTEGER     reduce using rule 37 (if_ops)
    DECIMAL     reduce using rule 37 (if_ops)
    NEG         reduce using rule 37 (if_ops)
    IF          reduce using rule 37 (if_ops)
    FOR         reduce using rule 37 (if_ops)
    READ        reduce using rule 37 (if_ops)
    WRITE       reduce using rule 37 (if_ops)
    WRITELN     reduce using rule 37 (if_ops)
    RETURN      reduce using rule 37 (if_ops)
    ISTYPE      reduce using rule 37 (if_ops)
    ADDSET      reduce using rule 37 (if_ops)
    REMOVE      reduce using rule 37 (if_ops)
    EXISTS      reduce using rule 37 (if_ops)
    FORALL      reduce using rule 37 (if_ops)
    ENDFUNC     reduce using rule 37 (if_ops)
    PARENL      reduce using rule 37 (if_ops)

    else_statement  go to state 181


State 173

   41 else_statement: ELSE $@5 • statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    PARENL      shift, and go to state 55

    statement             go to state 182
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 174

   43 else_statement: ELSE $@6 • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 183


State 175

   88 args_list: args_list COMMA term •

    COMMA   reduce using rule 88 (args_list)
    PARENR  reduce using rule 88 (args_list)


State 176

   34 for_body: SEMIC expression_statement expression •

    PARENR  reduce using rule 34 (for_body)


State 177

   33 for_body: expression_statement expression_statement expression •

    PARENR  reduce using rule 33 (for_body)


State 178

   47 io_ops: READ PARENL ID PARENR SEMIC •

    ID          reduce using rule 47 (io_ops)
    TYPE        reduce using rule 47 (io_ops)
    STRING      reduce using rule 47 (io_ops)
    CHAR        reduce using rule 47 (io_ops)
    EMPTY       reduce using rule 47 (io_ops)
    ERRORTOKEN  reduce using rule 47 (io_ops)
    INTEGER     reduce using rule 47 (io_ops)
    DECIMAL     reduce using rule 47 (io_ops)
    NEG         reduce using rule 47 (io_ops)
    IF          reduce using rule 47 (io_ops)
    FOR         reduce using rule 47 (io_ops)
    READ        reduce using rule 47 (io_ops)
    WRITE       reduce using rule 47 (io_ops)
    WRITELN     reduce using rule 47 (io_ops)
    RETURN      reduce using rule 47 (io_ops)
    ISTYPE      reduce using rule 47 (io_ops)
    ADDSET      reduce using rule 47 (io_ops)
    REMOVE      reduce using rule 47 (io_ops)
    EXISTS      reduce using rule 47 (io_ops)
    FORALL      reduce using rule 47 (io_ops)
    ENDFUNC     reduce using rule 47 (io_ops)
    PARENL      reduce using rule 47 (io_ops)


State 179

   48 io_ops: WRITE PARENL expression PARENR SEMIC •

    ID          reduce using rule 48 (io_ops)
    TYPE        reduce using rule 48 (io_ops)
    STRING      reduce using rule 48 (io_ops)
    CHAR        reduce using rule 48 (io_ops)
    EMPTY       reduce using rule 48 (io_ops)
    ERRORTOKEN  reduce using rule 48 (io_ops)
    INTEGER     reduce using rule 48 (io_ops)
    DECIMAL     reduce using rule 48 (io_ops)
    NEG         reduce using rule 48 (io_ops)
    IF          reduce using rule 48 (io_ops)
    FOR         reduce using rule 48 (io_ops)
    READ        reduce using rule 48 (io_ops)
    WRITE       reduce using rule 48 (io_ops)
    WRITELN     reduce using rule 48 (io_ops)
    RETURN      reduce using rule 48 (io_ops)
    ISTYPE      reduce using rule 48 (io_ops)
    ADDSET      reduce using rule 48 (io_ops)
    REMOVE      reduce using rule 48 (io_ops)
    EXISTS      reduce using rule 48 (io_ops)
    FORALL      reduce using rule 48 (io_ops)
    ENDFUNC     reduce using rule 48 (io_ops)
    PARENL      reduce using rule 48 (io_ops)


State 180

   49 io_ops: WRITELN PARENL expression PARENR SEMIC •

    ID          reduce using rule 49 (io_ops)
    TYPE        reduce using rule 49 (io_ops)
    STRING      reduce using rule 49 (io_ops)
    CHAR        reduce using rule 49 (io_ops)
    EMPTY       reduce using rule 49 (io_ops)
    ERRORTOKEN  reduce using rule 49 (io_ops)
    INTEGER     reduce using rule 49 (io_ops)
    DECIMAL     reduce using rule 49 (io_ops)
    NEG         reduce using rule 49 (io_ops)
    IF          reduce using rule 49 (io_ops)
    FOR         reduce using rule 49 (io_ops)
    READ        reduce using rule 49 (io_ops)
    WRITE       reduce using rule 49 (io_ops)
    WRITELN     reduce using rule 49 (io_ops)
    RETURN      reduce using rule 49 (io_ops)
    ISTYPE      reduce using rule 49 (io_ops)
    ADDSET      reduce using rule 49 (io_ops)
    REMOVE      reduce using rule 49 (io_ops)
    EXISTS      reduce using rule 49 (io_ops)
    FORALL      reduce using rule 49 (io_ops)
    ENDFUNC     reduce using rule 49 (io_ops)
    PARENL      reduce using rule 49 (io_ops)


State 181

   38 if_ops: if_statement STFUNC statement_list ENDFUNC else_statement •

    ID          reduce using rule 38 (if_ops)
    TYPE        reduce using rule 38 (if_ops)
    STRING      reduce using rule 38 (if_ops)
    CHAR        reduce using rule 38 (if_ops)
    EMPTY       reduce using rule 38 (if_ops)
    ERRORTOKEN  reduce using rule 38 (if_ops)
    INTEGER     reduce using rule 38 (if_ops)
    DECIMAL     reduce using rule 38 (if_ops)
    NEG         reduce using rule 38 (if_ops)
    IF          reduce using rule 38 (if_ops)
    FOR         reduce using rule 38 (if_ops)
    READ        reduce using rule 38 (if_ops)
    WRITE       reduce using rule 38 (if_ops)
    WRITELN     reduce using rule 38 (if_ops)
    RETURN      reduce using rule 38 (if_ops)
    ISTYPE      reduce using rule 38 (if_ops)
    ADDSET      reduce using rule 38 (if_ops)
    REMOVE      reduce using rule 38 (if_ops)
    EXISTS      reduce using rule 38 (if_ops)
    FORALL      reduce using rule 38 (if_ops)
    ENDFUNC     reduce using rule 38 (if_ops)
    PARENL      reduce using rule 38 (if_ops)


State 182

   41 else_statement: ELSE $@5 statement •

    ID          reduce using rule 41 (else_statement)
    TYPE        reduce using rule 41 (else_statement)
    STRING      reduce using rule 41 (else_statement)
    CHAR        reduce using rule 41 (else_statement)
    EMPTY       reduce using rule 41 (else_statement)
    ERRORTOKEN  reduce using rule 41 (else_statement)
    INTEGER     reduce using rule 41 (else_statement)
    DECIMAL     reduce using rule 41 (else_statement)
    NEG         reduce using rule 41 (else_statement)
    IF          reduce using rule 41 (else_statement)
    FOR         reduce using rule 41 (else_statement)
    READ        reduce using rule 41 (else_statement)
    WRITE       reduce using rule 41 (else_statement)
    WRITELN     reduce using rule 41 (else_statement)
    RETURN      reduce using rule 41 (else_statement)
    ISTYPE      reduce using rule 41 (else_statement)
    ADDSET      reduce using rule 41 (else_statement)
    REMOVE      reduce using rule 41 (else_statement)
    EXISTS      reduce using rule 41 (else_statement)
    FORALL      reduce using rule 41 (else_statement)
    ENDFUNC     reduce using rule 41 (else_statement)
    PARENL      reduce using rule 41 (else_statement)


State 183

   43 else_statement: ELSE $@6 STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 184


State 184

   18 statement_list: statement_list • statement
   43 else_statement: ELSE $@6 STFUNC statement_list • ENDFUNC

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 185
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 185

   43 else_statement: ELSE $@6 STFUNC statement_list ENDFUNC •

    ID          reduce using rule 43 (else_statement)
    TYPE        reduce using rule 43 (else_statement)
    STRING      reduce using rule 43 (else_statement)
    CHAR        reduce using rule 43 (else_statement)
    EMPTY       reduce using rule 43 (else_statement)
    ERRORTOKEN  reduce using rule 43 (else_statement)
    INTEGER     reduce using rule 43 (else_statement)
    DECIMAL     reduce using rule 43 (else_statement)
    NEG         reduce using rule 43 (else_statement)
    IF          reduce using rule 43 (else_statement)
    FOR         reduce using rule 43 (else_statement)
    READ        reduce using rule 43 (else_statement)
    WRITE       reduce using rule 43 (else_statement)
    WRITELN     reduce using rule 43 (else_statement)
    RETURN      reduce using rule 43 (else_statement)
    ISTYPE      reduce using rule 43 (else_statement)
    ADDSET      reduce using rule 43 (else_statement)
    REMOVE      reduce using rule 43 (else_statement)
    EXISTS      reduce using rule 43 (else_statement)
    FORALL      reduce using rule 43 (else_statement)
    ENDFUNC     reduce using rule 43 (else_statement)
    PARENL      reduce using rule 43 (else_statement)


State 186

   55 math_term: ID •
   85 func_call: ID • PARENL args_list PARENR
   91 assign_value: ID • ASSIGN expression

    ASSIGN  shift, and go to state 255
    PARENL  shift, and go to state 256

    ADD        reduce using rule 55 (math_term)
    SUB        reduce using rule 55 (math_term)
    MULT       reduce using rule 55 (math_term)
    DIV        reduce using rule 55 (math_term)
    OR         reduce using rule 55 (math_term)
    AND        reduce using rule 55 (math_term)
    SMALLER    reduce using rule 55 (math_term)
    GREATER    reduce using rule 55 (math_term)
    SMALLEQ    reduce using rule 55 (math_term)
    GREATEQ    reduce using rule 55 (math_term)
    EQUALS     reduce using rule 55 (math_term)
    DIFFERENT  reduce using rule 55 (math_term)
    IN         reduce using rule 55 (math_term)
    PARENR     reduce using rule 55 (math_term)


State 187

   60 str_term: STRING •

    OR         reduce using rule 60 (str_term)
    AND        reduce using rule 60 (str_term)
    SMALLER    reduce using rule 60 (str_term)
    GREATER    reduce using rule 60 (str_term)
    SMALLEQ    reduce using rule 60 (str_term)
    GREATEQ    reduce using rule 60 (str_term)
    EQUALS     reduce using rule 60 (str_term)
    DIFFERENT  reduce using rule 60 (str_term)
    IN         reduce using rule 60 (str_term)
    PARENR     reduce using rule 60 (str_term)


State 188

   59 str_term: CHAR •

    OR         reduce using rule 59 (str_term)
    AND        reduce using rule 59 (str_term)
    SMALLER    reduce using rule 59 (str_term)
    GREATER    reduce using rule 59 (str_term)
    SMALLEQ    reduce using rule 59 (str_term)
    GREATEQ    reduce using rule 59 (str_term)
    EQUALS     reduce using rule 59 (str_term)
    DIFFERENT  reduce using rule 59 (str_term)
    IN         reduce using rule 59 (str_term)
    PARENR     reduce using rule 59 (str_term)


State 189

   61 str_term: EMPTY •

    OR         reduce using rule 61 (str_term)
    AND        reduce using rule 61 (str_term)
    SMALLER    reduce using rule 61 (str_term)
    GREATER    reduce using rule 61 (str_term)
    SMALLEQ    reduce using rule 61 (str_term)
    GREATEQ    reduce using rule 61 (str_term)
    EQUALS     reduce using rule 61 (str_term)
    DIFFERENT  reduce using rule 61 (str_term)
    IN         reduce using rule 61 (str_term)
    PARENR     reduce using rule 61 (str_term)


State 190

   62 str_term: ERRORTOKEN •

    OR         reduce using rule 62 (str_term)
    AND        reduce using rule 62 (str_term)
    SMALLER    reduce using rule 62 (str_term)
    GREATER    reduce using rule 62 (str_term)
    SMALLEQ    reduce using rule 62 (str_term)
    GREATEQ    reduce using rule 62 (str_term)
    EQUALS     reduce using rule 62 (str_term)
    DIFFERENT  reduce using rule 62 (str_term)
    IN         reduce using rule 62 (str_term)
    PARENR     reduce using rule 62 (str_term)


State 191

   56 math_term: INTEGER •

    ADD        reduce using rule 56 (math_term)
    SUB        reduce using rule 56 (math_term)
    MULT       reduce using rule 56 (math_term)
    DIV        reduce using rule 56 (math_term)
    OR         reduce using rule 56 (math_term)
    AND        reduce using rule 56 (math_term)
    SMALLER    reduce using rule 56 (math_term)
    GREATER    reduce using rule 56 (math_term)
    SMALLEQ    reduce using rule 56 (math_term)
    GREATEQ    reduce using rule 56 (math_term)
    EQUALS     reduce using rule 56 (math_term)
    DIFFERENT  reduce using rule 56 (math_term)
    IN         reduce using rule 56 (math_term)
    PARENR     reduce using rule 56 (math_term)


State 192

   57 math_term: DECIMAL •

    ADD        reduce using rule 57 (math_term)
    SUB        reduce using rule 57 (math_term)
    MULT       reduce using rule 57 (math_term)
    DIV        reduce using rule 57 (math_term)
    OR         reduce using rule 57 (math_term)
    AND        reduce using rule 57 (math_term)
    SMALLER    reduce using rule 57 (math_term)
    GREATER    reduce using rule 57 (math_term)
    SMALLEQ    reduce using rule 57 (math_term)
    GREATEQ    reduce using rule 57 (math_term)
    EQUALS     reduce using rule 57 (math_term)
    DIFFERENT  reduce using rule 57 (math_term)
    IN         reduce using rule 57 (math_term)
    PARENR     reduce using rule 57 (math_term)


State 193

   84 operation: NEG • expression

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 257
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 194

   75 operation: ISTYPE • PARENL expression PARENR

    PARENL  shift, and go to state 258


State 195

   69 set_op: ADDSET • PARENL set_op PARENR

    PARENL  shift, and go to state 259


State 196

   70 set_op: REMOVE • PARENL set_op PARENR

    PARENL  shift, and go to state 260


State 197

   71 set_op: EXISTS • PARENL set_op PARENR

    PARENL  shift, and go to state 261


State 198

   58 math_term: PARENL • expression PARENR

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 262
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 199

   76 operation: term • SMALLER expression
   77          | term • GREATER expression
   78          | term • SMALLEQ expression
   79          | term • GREATEQ expression
   80          | term • EQUALS expression
   81          | term • DIFFERENT expression
   82          | term • OR expression
   83          | term • AND expression
   87 in_set: term • IN expression

    OR         shift, and go to state 263
    AND        shift, and go to state 264
    SMALLER    shift, and go to state 265
    GREATER    shift, and go to state 266
    SMALLEQ    shift, and go to state 267
    GREATEQ    shift, and go to state 268
    EQUALS     shift, and go to state 269
    DIFFERENT  shift, and go to state 270
    IN         shift, and go to state 254


State 200

   53 term: math_term •
   68 math_op_muldiv: math_term •

    ADD        reduce using rule 68 (math_op_muldiv)
    SUB        reduce using rule 68 (math_op_muldiv)
    MULT       reduce using rule 68 (math_op_muldiv)
    DIV        reduce using rule 68 (math_op_muldiv)
    OR         reduce using rule 53 (term)
    AND        reduce using rule 53 (term)
    SMALLER    reduce using rule 53 (term)
    GREATER    reduce using rule 53 (term)
    SMALLEQ    reduce using rule 53 (term)
    GREATEQ    reduce using rule 53 (term)
    EQUALS     reduce using rule 53 (term)
    DIFFERENT  reduce using rule 53 (term)
    IN         reduce using rule 53 (term)
    PARENR     reduce using rule 68 (math_op_muldiv)


State 201

   54 term: str_term •
   86 func_call: str_term •

    OR         reduce using rule 54 (term)
    AND        reduce using rule 54 (term)
    SMALLER    reduce using rule 54 (term)
    GREATER    reduce using rule 54 (term)
    SMALLEQ    reduce using rule 54 (term)
    GREATEQ    reduce using rule 54 (term)
    EQUALS     reduce using rule 54 (term)
    DIFFERENT  reduce using rule 54 (term)
    IN         reduce using rule 54 (term)
    PARENR     reduce using rule 86 (func_call)


State 202

   63 math_op: math_op • ADD math_op_muldiv
   64        | math_op • SUB math_op_muldiv
   73 operation: math_op •

    ADD  shift, and go to state 271
    SUB  shift, and go to state 272

    PARENR  reduce using rule 73 (operation)


State 203

   65 math_op: math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 273
    DIV   shift, and go to state 274

    ADD     reduce using rule 65 (math_op)
    SUB     reduce using rule 65 (math_op)
    PARENR  reduce using rule 65 (math_op)


State 204

   50 expression: set_op •

    PARENR  reduce using rule 50 (expression)


State 205

   72 set_op: operation •

    PARENR  reduce using rule 72 (set_op)


State 206

   51 expression: func_call •

    PARENR  reduce using rule 51 (expression)


State 207

   74 operation: in_set •

    PARENR  reduce using rule 74 (operation)


State 208

   52 expression: assign_value •

    PARENR  reduce using rule 52 (expression)


State 209

   60 str_term: STRING •

    OR         reduce using rule 60 (str_term)
    AND        reduce using rule 60 (str_term)
    SMALLER    reduce using rule 60 (str_term)
    GREATER    reduce using rule 60 (str_term)
    SMALLEQ    reduce using rule 60 (str_term)
    GREATEQ    reduce using rule 60 (str_term)
    EQUALS     reduce using rule 60 (str_term)
    DIFFERENT  reduce using rule 60 (str_term)
    IN         reduce using rule 60 (str_term)


State 210

   59 str_term: CHAR •

    OR         reduce using rule 59 (str_term)
    AND        reduce using rule 59 (str_term)
    SMALLER    reduce using rule 59 (str_term)
    GREATER    reduce using rule 59 (str_term)
    SMALLEQ    reduce using rule 59 (str_term)
    GREATEQ    reduce using rule 59 (str_term)
    EQUALS     reduce using rule 59 (str_term)
    DIFFERENT  reduce using rule 59 (str_term)
    IN         reduce using rule 59 (str_term)


State 211

   61 str_term: EMPTY •

    OR         reduce using rule 61 (str_term)
    AND        reduce using rule 61 (str_term)
    SMALLER    reduce using rule 61 (str_term)
    GREATER    reduce using rule 61 (str_term)
    SMALLEQ    reduce using rule 61 (str_term)
    GREATEQ    reduce using rule 61 (str_term)
    EQUALS     reduce using rule 61 (str_term)
    DIFFERENT  reduce using rule 61 (str_term)
    IN         reduce using rule 61 (str_term)


State 212

   62 str_term: ERRORTOKEN •

    OR         reduce using rule 62 (str_term)
    AND        reduce using rule 62 (str_term)
    SMALLER    reduce using rule 62 (str_term)
    GREATER    reduce using rule 62 (str_term)
    SMALLEQ    reduce using rule 62 (str_term)
    GREATEQ    reduce using rule 62 (str_term)
    EQUALS     reduce using rule 62 (str_term)
    DIFFERENT  reduce using rule 62 (str_term)
    IN         reduce using rule 62 (str_term)


State 213

   45 var_dec: TYPE • ID SEMIC

    ID  shift, and go to state 275


State 214

   46 io_ops: READ • PARENL PARENR SEMIC
   47       | READ • PARENL ID PARENR SEMIC

    PARENL  shift, and go to state 276


State 215

   48 io_ops: WRITE • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 277


State 216

   49 io_ops: WRITELN • PARENL expression PARENR SEMIC

    PARENL  shift, and go to state 278


State 217

   44 ret_st: RETURN • expression SEMIC

    ID          shift, and go to state 34
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    PARENL      shift, and go to state 55

    expression      go to state 279
    term            go to state 67
    math_term       go to state 68
    str_term        go to state 69
    math_op         go to state 70
    math_op_muldiv  go to state 71
    set_op          go to state 72
    operation       go to state 73
    func_call       go to state 74
    in_set          go to state 75
    assign_value    go to state 76


State 218

   21 statement: expression_statement •

    ID          reduce using rule 21 (statement)
    TYPE        reduce using rule 21 (statement)
    STRING      reduce using rule 21 (statement)
    CHAR        reduce using rule 21 (statement)
    EMPTY       reduce using rule 21 (statement)
    ERRORTOKEN  reduce using rule 21 (statement)
    INTEGER     reduce using rule 21 (statement)
    DECIMAL     reduce using rule 21 (statement)
    NEG         reduce using rule 21 (statement)
    IF          reduce using rule 21 (statement)
    ELSE        reduce using rule 21 (statement)
    FOR         reduce using rule 21 (statement)
    READ        reduce using rule 21 (statement)
    WRITE       reduce using rule 21 (statement)
    WRITELN     reduce using rule 21 (statement)
    RETURN      reduce using rule 21 (statement)
    ISTYPE      reduce using rule 21 (statement)
    ADDSET      reduce using rule 21 (statement)
    REMOVE      reduce using rule 21 (statement)
    EXISTS      reduce using rule 21 (statement)
    FORALL      reduce using rule 21 (statement)
    ENDFUNC     reduce using rule 21 (statement)
    PARENL      reduce using rule 21 (statement)


State 219

   25 statement: basic_ops •

    ID          reduce using rule 25 (statement)
    TYPE        reduce using rule 25 (statement)
    STRING      reduce using rule 25 (statement)
    CHAR        reduce using rule 25 (statement)
    EMPTY       reduce using rule 25 (statement)
    ERRORTOKEN  reduce using rule 25 (statement)
    INTEGER     reduce using rule 25 (statement)
    DECIMAL     reduce using rule 25 (statement)
    NEG         reduce using rule 25 (statement)
    IF          reduce using rule 25 (statement)
    ELSE        reduce using rule 25 (statement)
    FOR         reduce using rule 25 (statement)
    READ        reduce using rule 25 (statement)
    WRITE       reduce using rule 25 (statement)
    WRITELN     reduce using rule 25 (statement)
    RETURN      reduce using rule 25 (statement)
    ISTYPE      reduce using rule 25 (statement)
    ADDSET      reduce using rule 25 (statement)
    REMOVE      reduce using rule 25 (statement)
    EXISTS      reduce using rule 25 (statement)
    FORALL      reduce using rule 25 (statement)
    ENDFUNC     reduce using rule 25 (statement)
    PARENL      reduce using rule 25 (statement)


State 220

   28 basic_ops: for_statement • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 280


State 221

   29 basic_ops: forall_statement • set_op SEMIC
   30          | forall_statement • STFUNC statement_list ENDFUNC

    ID          shift, and go to state 95
    STRING      shift, and go to state 209
    CHAR        shift, and go to state 210
    EMPTY       shift, and go to state 211
    ERRORTOKEN  shift, and go to state 212
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    STFUNC      shift, and go to state 281
    PARENL      shift, and go to state 55

    term            go to state 67
    math_term       go to state 68
    str_term        go to state 97
    math_op         go to state 70
    math_op_muldiv  go to state 71
    set_op          go to state 282
    operation       go to state 73
    in_set          go to state 75


State 222

   27 basic_ops: if_ops •

    ID          reduce using rule 27 (basic_ops)
    TYPE        reduce using rule 27 (basic_ops)
    STRING      reduce using rule 27 (basic_ops)
    CHAR        reduce using rule 27 (basic_ops)
    EMPTY       reduce using rule 27 (basic_ops)
    ERRORTOKEN  reduce using rule 27 (basic_ops)
    INTEGER     reduce using rule 27 (basic_ops)
    DECIMAL     reduce using rule 27 (basic_ops)
    NEG         reduce using rule 27 (basic_ops)
    IF          reduce using rule 27 (basic_ops)
    ELSE        reduce using rule 27 (basic_ops)
    FOR         reduce using rule 27 (basic_ops)
    READ        reduce using rule 27 (basic_ops)
    WRITE       reduce using rule 27 (basic_ops)
    WRITELN     reduce using rule 27 (basic_ops)
    RETURN      reduce using rule 27 (basic_ops)
    ISTYPE      reduce using rule 27 (basic_ops)
    ADDSET      reduce using rule 27 (basic_ops)
    REMOVE      reduce using rule 27 (basic_ops)
    EXISTS      reduce using rule 27 (basic_ops)
    FORALL      reduce using rule 27 (basic_ops)
    ENDFUNC     reduce using rule 27 (basic_ops)
    PARENL      reduce using rule 27 (basic_ops)


State 223

   35 if_ops: if_statement • statement
   36       | if_statement • statement else_statement
   37       | if_statement • STFUNC statement_list ENDFUNC
   38       | if_statement • STFUNC statement_list ENDFUNC else_statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 213
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 214
    WRITE       shift, and go to state 215
    WRITELN     shift, and go to state 216
    RETURN      shift, and go to state 217
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    STFUNC      shift, and go to state 283
    PARENL      shift, and go to state 55

    statement             go to state 284
    expression_statement  go to state 218
    basic_ops             go to state 219
    for_statement         go to state 220
    forall_statement      go to state 221
    if_ops                go to state 222
    if_statement          go to state 223
    ret_st                go to state 224
    var_dec               go to state 225
    io_ops                go to state 226
    expression            go to state 227
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 224

   22 statement: ret_st •

    ID          reduce using rule 22 (statement)
    TYPE        reduce using rule 22 (statement)
    STRING      reduce using rule 22 (statement)
    CHAR        reduce using rule 22 (statement)
    EMPTY       reduce using rule 22 (statement)
    ERRORTOKEN  reduce using rule 22 (statement)
    INTEGER     reduce using rule 22 (statement)
    DECIMAL     reduce using rule 22 (statement)
    NEG         reduce using rule 22 (statement)
    IF          reduce using rule 22 (statement)
    ELSE        reduce using rule 22 (statement)
    FOR         reduce using rule 22 (statement)
    READ        reduce using rule 22 (statement)
    WRITE       reduce using rule 22 (statement)
    WRITELN     reduce using rule 22 (statement)
    RETURN      reduce using rule 22 (statement)
    ISTYPE      reduce using rule 22 (statement)
    ADDSET      reduce using rule 22 (statement)
    REMOVE      reduce using rule 22 (statement)
    EXISTS      reduce using rule 22 (statement)
    FORALL      reduce using rule 22 (statement)
    ENDFUNC     reduce using rule 22 (statement)
    PARENL      reduce using rule 22 (statement)


State 225

   23 statement: var_dec •

    ID          reduce using rule 23 (statement)
    TYPE        reduce using rule 23 (statement)
    STRING      reduce using rule 23 (statement)
    CHAR        reduce using rule 23 (statement)
    EMPTY       reduce using rule 23 (statement)
    ERRORTOKEN  reduce using rule 23 (statement)
    INTEGER     reduce using rule 23 (statement)
    DECIMAL     reduce using rule 23 (statement)
    NEG         reduce using rule 23 (statement)
    IF          reduce using rule 23 (statement)
    ELSE        reduce using rule 23 (statement)
    FOR         reduce using rule 23 (statement)
    READ        reduce using rule 23 (statement)
    WRITE       reduce using rule 23 (statement)
    WRITELN     reduce using rule 23 (statement)
    RETURN      reduce using rule 23 (statement)
    ISTYPE      reduce using rule 23 (statement)
    ADDSET      reduce using rule 23 (statement)
    REMOVE      reduce using rule 23 (statement)
    EXISTS      reduce using rule 23 (statement)
    FORALL      reduce using rule 23 (statement)
    ENDFUNC     reduce using rule 23 (statement)
    PARENL      reduce using rule 23 (statement)


State 226

   24 statement: io_ops •

    ID          reduce using rule 24 (statement)
    TYPE        reduce using rule 24 (statement)
    STRING      reduce using rule 24 (statement)
    CHAR        reduce using rule 24 (statement)
    EMPTY       reduce using rule 24 (statement)
    ERRORTOKEN  reduce using rule 24 (statement)
    INTEGER     reduce using rule 24 (statement)
    DECIMAL     reduce using rule 24 (statement)
    NEG         reduce using rule 24 (statement)
    IF          reduce using rule 24 (statement)
    ELSE        reduce using rule 24 (statement)
    FOR         reduce using rule 24 (statement)
    READ        reduce using rule 24 (statement)
    WRITE       reduce using rule 24 (statement)
    WRITELN     reduce using rule 24 (statement)
    RETURN      reduce using rule 24 (statement)
    ISTYPE      reduce using rule 24 (statement)
    ADDSET      reduce using rule 24 (statement)
    REMOVE      reduce using rule 24 (statement)
    EXISTS      reduce using rule 24 (statement)
    FORALL      reduce using rule 24 (statement)
    ENDFUNC     reduce using rule 24 (statement)
    PARENL      reduce using rule 24 (statement)


State 227

   26 expression_statement: expression • SEMIC

    SEMIC  shift, and go to state 285


State 228

   55 math_term: ID •

    COMMA   reduce using rule 55 (math_term)
    PARENR  reduce using rule 55 (math_term)


State 229

   60 str_term: STRING •

    COMMA   reduce using rule 60 (str_term)
    PARENR  reduce using rule 60 (str_term)


State 230

   59 str_term: CHAR •

    COMMA   reduce using rule 59 (str_term)
    PARENR  reduce using rule 59 (str_term)


State 231

   61 str_term: EMPTY •

    COMMA   reduce using rule 61 (str_term)
    PARENR  reduce using rule 61 (str_term)


State 232

   62 str_term: ERRORTOKEN •

    COMMA   reduce using rule 62 (str_term)
    PARENR  reduce using rule 62 (str_term)


State 233

   56 math_term: INTEGER •

    COMMA   reduce using rule 56 (math_term)
    PARENR  reduce using rule 56 (math_term)


State 234

   57 math_term: DECIMAL •

    COMMA   reduce using rule 57 (math_term)
    PARENR  reduce using rule 57 (math_term)


State 235

   58 math_term: PARENL • expression PARENR

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 286
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 236

   54 term: str_term •

    COMMA   reduce using rule 54 (term)
    PARENR  reduce using rule 54 (term)


State 237

   45 var_dec: TYPE ID SEMIC •

    ID          reduce using rule 45 (var_dec)
    TYPE        reduce using rule 45 (var_dec)
    STRING      reduce using rule 45 (var_dec)
    CHAR        reduce using rule 45 (var_dec)
    EMPTY       reduce using rule 45 (var_dec)
    ERRORTOKEN  reduce using rule 45 (var_dec)
    INTEGER     reduce using rule 45 (var_dec)
    DECIMAL     reduce using rule 45 (var_dec)
    NEG         reduce using rule 45 (var_dec)
    IF          reduce using rule 45 (var_dec)
    FOR         reduce using rule 45 (var_dec)
    READ        reduce using rule 45 (var_dec)
    WRITE       reduce using rule 45 (var_dec)
    WRITELN     reduce using rule 45 (var_dec)
    RETURN      reduce using rule 45 (var_dec)
    ISTYPE      reduce using rule 45 (var_dec)
    ADDSET      reduce using rule 45 (var_dec)
    REMOVE      reduce using rule 45 (var_dec)
    EXISTS      reduce using rule 45 (var_dec)
    FORALL      reduce using rule 45 (var_dec)
    ENDFUNC     reduce using rule 45 (var_dec)
    PARENL      reduce using rule 45 (var_dec)


State 238

   55 math_term: ID •

    ADD        reduce using rule 55 (math_term)
    SUB        reduce using rule 55 (math_term)
    MULT       reduce using rule 55 (math_term)
    DIV        reduce using rule 55 (math_term)
    OR         reduce using rule 55 (math_term)
    AND        reduce using rule 55 (math_term)
    SMALLER    reduce using rule 55 (math_term)
    GREATER    reduce using rule 55 (math_term)
    SMALLEQ    reduce using rule 55 (math_term)
    GREATEQ    reduce using rule 55 (math_term)
    EQUALS     reduce using rule 55 (math_term)
    DIFFERENT  reduce using rule 55 (math_term)
    IN         reduce using rule 55 (math_term)
    PARENR     reduce using rule 55 (math_term)


State 239

   26 expression_statement: expression • SEMIC

    SEMIC  shift, and go to state 287


State 240

   55 math_term: ID •

    IN  reduce using rule 55 (math_term)


State 241

   60 str_term: STRING •

    IN  reduce using rule 60 (str_term)


State 242

   59 str_term: CHAR •

    IN  reduce using rule 59 (str_term)


State 243

   61 str_term: EMPTY •

    IN  reduce using rule 61 (str_term)


State 244

   62 str_term: ERRORTOKEN •

    IN  reduce using rule 62 (str_term)


State 245

   56 math_term: INTEGER •

    IN  reduce using rule 56 (math_term)


State 246

   57 math_term: DECIMAL •

    IN  reduce using rule 57 (math_term)


State 247

   58 math_term: PARENL • expression PARENR

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 288
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 248

   53 term: math_term •

    IN  reduce using rule 53 (term)


State 249

   54 term: str_term •

    IN  reduce using rule 54 (term)


State 250

   55 math_term: ID •

    ADD    reduce using rule 55 (math_term)
    SUB    reduce using rule 55 (math_term)
    MULT   reduce using rule 55 (math_term)
    DIV    reduce using rule 55 (math_term)
    SEMIC  reduce using rule 55 (math_term)


State 251

   56 math_term: INTEGER •

    ADD    reduce using rule 56 (math_term)
    SUB    reduce using rule 56 (math_term)
    MULT   reduce using rule 56 (math_term)
    DIV    reduce using rule 56 (math_term)
    SEMIC  reduce using rule 56 (math_term)


State 252

   57 math_term: DECIMAL •

    ADD    reduce using rule 57 (math_term)
    SUB    reduce using rule 57 (math_term)
    MULT   reduce using rule 57 (math_term)
    DIV    reduce using rule 57 (math_term)
    SEMIC  reduce using rule 57 (math_term)


State 253

   58 math_term: PARENL • expression PARENR

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 289
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 254

   87 in_set: term IN • expression

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 290
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 255

   91 assign_value: ID ASSIGN • expression

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 291
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 256

   85 func_call: ID PARENL • args_list PARENR

    ID          shift, and go to state 228
    STRING      shift, and go to state 229
    CHAR        shift, and go to state 230
    EMPTY       shift, and go to state 231
    ERRORTOKEN  shift, and go to state 232
    INTEGER     shift, and go to state 233
    DECIMAL     shift, and go to state 234
    PARENL      shift, and go to state 235

    COMMA   reduce using rule 90 (args_list)
    PARENR  reduce using rule 90 (args_list)

    term       go to state 116
    math_term  go to state 117
    str_term   go to state 236
    args_list  go to state 292


State 257

   84 operation: NEG expression •

    PARENR  reduce using rule 84 (operation)


State 258

   75 operation: ISTYPE PARENL • expression PARENR

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 293
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 259

   69 set_op: ADDSET PARENL • set_op PARENR

    ID          shift, and go to state 238
    STRING      shift, and go to state 209
    CHAR        shift, and go to state 210
    EMPTY       shift, and go to state 211
    ERRORTOKEN  shift, and go to state 212
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    term            go to state 199
    math_term       go to state 200
    str_term        go to state 97
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 294
    operation       go to state 205
    in_set          go to state 207


State 260

   70 set_op: REMOVE PARENL • set_op PARENR

    ID          shift, and go to state 238
    STRING      shift, and go to state 209
    CHAR        shift, and go to state 210
    EMPTY       shift, and go to state 211
    ERRORTOKEN  shift, and go to state 212
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    term            go to state 199
    math_term       go to state 200
    str_term        go to state 97
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 295
    operation       go to state 205
    in_set          go to state 207


State 261

   71 set_op: EXISTS PARENL • set_op PARENR

    ID          shift, and go to state 238
    STRING      shift, and go to state 209
    CHAR        shift, and go to state 210
    EMPTY       shift, and go to state 211
    ERRORTOKEN  shift, and go to state 212
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    term            go to state 199
    math_term       go to state 200
    str_term        go to state 97
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 296
    operation       go to state 205
    in_set          go to state 207


State 262

   58 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 297


State 263

   82 operation: term OR • expression

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 298
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 264

   83 operation: term AND • expression

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 299
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 265

   76 operation: term SMALLER • expression

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 300
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 266

   77 operation: term GREATER • expression

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 301
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 267

   78 operation: term SMALLEQ • expression

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 302
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 268

   79 operation: term GREATEQ • expression

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 303
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 269

   80 operation: term EQUALS • expression

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 304
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 270

   81 operation: term DIFFERENT • expression

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 305
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 271

   63 math_op: math_op ADD • math_op_muldiv

    ID       shift, and go to state 306
    INTEGER  shift, and go to state 307
    DECIMAL  shift, and go to state 308
    PARENL   shift, and go to state 309

    math_term       go to state 310
    math_op_muldiv  go to state 311


State 272

   64 math_op: math_op SUB • math_op_muldiv

    ID       shift, and go to state 306
    INTEGER  shift, and go to state 307
    DECIMAL  shift, and go to state 308
    PARENL   shift, and go to state 309

    math_term       go to state 310
    math_op_muldiv  go to state 312


State 273

   67 math_op_muldiv: math_op_muldiv MULT • math_term

    ID       shift, and go to state 306
    INTEGER  shift, and go to state 307
    DECIMAL  shift, and go to state 308
    PARENL   shift, and go to state 309

    math_term  go to state 313


State 274

   66 math_op_muldiv: math_op_muldiv DIV • math_term

    ID       shift, and go to state 306
    INTEGER  shift, and go to state 307
    DECIMAL  shift, and go to state 308
    PARENL   shift, and go to state 309

    math_term  go to state 314


State 275

   45 var_dec: TYPE ID • SEMIC

    SEMIC  shift, and go to state 315


State 276

   46 io_ops: READ PARENL • PARENR SEMIC
   47       | READ PARENL • ID PARENR SEMIC

    ID      shift, and go to state 316
    PARENR  shift, and go to state 317


State 277

   48 io_ops: WRITE PARENL • expression PARENR SEMIC

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 318
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 278

   49 io_ops: WRITELN PARENL • expression PARENR SEMIC

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 319
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 279

   44 ret_st: RETURN expression • SEMIC

    SEMIC  shift, and go to state 320


State 280

   28 basic_ops: for_statement STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 321


State 281

   30 basic_ops: forall_statement STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 322


State 282

   29 basic_ops: forall_statement set_op • SEMIC

    SEMIC  shift, and go to state 323


State 283

   37 if_ops: if_statement STFUNC • statement_list ENDFUNC
   38       | if_statement STFUNC • statement_list ENDFUNC else_statement

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 324


State 284

   35 if_ops: if_statement statement •
   36       | if_statement statement • else_statement

    ELSE  shift, and go to state 325

    ID          reduce using rule 35 (if_ops)
    TYPE        reduce using rule 35 (if_ops)
    STRING      reduce using rule 35 (if_ops)
    CHAR        reduce using rule 35 (if_ops)
    EMPTY       reduce using rule 35 (if_ops)
    ERRORTOKEN  reduce using rule 35 (if_ops)
    INTEGER     reduce using rule 35 (if_ops)
    DECIMAL     reduce using rule 35 (if_ops)
    NEG         reduce using rule 35 (if_ops)
    IF          reduce using rule 35 (if_ops)
    FOR         reduce using rule 35 (if_ops)
    READ        reduce using rule 35 (if_ops)
    WRITE       reduce using rule 35 (if_ops)
    WRITELN     reduce using rule 35 (if_ops)
    RETURN      reduce using rule 35 (if_ops)
    ISTYPE      reduce using rule 35 (if_ops)
    ADDSET      reduce using rule 35 (if_ops)
    REMOVE      reduce using rule 35 (if_ops)
    EXISTS      reduce using rule 35 (if_ops)
    FORALL      reduce using rule 35 (if_ops)
    ENDFUNC     reduce using rule 35 (if_ops)
    PARENL      reduce using rule 35 (if_ops)

    else_statement  go to state 326


State 285

   26 expression_statement: expression SEMIC •

    ID          reduce using rule 26 (expression_statement)
    TYPE        reduce using rule 26 (expression_statement)
    STRING      reduce using rule 26 (expression_statement)
    CHAR        reduce using rule 26 (expression_statement)
    EMPTY       reduce using rule 26 (expression_statement)
    ERRORTOKEN  reduce using rule 26 (expression_statement)
    INTEGER     reduce using rule 26 (expression_statement)
    DECIMAL     reduce using rule 26 (expression_statement)
    NEG         reduce using rule 26 (expression_statement)
    IF          reduce using rule 26 (expression_statement)
    ELSE        reduce using rule 26 (expression_statement)
    FOR         reduce using rule 26 (expression_statement)
    READ        reduce using rule 26 (expression_statement)
    WRITE       reduce using rule 26 (expression_statement)
    WRITELN     reduce using rule 26 (expression_statement)
    RETURN      reduce using rule 26 (expression_statement)
    ISTYPE      reduce using rule 26 (expression_statement)
    ADDSET      reduce using rule 26 (expression_statement)
    REMOVE      reduce using rule 26 (expression_statement)
    EXISTS      reduce using rule 26 (expression_statement)
    FORALL      reduce using rule 26 (expression_statement)
    ENDFUNC     reduce using rule 26 (expression_statement)
    PARENL      reduce using rule 26 (expression_statement)


State 286

   58 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 327


State 287

   26 expression_statement: expression SEMIC •

    ID          reduce using rule 26 (expression_statement)
    STRING      reduce using rule 26 (expression_statement)
    CHAR        reduce using rule 26 (expression_statement)
    EMPTY       reduce using rule 26 (expression_statement)
    ERRORTOKEN  reduce using rule 26 (expression_statement)
    INTEGER     reduce using rule 26 (expression_statement)
    DECIMAL     reduce using rule 26 (expression_statement)
    NEG         reduce using rule 26 (expression_statement)
    ISTYPE      reduce using rule 26 (expression_statement)
    ADDSET      reduce using rule 26 (expression_statement)
    REMOVE      reduce using rule 26 (expression_statement)
    EXISTS      reduce using rule 26 (expression_statement)
    PARENL      reduce using rule 26 (expression_statement)


State 288

   58 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 328


State 289

   58 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 329


State 290

   87 in_set: term IN expression •

    PARENR  reduce using rule 87 (in_set)


State 291

   91 assign_value: ID ASSIGN expression •

    PARENR  reduce using rule 91 (assign_value)


State 292

   85 func_call: ID PARENL args_list • PARENR
   88 args_list: args_list • COMMA term

    COMMA   shift, and go to state 155
    PARENR  shift, and go to state 330


State 293

   75 operation: ISTYPE PARENL expression • PARENR

    PARENR  shift, and go to state 331


State 294

   69 set_op: ADDSET PARENL set_op • PARENR

    PARENR  shift, and go to state 332


State 295

   70 set_op: REMOVE PARENL set_op • PARENR

    PARENR  shift, and go to state 333


State 296

   71 set_op: EXISTS PARENL set_op • PARENR

    PARENR  shift, and go to state 334


State 297

   58 math_term: PARENL expression PARENR •

    ADD        reduce using rule 58 (math_term)
    SUB        reduce using rule 58 (math_term)
    MULT       reduce using rule 58 (math_term)
    DIV        reduce using rule 58 (math_term)
    OR         reduce using rule 58 (math_term)
    AND        reduce using rule 58 (math_term)
    SMALLER    reduce using rule 58 (math_term)
    GREATER    reduce using rule 58 (math_term)
    SMALLEQ    reduce using rule 58 (math_term)
    GREATEQ    reduce using rule 58 (math_term)
    EQUALS     reduce using rule 58 (math_term)
    DIFFERENT  reduce using rule 58 (math_term)
    IN         reduce using rule 58 (math_term)
    PARENR     reduce using rule 58 (math_term)


State 298

   82 operation: term OR expression •

    PARENR  reduce using rule 82 (operation)


State 299

   83 operation: term AND expression •

    PARENR  reduce using rule 83 (operation)


State 300

   76 operation: term SMALLER expression •

    PARENR  reduce using rule 76 (operation)


State 301

   77 operation: term GREATER expression •

    PARENR  reduce using rule 77 (operation)


State 302

   78 operation: term SMALLEQ expression •

    PARENR  reduce using rule 78 (operation)


State 303

   79 operation: term GREATEQ expression •

    PARENR  reduce using rule 79 (operation)


State 304

   80 operation: term EQUALS expression •

    PARENR  reduce using rule 80 (operation)


State 305

   81 operation: term DIFFERENT expression •

    PARENR  reduce using rule 81 (operation)


State 306

   55 math_term: ID •

    ADD     reduce using rule 55 (math_term)
    SUB     reduce using rule 55 (math_term)
    MULT    reduce using rule 55 (math_term)
    DIV     reduce using rule 55 (math_term)
    PARENR  reduce using rule 55 (math_term)


State 307

   56 math_term: INTEGER •

    ADD     reduce using rule 56 (math_term)
    SUB     reduce using rule 56 (math_term)
    MULT    reduce using rule 56 (math_term)
    DIV     reduce using rule 56 (math_term)
    PARENR  reduce using rule 56 (math_term)


State 308

   57 math_term: DECIMAL •

    ADD     reduce using rule 57 (math_term)
    SUB     reduce using rule 57 (math_term)
    MULT    reduce using rule 57 (math_term)
    DIV     reduce using rule 57 (math_term)
    PARENR  reduce using rule 57 (math_term)


State 309

   58 math_term: PARENL • expression PARENR

    ID          shift, and go to state 186
    STRING      shift, and go to state 187
    CHAR        shift, and go to state 188
    EMPTY       shift, and go to state 189
    ERRORTOKEN  shift, and go to state 190
    INTEGER     shift, and go to state 191
    DECIMAL     shift, and go to state 192
    NEG         shift, and go to state 193
    ISTYPE      shift, and go to state 194
    ADDSET      shift, and go to state 195
    REMOVE      shift, and go to state 196
    EXISTS      shift, and go to state 197
    PARENL      shift, and go to state 198

    expression      go to state 335
    term            go to state 199
    math_term       go to state 200
    str_term        go to state 201
    math_op         go to state 202
    math_op_muldiv  go to state 203
    set_op          go to state 204
    operation       go to state 205
    func_call       go to state 206
    in_set          go to state 207
    assign_value    go to state 208


State 310

   68 math_op_muldiv: math_term •

    ADD     reduce using rule 68 (math_op_muldiv)
    SUB     reduce using rule 68 (math_op_muldiv)
    MULT    reduce using rule 68 (math_op_muldiv)
    DIV     reduce using rule 68 (math_op_muldiv)
    PARENR  reduce using rule 68 (math_op_muldiv)


State 311

   63 math_op: math_op ADD math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 273
    DIV   shift, and go to state 274

    ADD     reduce using rule 63 (math_op)
    SUB     reduce using rule 63 (math_op)
    PARENR  reduce using rule 63 (math_op)


State 312

   64 math_op: math_op SUB math_op_muldiv •
   66 math_op_muldiv: math_op_muldiv • DIV math_term
   67               | math_op_muldiv • MULT math_term

    MULT  shift, and go to state 273
    DIV   shift, and go to state 274

    ADD     reduce using rule 64 (math_op)
    SUB     reduce using rule 64 (math_op)
    PARENR  reduce using rule 64 (math_op)


State 313

   67 math_op_muldiv: math_op_muldiv MULT math_term •

    ADD     reduce using rule 67 (math_op_muldiv)
    SUB     reduce using rule 67 (math_op_muldiv)
    MULT    reduce using rule 67 (math_op_muldiv)
    DIV     reduce using rule 67 (math_op_muldiv)
    PARENR  reduce using rule 67 (math_op_muldiv)


State 314

   66 math_op_muldiv: math_op_muldiv DIV math_term •

    ADD     reduce using rule 66 (math_op_muldiv)
    SUB     reduce using rule 66 (math_op_muldiv)
    MULT    reduce using rule 66 (math_op_muldiv)
    DIV     reduce using rule 66 (math_op_muldiv)
    PARENR  reduce using rule 66 (math_op_muldiv)


State 315

   45 var_dec: TYPE ID SEMIC •

    ID          reduce using rule 45 (var_dec)
    TYPE        reduce using rule 45 (var_dec)
    STRING      reduce using rule 45 (var_dec)
    CHAR        reduce using rule 45 (var_dec)
    EMPTY       reduce using rule 45 (var_dec)
    ERRORTOKEN  reduce using rule 45 (var_dec)
    INTEGER     reduce using rule 45 (var_dec)
    DECIMAL     reduce using rule 45 (var_dec)
    NEG         reduce using rule 45 (var_dec)
    IF          reduce using rule 45 (var_dec)
    ELSE        reduce using rule 45 (var_dec)
    FOR         reduce using rule 45 (var_dec)
    READ        reduce using rule 45 (var_dec)
    WRITE       reduce using rule 45 (var_dec)
    WRITELN     reduce using rule 45 (var_dec)
    RETURN      reduce using rule 45 (var_dec)
    ISTYPE      reduce using rule 45 (var_dec)
    ADDSET      reduce using rule 45 (var_dec)
    REMOVE      reduce using rule 45 (var_dec)
    EXISTS      reduce using rule 45 (var_dec)
    FORALL      reduce using rule 45 (var_dec)
    ENDFUNC     reduce using rule 45 (var_dec)
    PARENL      reduce using rule 45 (var_dec)


State 316

   47 io_ops: READ PARENL ID • PARENR SEMIC

    PARENR  shift, and go to state 336


State 317

   46 io_ops: READ PARENL PARENR • SEMIC

    SEMIC  shift, and go to state 337


State 318

   48 io_ops: WRITE PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 338


State 319

   49 io_ops: WRITELN PARENL expression • PARENR SEMIC

    PARENR  shift, and go to state 339


State 320

   44 ret_st: RETURN expression SEMIC •

    ID          reduce using rule 44 (ret_st)
    TYPE        reduce using rule 44 (ret_st)
    STRING      reduce using rule 44 (ret_st)
    CHAR        reduce using rule 44 (ret_st)
    EMPTY       reduce using rule 44 (ret_st)
    ERRORTOKEN  reduce using rule 44 (ret_st)
    INTEGER     reduce using rule 44 (ret_st)
    DECIMAL     reduce using rule 44 (ret_st)
    NEG         reduce using rule 44 (ret_st)
    IF          reduce using rule 44 (ret_st)
    ELSE        reduce using rule 44 (ret_st)
    FOR         reduce using rule 44 (ret_st)
    READ        reduce using rule 44 (ret_st)
    WRITE       reduce using rule 44 (ret_st)
    WRITELN     reduce using rule 44 (ret_st)
    RETURN      reduce using rule 44 (ret_st)
    ISTYPE      reduce using rule 44 (ret_st)
    ADDSET      reduce using rule 44 (ret_st)
    REMOVE      reduce using rule 44 (ret_st)
    EXISTS      reduce using rule 44 (ret_st)
    FORALL      reduce using rule 44 (ret_st)
    ENDFUNC     reduce using rule 44 (ret_st)
    PARENL      reduce using rule 44 (ret_st)


State 321

   18 statement_list: statement_list • statement
   28 basic_ops: for_statement STFUNC statement_list • ENDFUNC

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 340
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 322

   18 statement_list: statement_list • statement
   30 basic_ops: forall_statement STFUNC statement_list • ENDFUNC

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 341
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 323

   29 basic_ops: forall_statement set_op SEMIC •

    ID          reduce using rule 29 (basic_ops)
    TYPE        reduce using rule 29 (basic_ops)
    STRING      reduce using rule 29 (basic_ops)
    CHAR        reduce using rule 29 (basic_ops)
    EMPTY       reduce using rule 29 (basic_ops)
    ERRORTOKEN  reduce using rule 29 (basic_ops)
    INTEGER     reduce using rule 29 (basic_ops)
    DECIMAL     reduce using rule 29 (basic_ops)
    NEG         reduce using rule 29 (basic_ops)
    IF          reduce using rule 29 (basic_ops)
    ELSE        reduce using rule 29 (basic_ops)
    FOR         reduce using rule 29 (basic_ops)
    READ        reduce using rule 29 (basic_ops)
    WRITE       reduce using rule 29 (basic_ops)
    WRITELN     reduce using rule 29 (basic_ops)
    RETURN      reduce using rule 29 (basic_ops)
    ISTYPE      reduce using rule 29 (basic_ops)
    ADDSET      reduce using rule 29 (basic_ops)
    REMOVE      reduce using rule 29 (basic_ops)
    EXISTS      reduce using rule 29 (basic_ops)
    FORALL      reduce using rule 29 (basic_ops)
    ENDFUNC     reduce using rule 29 (basic_ops)
    PARENL      reduce using rule 29 (basic_ops)


State 324

   18 statement_list: statement_list • statement
   37 if_ops: if_statement STFUNC statement_list • ENDFUNC
   38       | if_statement STFUNC statement_list • ENDFUNC else_statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 342
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 325

   41 else_statement: ELSE • $@5 statement
   43               | ELSE • $@6 STFUNC statement_list ENDFUNC

    ID          reduce using rule 40 ($@5)
    TYPE        reduce using rule 40 ($@5)
    STRING      reduce using rule 40 ($@5)
    CHAR        reduce using rule 40 ($@5)
    EMPTY       reduce using rule 40 ($@5)
    ERRORTOKEN  reduce using rule 40 ($@5)
    INTEGER     reduce using rule 40 ($@5)
    DECIMAL     reduce using rule 40 ($@5)
    NEG         reduce using rule 40 ($@5)
    IF          reduce using rule 40 ($@5)
    FOR         reduce using rule 40 ($@5)
    READ        reduce using rule 40 ($@5)
    WRITE       reduce using rule 40 ($@5)
    WRITELN     reduce using rule 40 ($@5)
    RETURN      reduce using rule 40 ($@5)
    ISTYPE      reduce using rule 40 ($@5)
    ADDSET      reduce using rule 40 ($@5)
    REMOVE      reduce using rule 40 ($@5)
    EXISTS      reduce using rule 40 ($@5)
    FORALL      reduce using rule 40 ($@5)
    STFUNC      reduce using rule 42 ($@6)
    PARENL      reduce using rule 40 ($@5)

    $@5  go to state 343
    $@6  go to state 344


State 326

   36 if_ops: if_statement statement else_statement •

    ID          reduce using rule 36 (if_ops)
    TYPE        reduce using rule 36 (if_ops)
    STRING      reduce using rule 36 (if_ops)
    CHAR        reduce using rule 36 (if_ops)
    EMPTY       reduce using rule 36 (if_ops)
    ERRORTOKEN  reduce using rule 36 (if_ops)
    INTEGER     reduce using rule 36 (if_ops)
    DECIMAL     reduce using rule 36 (if_ops)
    NEG         reduce using rule 36 (if_ops)
    IF          reduce using rule 36 (if_ops)
    ELSE        reduce using rule 36 (if_ops)
    FOR         reduce using rule 36 (if_ops)
    READ        reduce using rule 36 (if_ops)
    WRITE       reduce using rule 36 (if_ops)
    WRITELN     reduce using rule 36 (if_ops)
    RETURN      reduce using rule 36 (if_ops)
    ISTYPE      reduce using rule 36 (if_ops)
    ADDSET      reduce using rule 36 (if_ops)
    REMOVE      reduce using rule 36 (if_ops)
    EXISTS      reduce using rule 36 (if_ops)
    FORALL      reduce using rule 36 (if_ops)
    ENDFUNC     reduce using rule 36 (if_ops)
    PARENL      reduce using rule 36 (if_ops)


State 327

   58 math_term: PARENL expression PARENR •

    COMMA   reduce using rule 58 (math_term)
    PARENR  reduce using rule 58 (math_term)


State 328

   58 math_term: PARENL expression PARENR •

    IN  reduce using rule 58 (math_term)


State 329

   58 math_term: PARENL expression PARENR •

    ADD    reduce using rule 58 (math_term)
    SUB    reduce using rule 58 (math_term)
    MULT   reduce using rule 58 (math_term)
    DIV    reduce using rule 58 (math_term)
    SEMIC  reduce using rule 58 (math_term)


State 330

   85 func_call: ID PARENL args_list PARENR •

    PARENR  reduce using rule 85 (func_call)


State 331

   75 operation: ISTYPE PARENL expression PARENR •

    PARENR  reduce using rule 75 (operation)


State 332

   69 set_op: ADDSET PARENL set_op PARENR •

    PARENR  reduce using rule 69 (set_op)


State 333

   70 set_op: REMOVE PARENL set_op PARENR •

    PARENR  reduce using rule 70 (set_op)


State 334

   71 set_op: EXISTS PARENL set_op PARENR •

    PARENR  reduce using rule 71 (set_op)


State 335

   58 math_term: PARENL expression • PARENR

    PARENR  shift, and go to state 345


State 336

   47 io_ops: READ PARENL ID PARENR • SEMIC

    SEMIC  shift, and go to state 346


State 337

   46 io_ops: READ PARENL PARENR SEMIC •

    ID          reduce using rule 46 (io_ops)
    TYPE        reduce using rule 46 (io_ops)
    STRING      reduce using rule 46 (io_ops)
    CHAR        reduce using rule 46 (io_ops)
    EMPTY       reduce using rule 46 (io_ops)
    ERRORTOKEN  reduce using rule 46 (io_ops)
    INTEGER     reduce using rule 46 (io_ops)
    DECIMAL     reduce using rule 46 (io_ops)
    NEG         reduce using rule 46 (io_ops)
    IF          reduce using rule 46 (io_ops)
    ELSE        reduce using rule 46 (io_ops)
    FOR         reduce using rule 46 (io_ops)
    READ        reduce using rule 46 (io_ops)
    WRITE       reduce using rule 46 (io_ops)
    WRITELN     reduce using rule 46 (io_ops)
    RETURN      reduce using rule 46 (io_ops)
    ISTYPE      reduce using rule 46 (io_ops)
    ADDSET      reduce using rule 46 (io_ops)
    REMOVE      reduce using rule 46 (io_ops)
    EXISTS      reduce using rule 46 (io_ops)
    FORALL      reduce using rule 46 (io_ops)
    ENDFUNC     reduce using rule 46 (io_ops)
    PARENL      reduce using rule 46 (io_ops)


State 338

   48 io_ops: WRITE PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 347


State 339

   49 io_ops: WRITELN PARENL expression PARENR • SEMIC

    SEMIC  shift, and go to state 348


State 340

   28 basic_ops: for_statement STFUNC statement_list ENDFUNC •

    ID          reduce using rule 28 (basic_ops)
    TYPE        reduce using rule 28 (basic_ops)
    STRING      reduce using rule 28 (basic_ops)
    CHAR        reduce using rule 28 (basic_ops)
    EMPTY       reduce using rule 28 (basic_ops)
    ERRORTOKEN  reduce using rule 28 (basic_ops)
    INTEGER     reduce using rule 28 (basic_ops)
    DECIMAL     reduce using rule 28 (basic_ops)
    NEG         reduce using rule 28 (basic_ops)
    IF          reduce using rule 28 (basic_ops)
    ELSE        reduce using rule 28 (basic_ops)
    FOR         reduce using rule 28 (basic_ops)
    READ        reduce using rule 28 (basic_ops)
    WRITE       reduce using rule 28 (basic_ops)
    WRITELN     reduce using rule 28 (basic_ops)
    RETURN      reduce using rule 28 (basic_ops)
    ISTYPE      reduce using rule 28 (basic_ops)
    ADDSET      reduce using rule 28 (basic_ops)
    REMOVE      reduce using rule 28 (basic_ops)
    EXISTS      reduce using rule 28 (basic_ops)
    FORALL      reduce using rule 28 (basic_ops)
    ENDFUNC     reduce using rule 28 (basic_ops)
    PARENL      reduce using rule 28 (basic_ops)


State 341

   30 basic_ops: forall_statement STFUNC statement_list ENDFUNC •

    ID          reduce using rule 30 (basic_ops)
    TYPE        reduce using rule 30 (basic_ops)
    STRING      reduce using rule 30 (basic_ops)
    CHAR        reduce using rule 30 (basic_ops)
    EMPTY       reduce using rule 30 (basic_ops)
    ERRORTOKEN  reduce using rule 30 (basic_ops)
    INTEGER     reduce using rule 30 (basic_ops)
    DECIMAL     reduce using rule 30 (basic_ops)
    NEG         reduce using rule 30 (basic_ops)
    IF          reduce using rule 30 (basic_ops)
    ELSE        reduce using rule 30 (basic_ops)
    FOR         reduce using rule 30 (basic_ops)
    READ        reduce using rule 30 (basic_ops)
    WRITE       reduce using rule 30 (basic_ops)
    WRITELN     reduce using rule 30 (basic_ops)
    RETURN      reduce using rule 30 (basic_ops)
    ISTYPE      reduce using rule 30 (basic_ops)
    ADDSET      reduce using rule 30 (basic_ops)
    REMOVE      reduce using rule 30 (basic_ops)
    EXISTS      reduce using rule 30 (basic_ops)
    FORALL      reduce using rule 30 (basic_ops)
    ENDFUNC     reduce using rule 30 (basic_ops)
    PARENL      reduce using rule 30 (basic_ops)


State 342

   37 if_ops: if_statement STFUNC statement_list ENDFUNC •
   38       | if_statement STFUNC statement_list ENDFUNC • else_statement

    ELSE  shift, and go to state 325

    ID          reduce using rule 37 (if_ops)
    TYPE        reduce using rule 37 (if_ops)
    STRING      reduce using rule 37 (if_ops)
    CHAR        reduce using rule 37 (if_ops)
    EMPTY       reduce using rule 37 (if_ops)
    ERRORTOKEN  reduce using rule 37 (if_ops)
    INTEGER     reduce using rule 37 (if_ops)
    DECIMAL     reduce using rule 37 (if_ops)
    NEG         reduce using rule 37 (if_ops)
    IF          reduce using rule 37 (if_ops)
    FOR         reduce using rule 37 (if_ops)
    READ        reduce using rule 37 (if_ops)
    WRITE       reduce using rule 37 (if_ops)
    WRITELN     reduce using rule 37 (if_ops)
    RETURN      reduce using rule 37 (if_ops)
    ISTYPE      reduce using rule 37 (if_ops)
    ADDSET      reduce using rule 37 (if_ops)
    REMOVE      reduce using rule 37 (if_ops)
    EXISTS      reduce using rule 37 (if_ops)
    FORALL      reduce using rule 37 (if_ops)
    ENDFUNC     reduce using rule 37 (if_ops)
    PARENL      reduce using rule 37 (if_ops)

    else_statement  go to state 349


State 343

   41 else_statement: ELSE $@5 • statement

    ID          shift, and go to state 34
    TYPE        shift, and go to state 213
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 214
    WRITE       shift, and go to state 215
    WRITELN     shift, and go to state 216
    RETURN      shift, and go to state 217
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    PARENL      shift, and go to state 55

    statement             go to state 350
    expression_statement  go to state 218
    basic_ops             go to state 219
    for_statement         go to state 220
    forall_statement      go to state 221
    if_ops                go to state 222
    if_statement          go to state 223
    ret_st                go to state 224
    var_dec               go to state 225
    io_ops                go to state 226
    expression            go to state 227
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 344

   43 else_statement: ELSE $@6 • STFUNC statement_list ENDFUNC

    STFUNC  shift, and go to state 351


State 345

   58 math_term: PARENL expression PARENR •

    ADD     reduce using rule 58 (math_term)
    SUB     reduce using rule 58 (math_term)
    MULT    reduce using rule 58 (math_term)
    DIV     reduce using rule 58 (math_term)
    PARENR  reduce using rule 58 (math_term)


State 346

   47 io_ops: READ PARENL ID PARENR SEMIC •

    ID          reduce using rule 47 (io_ops)
    TYPE        reduce using rule 47 (io_ops)
    STRING      reduce using rule 47 (io_ops)
    CHAR        reduce using rule 47 (io_ops)
    EMPTY       reduce using rule 47 (io_ops)
    ERRORTOKEN  reduce using rule 47 (io_ops)
    INTEGER     reduce using rule 47 (io_ops)
    DECIMAL     reduce using rule 47 (io_ops)
    NEG         reduce using rule 47 (io_ops)
    IF          reduce using rule 47 (io_ops)
    ELSE        reduce using rule 47 (io_ops)
    FOR         reduce using rule 47 (io_ops)
    READ        reduce using rule 47 (io_ops)
    WRITE       reduce using rule 47 (io_ops)
    WRITELN     reduce using rule 47 (io_ops)
    RETURN      reduce using rule 47 (io_ops)
    ISTYPE      reduce using rule 47 (io_ops)
    ADDSET      reduce using rule 47 (io_ops)
    REMOVE      reduce using rule 47 (io_ops)
    EXISTS      reduce using rule 47 (io_ops)
    FORALL      reduce using rule 47 (io_ops)
    ENDFUNC     reduce using rule 47 (io_ops)
    PARENL      reduce using rule 47 (io_ops)


State 347

   48 io_ops: WRITE PARENL expression PARENR SEMIC •

    ID          reduce using rule 48 (io_ops)
    TYPE        reduce using rule 48 (io_ops)
    STRING      reduce using rule 48 (io_ops)
    CHAR        reduce using rule 48 (io_ops)
    EMPTY       reduce using rule 48 (io_ops)
    ERRORTOKEN  reduce using rule 48 (io_ops)
    INTEGER     reduce using rule 48 (io_ops)
    DECIMAL     reduce using rule 48 (io_ops)
    NEG         reduce using rule 48 (io_ops)
    IF          reduce using rule 48 (io_ops)
    ELSE        reduce using rule 48 (io_ops)
    FOR         reduce using rule 48 (io_ops)
    READ        reduce using rule 48 (io_ops)
    WRITE       reduce using rule 48 (io_ops)
    WRITELN     reduce using rule 48 (io_ops)
    RETURN      reduce using rule 48 (io_ops)
    ISTYPE      reduce using rule 48 (io_ops)
    ADDSET      reduce using rule 48 (io_ops)
    REMOVE      reduce using rule 48 (io_ops)
    EXISTS      reduce using rule 48 (io_ops)
    FORALL      reduce using rule 48 (io_ops)
    ENDFUNC     reduce using rule 48 (io_ops)
    PARENL      reduce using rule 48 (io_ops)


State 348

   49 io_ops: WRITELN PARENL expression PARENR SEMIC •

    ID          reduce using rule 49 (io_ops)
    TYPE        reduce using rule 49 (io_ops)
    STRING      reduce using rule 49 (io_ops)
    CHAR        reduce using rule 49 (io_ops)
    EMPTY       reduce using rule 49 (io_ops)
    ERRORTOKEN  reduce using rule 49 (io_ops)
    INTEGER     reduce using rule 49 (io_ops)
    DECIMAL     reduce using rule 49 (io_ops)
    NEG         reduce using rule 49 (io_ops)
    IF          reduce using rule 49 (io_ops)
    ELSE        reduce using rule 49 (io_ops)
    FOR         reduce using rule 49 (io_ops)
    READ        reduce using rule 49 (io_ops)
    WRITE       reduce using rule 49 (io_ops)
    WRITELN     reduce using rule 49 (io_ops)
    RETURN      reduce using rule 49 (io_ops)
    ISTYPE      reduce using rule 49 (io_ops)
    ADDSET      reduce using rule 49 (io_ops)
    REMOVE      reduce using rule 49 (io_ops)
    EXISTS      reduce using rule 49 (io_ops)
    FORALL      reduce using rule 49 (io_ops)
    ENDFUNC     reduce using rule 49 (io_ops)
    PARENL      reduce using rule 49 (io_ops)


State 349

   38 if_ops: if_statement STFUNC statement_list ENDFUNC else_statement •

    ID          reduce using rule 38 (if_ops)
    TYPE        reduce using rule 38 (if_ops)
    STRING      reduce using rule 38 (if_ops)
    CHAR        reduce using rule 38 (if_ops)
    EMPTY       reduce using rule 38 (if_ops)
    ERRORTOKEN  reduce using rule 38 (if_ops)
    INTEGER     reduce using rule 38 (if_ops)
    DECIMAL     reduce using rule 38 (if_ops)
    NEG         reduce using rule 38 (if_ops)
    IF          reduce using rule 38 (if_ops)
    ELSE        reduce using rule 38 (if_ops)
    FOR         reduce using rule 38 (if_ops)
    READ        reduce using rule 38 (if_ops)
    WRITE       reduce using rule 38 (if_ops)
    WRITELN     reduce using rule 38 (if_ops)
    RETURN      reduce using rule 38 (if_ops)
    ISTYPE      reduce using rule 38 (if_ops)
    ADDSET      reduce using rule 38 (if_ops)
    REMOVE      reduce using rule 38 (if_ops)
    EXISTS      reduce using rule 38 (if_ops)
    FORALL      reduce using rule 38 (if_ops)
    ENDFUNC     reduce using rule 38 (if_ops)
    PARENL      reduce using rule 38 (if_ops)


State 350

   41 else_statement: ELSE $@5 statement •

    ID          reduce using rule 41 (else_statement)
    TYPE        reduce using rule 41 (else_statement)
    STRING      reduce using rule 41 (else_statement)
    CHAR        reduce using rule 41 (else_statement)
    EMPTY       reduce using rule 41 (else_statement)
    ERRORTOKEN  reduce using rule 41 (else_statement)
    INTEGER     reduce using rule 41 (else_statement)
    DECIMAL     reduce using rule 41 (else_statement)
    NEG         reduce using rule 41 (else_statement)
    IF          reduce using rule 41 (else_statement)
    ELSE        reduce using rule 41 (else_statement)
    FOR         reduce using rule 41 (else_statement)
    READ        reduce using rule 41 (else_statement)
    WRITE       reduce using rule 41 (else_statement)
    WRITELN     reduce using rule 41 (else_statement)
    RETURN      reduce using rule 41 (else_statement)
    ISTYPE      reduce using rule 41 (else_statement)
    ADDSET      reduce using rule 41 (else_statement)
    REMOVE      reduce using rule 41 (else_statement)
    EXISTS      reduce using rule 41 (else_statement)
    FORALL      reduce using rule 41 (else_statement)
    ENDFUNC     reduce using rule 41 (else_statement)
    PARENL      reduce using rule 41 (else_statement)


State 351

   43 else_statement: ELSE $@6 STFUNC • statement_list ENDFUNC

    error  shift, and go to state 31

    ID          reduce using rule 19 (statement_list)
    TYPE        reduce using rule 19 (statement_list)
    STRING      reduce using rule 19 (statement_list)
    CHAR        reduce using rule 19 (statement_list)
    EMPTY       reduce using rule 19 (statement_list)
    ERRORTOKEN  reduce using rule 19 (statement_list)
    INTEGER     reduce using rule 19 (statement_list)
    DECIMAL     reduce using rule 19 (statement_list)
    NEG         reduce using rule 19 (statement_list)
    IF          reduce using rule 19 (statement_list)
    FOR         reduce using rule 19 (statement_list)
    READ        reduce using rule 19 (statement_list)
    WRITE       reduce using rule 19 (statement_list)
    WRITELN     reduce using rule 19 (statement_list)
    RETURN      reduce using rule 19 (statement_list)
    ISTYPE      reduce using rule 19 (statement_list)
    ADDSET      reduce using rule 19 (statement_list)
    REMOVE      reduce using rule 19 (statement_list)
    EXISTS      reduce using rule 19 (statement_list)
    FORALL      reduce using rule 19 (statement_list)
    ENDFUNC     reduce using rule 19 (statement_list)
    PARENL      reduce using rule 19 (statement_list)

    statement_list  go to state 352


State 352

   18 statement_list: statement_list • statement
   43 else_statement: ELSE $@6 STFUNC statement_list • ENDFUNC

    ID          shift, and go to state 34
    TYPE        shift, and go to state 35
    STRING      shift, and go to state 36
    CHAR        shift, and go to state 37
    EMPTY       shift, and go to state 38
    ERRORTOKEN  shift, and go to state 39
    INTEGER     shift, and go to state 40
    DECIMAL     shift, and go to state 41
    NEG         shift, and go to state 42
    IF          shift, and go to state 43
    FOR         shift, and go to state 44
    READ        shift, and go to state 45
    WRITE       shift, and go to state 46
    WRITELN     shift, and go to state 47
    RETURN      shift, and go to state 48
    ISTYPE      shift, and go to state 49
    ADDSET      shift, and go to state 50
    REMOVE      shift, and go to state 51
    EXISTS      shift, and go to state 52
    FORALL      shift, and go to state 53
    ENDFUNC     shift, and go to state 353
    PARENL      shift, and go to state 55

    statement             go to state 56
    expression_statement  go to state 57
    basic_ops             go to state 58
    for_statement         go to state 59
    forall_statement      go to state 60
    if_ops                go to state 61
    if_statement          go to state 62
    ret_st                go to state 63
    var_dec               go to state 64
    io_ops                go to state 65
    expression            go to state 66
    term                  go to state 67
    math_term             go to state 68
    str_term              go to state 69
    math_op               go to state 70
    math_op_muldiv        go to state 71
    set_op                go to state 72
    operation             go to state 73
    func_call             go to state 74
    in_set                go to state 75
    assign_value          go to state 76


State 353

   43 else_statement: ELSE $@6 STFUNC statement_list ENDFUNC •

    ID          reduce using rule 43 (else_statement)
    TYPE        reduce using rule 43 (else_statement)
    STRING      reduce using rule 43 (else_statement)
    CHAR        reduce using rule 43 (else_statement)
    EMPTY       reduce using rule 43 (else_statement)
    ERRORTOKEN  reduce using rule 43 (else_statement)
    INTEGER     reduce using rule 43 (else_statement)
    DECIMAL     reduce using rule 43 (else_statement)
    NEG         reduce using rule 43 (else_statement)
    IF          reduce using rule 43 (else_statement)
    ELSE        reduce using rule 43 (else_statement)
    FOR         reduce using rule 43 (else_statement)
    READ        reduce using rule 43 (else_statement)
    WRITE       reduce using rule 43 (else_statement)
    WRITELN     reduce using rule 43 (else_statement)
    RETURN      reduce using rule 43 (else_statement)
    ISTYPE      reduce using rule 43 (else_statement)
    ADDSET      reduce using rule 43 (else_statement)
    REMOVE      reduce using rule 43 (else_statement)
    EXISTS      reduce using rule 43 (else_statement)
    FORALL      reduce using rule 43 (else_statement)
    ENDFUNC     reduce using rule 43 (else_statement)
    PARENL      reduce using rule 43 (else_statement)
